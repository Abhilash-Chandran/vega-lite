{"version":3,"file":"ruleforrangedline.test.js","sourceRoot":"","sources":["../../../test/normalize/ruleforrangedline.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,2BAA2B,CAAC;AAGpD,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IAC3C,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;QACtE,MAAM,IAAI,GAAqB;YAC7B,IAAI,EAAE,EAAC,GAAG,EAAE,iBAAiB,EAAE,MAAM,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,EAAC;YACrD,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE;gBACR,CAAC,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAC;gBACpC,CAAC,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,cAAc,EAAC;gBACzC,EAAE,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAC;aACvC;SACF,CAAC;QAEF,MAAM,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QACvC,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,mBACzB,IAAI,IACP,IAAI,EAAE,MAAM,IACZ,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {normalize} from '../../src/normalize/index';\nimport {TopLevelUnitSpec} from '../../src/spec/unit';\n\ndescribe('RuleForRangedLineNormalizer', () => {\n  it('correctly normalizes line with rule where there is x2 or y2.', () => {\n    const spec: TopLevelUnitSpec = {\n      data: {url: 'data/stocks.csv', format: {type: 'csv'}},\n      mark: 'line',\n      encoding: {\n        x: {field: 'date', type: 'temporal'},\n        y: {field: 'price', type: 'quantitative'},\n        x2: {field: 'date2', type: 'temporal'}\n      }\n    };\n\n    const normalizedSpec = normalize(spec);\n    expect(normalizedSpec).toEqual({\n      ...spec,\n      mark: 'rule'\n    });\n  });\n});\n"]}