{"version":3,"file":"flatten.test.js","sourceRoot":"","sources":["../../../../test/compile/data/flatten.test.ts"],"names":[],"mappings":"AAAA,8BAA8B;AAE9B,OAAO,EAAC,oBAAoB,EAAC,MAAM,mCAAmC,CAAC;AAGvE,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACpC,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAC7C,MAAM,SAAS,GAAc;gBAC3B,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;gBACnB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aACf,CAAC;YACF,MAAM,OAAO,GAAG,IAAI,oBAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC1D,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC;gBACjC,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;gBAClB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aACf,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;YAC1C,MAAM,SAAS,GAAc;gBAC3B,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aACpB,CAAC;YACF,MAAM,OAAO,GAAG,IAAI,oBAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC1D,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC;gBACjC,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;gBAClB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aACf,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;YAC1C,MAAM,SAAS,GAAc;gBAC3B,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;gBACnB,EAAE,EAAE,CAAC,GAAG,CAAC;aACV,CAAC;YACF,MAAM,OAAO,GAAG,IAAI,oBAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC1D,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC;gBACjC,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;gBAClB,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aACf,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAC9C,MAAM,SAAS,GAAc;gBAC3B,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aACpB,CAAC;YACF,MAAM,OAAO,GAAG,IAAI,oBAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC1D,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;YAC1C,MAAM,SAAS,GAAc;gBAC3B,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aACpB,CAAC;YACF,MAAM,OAAO,GAAG,IAAI,oBAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC1D,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* tslint:disable:quotemark */\n\nimport {FlattenTransformNode} from '../../../src/compile/data/flatten';\nimport {Transform} from '../../../src/transform';\n\ndescribe('compile/data/flatten', () => {\n  describe('FlattenTransformNode', () => {\n    it('should return a proper vg transform', () => {\n      const transform: Transform = {\n        flatten: ['a', 'b'],\n        as: ['a', 'b']\n      };\n      const flatten = new FlattenTransformNode(null, transform);\n      expect(flatten.assemble()).toEqual({\n        type: 'flatten',\n        fields: ['a', 'b'],\n        as: ['a', 'b']\n      });\n    });\n\n    it('should handle missing \"as\" field', () => {\n      const transform: Transform = {\n        flatten: ['a', 'b']\n      };\n      const flatten = new FlattenTransformNode(null, transform);\n      expect(flatten.assemble()).toEqual({\n        type: 'flatten',\n        fields: ['a', 'b'],\n        as: ['a', 'b']\n      });\n    });\n\n    it('should handle partial \"as\" field', () => {\n      const transform: Transform = {\n        flatten: ['a', 'b'],\n        as: ['A']\n      };\n      const flatten = new FlattenTransformNode(null, transform);\n      expect(flatten.assemble()).toEqual({\n        type: 'flatten',\n        fields: ['a', 'b'],\n        as: ['A', 'b']\n      });\n    });\n\n    it('should return proper produced fields', () => {\n      const transform: Transform = {\n        flatten: ['a', 'b']\n      };\n      const flatten = new FlattenTransformNode(null, transform);\n      expect(flatten.producedFields()).toEqual(new Set(['a', 'b']));\n    });\n\n    it('should generate the correct hash', () => {\n      const transform: Transform = {\n        flatten: ['a', 'b']\n      };\n      const flatten = new FlattenTransformNode(null, transform);\n      expect(flatten.hash()).toBe('FlattenTransform {\"as\":[\"a\",\"b\"],\"flatten\":[\"a\",\"b\"]}');\n    });\n  });\n});\n"]}