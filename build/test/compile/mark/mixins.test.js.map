{"version":3,"file":"mixins.test.js","sourceRoot":"","sources":["../../../../test/compile/mark/mixins.test.ts"],"names":[],"mappings":";AAAA,8BAA8B;;;AAE9B,6BAA4B;AAC5B,gDAA0C;AAC1C,2DAA+E;AAC/E,4DAAwC;AACxC,mCAAgE;AAEhE,QAAQ,CAAC,qBAAqB,EAAE;IAC9B,QAAQ,CAAC,SAAS,EAAE;QAClB,EAAE,CAAC,wCAAwC,EAAE;YAC3C,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,KAAK;gBACb,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,WAAW,EAAE,CAAC,EAAC;wBACzB,MAAM,EAAE,IAAI;qBACb;oBACD,OAAO,EAAE;wBACP,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAC;qBAC3C;iBACF;gBACD,MAAM,EAAE,EAAC,KAAK,EAAE,sBAAsB,EAAC;aACxC,CAAC,CAAC;YAEH,IAAM,WAAW,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YACjC,aAAM,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE;YAC/C,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,WAAW,EAAE,CAAC,EAAC;wBACzB,MAAM,EAAE,IAAI;qBACb;oBACD,OAAO,EAAE;wBACP,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAC;qBAC3C;iBACF;gBACD,MAAM,EAAE,EAAC,KAAK,EAAE,sBAAsB,EAAC;aACxC,CAAC,CAAC;YAEH,IAAM,WAAW,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YACjC,aAAM,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;YAC5E,aAAM,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE;YAChD,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,WAAW,EAAE,CAAC,EAAC;wBACzB,MAAM,EAAE,IAAI;qBACb;oBACD,QAAQ,EAAE;wBACR,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAC;qBAC3C;iBACF;gBACD,MAAM,EAAE,EAAC,KAAK,EAAE,sBAAsB,EAAC;aACxC,CAAC,CAAC;YAEH,IAAM,WAAW,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YACjC,aAAM,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC,CAAC;YAC7E,aAAM,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,CAAC,IAAI,CAAC,UAAC,MAAM;YACvD,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,WAAW,EAAE,CAAC,EAAC;wBACzB,MAAM,EAAE,IAAI;qBACb;oBACD,MAAM,EAAE;wBACN,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAC;qBAC3C;oBACD,OAAO,EAAE;wBACP,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAC;qBAC3C;iBACF;gBACD,MAAM,EAAE,EAAC,KAAK,EAAE,sBAAsB,EAAC;aACxC,CAAC,CAAC;YAEH,IAAM,WAAW,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YACjC,aAAM,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACvC,aAAM,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAC,CAAC,CAAC;YACzE,aAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,6CAA6C,EAAE,GAAG,CAAC,IAAI,CAAC,UAAC,MAAM;YAChE,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAC;gBACzC,UAAU,EAAE;oBACV,GAAG,EAAE;wBACH,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,WAAW,EAAE,CAAC,EAAC;wBACzB,MAAM,EAAE,IAAI;qBACb;oBACD,MAAM,EAAE;wBACN,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS;wBACpC,OAAO,EAAE,EAAC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAC;qBAC3C;iBACF;gBACD,MAAM,EAAE,EAAC,KAAK,EAAE,sBAAsB,EAAC;aACxC,CAAC,CAAC;YAEH,IAAM,WAAW,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YACjC,aAAM,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACvC,aAAM,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAC,CAAC,CAAC;YACzE,aAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,kDAAkD,EAAE,GAAG,CAAC,IAAI,CAAC,UAAC,MAAM;YACrE,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAC;gBAC3D,UAAU,EAAE;oBACV,GAAG,EAAE,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAC;oBACpD,GAAG,EAAE,EAAC,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAC;iBAC3D;aACF,CAAC,CAAC;YACH,IAAM,KAAK,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,aAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;YAChD,aAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,2DAA2D,EAAE,GAAG,CAAC,IAAI,CAAC,UAAC,MAAM;YAC9E,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAC;gBACzD,UAAU,EAAE;oBACV,GAAG,EAAE,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAC;oBACpD,GAAG,EAAE,EAAC,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAC;iBAC3D;aACF,CAAC,CAAC;YACH,IAAM,KAAK,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,aAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACjC,aAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,6BAA6B,EAAE;YAChC,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAC;gBACzC,UAAU,EAAE;oBACV,GAAG,EAAE,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAC;oBACpD,GAAG,EAAE,EAAC,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAC;iBAC3D;aACF,CAAC,CAAC;YACH,IAAM,KAAK,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,aAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE;YAC1E,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE;oBACV,GAAG,EAAE,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAC;oBACpD,GAAG,EAAE,EAAC,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAC;iBAC3D;gBACD,QAAQ,EAAE,EAAC,MAAM,EAAE,EAAC,OAAO,EAAE,MAAM,EAAC,EAAE,OAAO,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,EAAC;aACjE,CAAC,CAAC;YACH,IAAM,KAAK,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,aAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE;YAC3D,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE;oBACV,GAAG,EAAE,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAC;oBACpD,GAAG,EAAE,EAAC,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAC;iBAC3D;gBACD,QAAQ,EAAE,EAAC,MAAM,EAAE,EAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAC;aACvD,CAAC,CAAC;YACH,IAAM,KAAK,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,aAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE;YAC3D,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE;oBACV,GAAG,EAAE,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAC;oBACpD,GAAG,EAAE,EAAC,OAAO,EAAE,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAC;iBAC3D;gBACD,QAAQ,EAAE,EAAC,OAAO,EAAE,EAAC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAC;aACxD,CAAC,CAAC;YACH,IAAM,KAAK,GAAG,cAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,aAAM,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,EAAE;QACpB,EAAE,CAAC,gEAAgE,EAAE;YACnE,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE;oBACV,SAAS,EAAE;wBACT,EAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAC;wBAC/C,EAAC,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,cAAc,EAAC;qBAClD;iBACF;aACF,CAAC,CAAC;YACH,IAAM,KAAK,GAAG,gBAAO,CAAC,KAAK,CAAC,CAAC;YAC7B,aAAM,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,EAAC,MAAM,EAAE,oGAAoG,EAAC,CAAC,CAAC;QAClJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,YAAY,EAAE;QACrB,EAAE,CAAC,qCAAqC,EAAE;YACxC,IAAM,KAAK,GAAG,2CAAoC,CAAC;gBACjD,MAAM,EAAE;oBACN,KAAK,EAAE,mBAAmB;oBAC1B,QAAQ,EAAE;wBACR,MAAM,EAAE,KAAK;qBACd;iBACF;gBACD,MAAM,EAAE,OAAO;gBACf,UAAU,EAAE;oBACV,WAAW,EAAE;wBACX,OAAO,EAAE,WAAW;wBACpB,MAAM,EAAE,cAAc;qBACvB;oBACD,UAAU,EAAE;wBACV,OAAO,EAAE,UAAU;wBACnB,MAAM,EAAE,cAAc;qBACvB;iBACF;aACF,CAAC,CAAC;YAEH,CAAC,WAAC,EAAE,WAAC,CAAC,CAAC,OAAO,CAAC,UAAC,OAAO;gBACrB,IAAM,MAAM,GAAG,sBAAa,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;gBACxD,aAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* tslint:disable:quotemark */\n\nimport {assert} from 'chai';\nimport {X, Y} from '../../../src/channel';\nimport {color, pointPosition, tooltip} from '../../../src/compile/mark/mixins';\nimport * as log from '../../../src/log';\nimport {parseUnitModelWithScaleAndLayoutSize} from '../../util';\n\ndescribe('compile/mark/mixins', () => {\n  describe('color()', function() {\n    it('color should be mapped to fill for bar', function() {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"rangeStep\": 6},\n            \"axis\": null\n          },\n          \"color\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"range\": [\"#EA98D2\", \"#659CCA\"]}\n          }\n        },\n        \"data\": {\"url\": \"data/population.json\"}\n      });\n\n      const colorMixins = color(model);\n      assert.deepEqual(colorMixins.fill, {\"field\": \"gender\", \"scale\": \"color\"});\n    });\n\n    it('color should be mapped to stroke for point', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"point\",\n        \"encoding\": {\n          \"x\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"rangeStep\": 6},\n            \"axis\": null\n          },\n          \"color\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"range\": [\"#EA98D2\", \"#659CCA\"]}\n          }\n        },\n        \"data\": {\"url\": \"data/population.json\"}\n      });\n\n      const colorMixins = color(model);\n      assert.deepEqual(colorMixins.stroke, {\"field\": \"gender\", \"scale\": \"color\"});\n      assert.propertyVal(colorMixins.fill, 'value', \"transparent\");\n    });\n\n    it('add transparent fill when stroke is encoded', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"point\",\n        \"encoding\": {\n          \"x\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"rangeStep\": 6},\n            \"axis\": null\n          },\n          \"stroke\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"range\": [\"#EA98D2\", \"#659CCA\"]}\n          }\n        },\n        \"data\": {\"url\": \"data/population.json\"}\n      });\n\n      const colorMixins = color(model);\n      assert.deepEqual(colorMixins.stroke, {\"field\": \"gender\", \"scale\": \"stroke\"});\n      assert.propertyVal(colorMixins.fill, 'value', \"transparent\");\n    });\n\n    it('ignores color if fill is specified', log.wrap((logger) => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"point\",\n        \"encoding\": {\n          \"x\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"rangeStep\": 6},\n            \"axis\": null\n          },\n          \"fill\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"range\": [\"#EA98D2\", \"#659CCA\"]}\n          },\n          \"color\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"range\": [\"#EA98D2\", \"#659CCA\"]}\n          }\n        },\n        \"data\": {\"url\": \"data/population.json\"}\n      });\n\n      const colorMixins = color(model);\n      assert.isUndefined(colorMixins.stroke);\n      assert.deepEqual(colorMixins.fill, {\"field\": \"gender\", \"scale\": \"fill\"});\n      assert.equal(logger.warns[0], log.message.droppingColor('encoding', {fill: true}));\n    }));\n\n    it('ignores color property if fill is specified', log.wrap((logger) => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": {\"type\": \"point\", \"color\": \"red\"},\n        \"encoding\": {\n          \"x\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"rangeStep\": 6},\n            \"axis\": null\n          },\n          \"fill\": {\n            \"field\": \"gender\", \"type\": \"nominal\",\n            \"scale\": {\"range\": [\"#EA98D2\", \"#659CCA\"]}\n          }\n        },\n        \"data\": {\"url\": \"data/population.json\"}\n      });\n\n      const colorMixins = color(model);\n      assert.isUndefined(colorMixins.stroke);\n      assert.deepEqual(colorMixins.fill, {\"field\": \"gender\", \"scale\": \"fill\"});\n      assert.equal(logger.warns[0], log.message.droppingColor('property', {fill: true}));\n    }));\n\n    it('should apply stroke property over color property', log.wrap((logger) => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": {\"type\": \"point\", \"color\": \"red\", \"stroke\": \"blue\"},\n        \"encoding\": {\n          \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n          \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n        }\n      });\n      const props = color(model);\n      assert.deepEqual(props.stroke, {value: \"blue\"});\n      assert.equal(logger.warns[0], log.message.droppingColor('property', {stroke: true}));\n    }));\n\n    it('should apply ignore color property when fill is specified', log.wrap((logger) => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": {\"type\": \"point\", \"color\": \"red\", \"fill\": \"blue\"},\n        \"encoding\": {\n          \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n          \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n        }\n      });\n      const props = color(model);\n      assert.isUndefined(props.stroke);\n      assert.equal(logger.warns[0], log.message.droppingColor('property', {fill: true}));\n    }));\n\n    it('should apply color property', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": {\"type\": \"point\", \"color\": \"red\"},\n        \"encoding\": {\n          \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n          \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n        }\n      });\n      const props = color(model);\n      assert.deepEqual(props.stroke, {value: \"red\"});\n    });\n\n    it('should apply color from mark-specific config over general mark config', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"point\",\n        \"encoding\": {\n          \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n          \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n        },\n        \"config\": {\"mark\": {\"color\": \"blue\"}, \"point\": {\"color\": \"red\"}}\n      });\n      const props = color(model);\n      assert.deepEqual(props.stroke, {value: \"red\"});\n    });\n\n    it('should apply stroke mark config over color mark config', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"point\",\n        \"encoding\": {\n          \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n          \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n        },\n        \"config\": {\"mark\": {\"color\": \"red\", \"stroke\": \"blue\"}}\n      });\n      const props = color(model);\n      assert.deepEqual(props.stroke, {value: \"blue\"});\n    });\n\n    it('should apply stroke mark config over color mark config', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"point\",\n        \"encoding\": {\n          \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n          \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n        },\n        \"config\": {\"point\": {\"color\": \"red\", \"stroke\": \"blue\"}}\n      });\n      const props = color(model);\n      assert.deepEqual(props.stroke, {value: \"blue\"});\n    });\n  });\n\n  describe('tooltip()', () => {\n    it('generates tooltip object signal for an array of tooltip fields', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"mark\": \"point\",\n        \"encoding\": {\n          \"tooltip\": [\n            {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n            {\"field\": \"Acceleration\", \"type\": \"quantitative\"}\n          ]\n        }\n      });\n      const props = tooltip(model);\n      assert.deepEqual(props.tooltip, {signal: '{\"Horsepower\": format(datum[\"Horsepower\"], \"\"), \"Acceleration\": format(datum[\"Acceleration\"], \"\")}'});\n    });\n  });\n\n  describe('midPoint()', function () {\n    it('should return correctly for lat/lng', function () {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        \"data\": {\n          \"url\": \"data/zipcodes.csv\",\n          \"format\": {\n            \"type\": \"csv\"\n          }\n        },\n        \"mark\": \"point\",\n        \"encoding\": {\n          \"longitude\": {\n            \"field\": \"longitude\",\n            \"type\": \"quantitative\"\n          },\n          \"latitude\": {\n            \"field\": \"latitude\",\n            \"type\": \"quantitative\"\n          }\n        }\n      });\n\n      [X, Y].forEach((channel) => {\n        const mixins = pointPosition(channel, model, 'zeroOrMin');\n          assert.equal(mixins[channel].field, model.getName(channel));\n      });\n    });\n  });\n});\n"]}