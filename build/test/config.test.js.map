{"version":3,"file":"config.test.js","sourceRoot":"","sources":["../../test/config.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {Config, defaultConfig, isVgScheme, stripAndRedirectConfig} from '../src/config';\nimport {PRIMITIVE_MARKS} from '../src/mark';\nimport {duplicate} from '../src/util';\n\ndescribe('config', () => {\n  describe('stripAndRedirectConfig', () => {\n    const config: Config = {\n      ...defaultConfig,\n      mark: {\n        ...defaultConfig.mark,\n        opacity: 0.3\n      },\n      bar: {\n        opacity: 0.5,\n        ...defaultConfig.bar\n      },\n      view: {\n        fill: '#eee'\n      },\n      title: {\n        color: 'red',\n        fontWeight: 'bold'\n      },\n      boxplot: {\n        rule: {\n          fill: 'red'\n        },\n        median: {\n          color: 'white'\n        }\n      }\n    };\n    const copy = duplicate(config);\n    const output = stripAndRedirectConfig(config);\n\n    it('should not cause side-effect to the input', () => {\n      expect(config).toEqual(copy);\n    });\n\n    it('should remove VL only mark config but keep Vega mark config', () => {\n      expect(output.mark.color).not.toBeDefined();\n      expect(output.mark.opacity).toEqual(0.3);\n    });\n\n    it('should redirect mark config to style and remove VL only mark-specific config', () => {\n      for (const mark of PRIMITIVE_MARKS) {\n        expect(output[mark]).not.toBeDefined();\n      }\n      expect(output.style.bar['binSpacing']).not.toBeDefined();\n      expect(output.style.cell['width']).not.toBeDefined();\n      expect(output.style.cell['height']).not.toBeDefined();\n      expect(output.style.cell['fill']).toEqual('#eee');\n\n      expect(output.style.bar.opacity).toEqual(0.5);\n    });\n\n    it('should redirect config.title to config.style.group-title and rename color to fill', () => {\n      expect(output).not.toHaveProperty('title');\n      expect(output.style['group-title'].fontWeight).toEqual('bold');\n      expect(output.style['group-title'].fill).toEqual('red');\n    });\n\n    it('should remove empty config object', () => {\n      expect(output.axisTop).not.toBeDefined();\n    });\n  });\n\n  describe('isVgScheme', () => {\n    it('should return true for valid scheme object', () => {\n      expect(isVgScheme({scheme: 'viridis', count: 2})).toBe(true);\n    });\n\n    it('should return false for non-scheme object', () => {\n      expect(isVgScheme(['#EA98D2', '#659CCA'])).toBe(false);\n    });\n  });\n});\n"]}