{"version":3,"file":"properties.test.js","sourceRoot":"","sources":["../../../../test/compile/axis/properties.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:quotemark */\n\nimport * as properties from '../../../src/compile/axis/properties';\nimport {defaultLabelAlign, defaultLabelBaseline, labelAngle} from '../../../src/compile/axis/properties';\nimport {TimeUnit} from '../../../src/timeunit';\nimport {parseUnitModelWithScale} from '../../util';\n\ndescribe('compile/axis', () => {\n  describe('defaultGrid()', () => {\n    it('should return true by default for continuous scale that is not binned', () => {\n      const grid = properties.defaultGrid('linear', {field: 'a', type: 'quantitative'});\n      expect(grid).toBe(true);\n    });\n\n    it('should return false by default for binned field', () => {\n      const grid = properties.defaultGrid('linear', {bin: true, field: 'a', type: 'quantitative'});\n      expect(grid).toBe(false);\n    });\n\n    it('should return false by default for a discrete scale', () => {\n      const grid = properties.defaultGrid('point', {field: 'a', type: 'quantitative'});\n      expect(grid).toBe(false);\n    });\n  });\n\n  describe('orient()', () => {\n    it('should return bottom for x by default', () => {\n      const orient = properties.orient('x');\n      expect(orient).toBe('bottom');\n    });\n\n    it('should return left for y by default', () => {\n      const orient = properties.orient('y');\n      expect(orient).toBe('left');\n    });\n  });\n\n  describe('defaultTickCount()', () => {\n    it('should return undefined by default for a binned field', () => {\n      const tickCount = properties.defaultTickCount({\n        fieldDef: {bin: {maxbins: 10}, field: 'a', type: 'quantitative'},\n        scaleType: 'linear',\n        size: {signal: 'a'}\n      });\n      expect(tickCount).toEqual({signal: 'ceil(a/10)'});\n    });\n\n    for (const timeUnit of ['month', 'hours', 'day', 'quarter'] as TimeUnit[]) {\n      it(`should return undefined by default for a temporal field with timeUnit=${timeUnit}`, () => {\n        const tickCount = properties.defaultTickCount({\n          fieldDef: {timeUnit, field: 'a', type: 'temporal'},\n          scaleType: 'linear',\n          size: {signal: 'a'}\n        });\n        expect(tickCount).not.toBeDefined();\n      });\n    }\n\n    it('should return size/40 by default for linear scale', () => {\n      const tickCount = properties.defaultTickCount({\n        fieldDef: {field: 'a', type: 'quantitative'},\n        scaleType: 'linear',\n        size: {signal: 'a'}\n      });\n      expect(tickCount).toEqual({signal: 'ceil(a/40)'});\n    });\n\n    it('should return undefined by default for log scale', () => {\n      const tickCount = properties.defaultTickCount({fieldDef: {field: 'a', type: 'quantitative'}, scaleType: 'log'});\n      expect(tickCount).toBeUndefined();\n    });\n\n    it('should return undefined by default for point scale', () => {\n      const tickCount = properties.defaultTickCount({\n        fieldDef: {field: 'a', type: 'quantitative'},\n        scaleType: 'point'\n      });\n      expect(tickCount).toBeUndefined();\n    });\n\n    it('should return prebin step signal for axis with tickStep', () => {\n      const tickCount = properties.defaultTickCount({\n        fieldDef: {field: 'a', type: 'quantitative'},\n        scaleType: 'linear',\n        scaleName: 'x',\n        specifiedAxis: {\n          tickStep: 3\n        }\n      });\n      expect(tickCount).toEqual({signal: \"(domain('x')[1] - domain('x')[0]) / 3 + 1\"});\n    });\n  });\n\n  describe('values', () => {\n    it('should return correct timestamp values for DateTimes', () => {\n      const values = properties.values(\n        {values: [{year: 1970}, {year: 1980}]},\n        null,\n        {field: 'a', type: 'temporal'},\n        'x'\n      );\n\n      expect(values).toEqual([\n        {signal: 'datetime(1970, 0, 1, 0, 0, 0, 0)'},\n        {signal: 'datetime(1980, 0, 1, 0, 0, 0, 0)'}\n      ]);\n    });\n\n    it('should simply return values for non-DateTime', () => {\n      const values = properties.values({values: [1, 2, 3, 4]}, null, {field: 'a', type: 'quantitative'}, 'x');\n      expect(values).toEqual([1, 2, 3, 4]);\n    });\n\n    it('should simply drop values when domain is specified', () => {\n      const model1 = parseUnitModelWithScale({\n        mark: 'bar',\n        encoding: {\n          y: {\n            type: 'quantitative',\n            field: 'US_Gross',\n            scale: {domain: [-1, 2]},\n            bin: {extent: [0, 1]}\n          }\n        },\n        data: {url: 'data/movies.json'}\n      });\n      const values = properties.values({}, model1, model1.fieldDef('y'), 'y');\n\n      expect(values).toBeUndefined();\n    });\n\n    it('should return value signal for axis with tickStep', () => {\n      const model = parseUnitModelWithScale({\n        mark: 'bar',\n        encoding: {\n          x: {\n            type: 'quantitative',\n            field: 'US_Gross'\n          }\n        },\n        data: {url: 'data/movies.json'}\n      });\n      const values = properties.values({tickStep: 3}, model, {type: 'quantitative'}, 'x');\n      expect(values).toEqual({signal: \"sequence(domain('x')[0], domain('x')[1] + 3, 3)\"});\n    });\n  });\n\n  describe('labelAngle', () => {\n    const axisModel = parseUnitModelWithScale({\n      mark: 'bar',\n      encoding: {\n        y: {\n          type: 'quantitative',\n          field: 'US_Gross',\n          scale: {domain: [-1, 2]},\n          bin: {extent: [0, 1]},\n          axis: {labelAngle: 600}\n        }\n      },\n      data: {url: 'data/movies.json'}\n    });\n\n    const configModel = parseUnitModelWithScale({\n      config: {axis: {labelAngle: 500}},\n      mark: 'bar',\n      encoding: {\n        y: {\n          type: 'quantitative',\n          field: 'US_Gross',\n          scale: {domain: [-1, 2]},\n          bin: {extent: [0, 1]}\n        }\n      },\n      data: {url: 'data/movies.json'}\n    });\n\n    const defaultModel = parseUnitModelWithScale({\n      data: {\n        values: [\n          {a: 'A', b: 28},\n          {a: 'B', b: 55},\n          {a: 'C', b: 43},\n          {a: 'D', b: 91},\n          {a: 'E', b: 81},\n          {a: 'F', b: 53},\n          {a: 'G', b: 19},\n          {a: 'H', b: 87},\n          {a: 'I', b: 52}\n        ]\n      },\n      mark: 'bar',\n      encoding: {\n        x: {field: 'a', type: 'ordinal'},\n        y: {field: 'b', type: 'quantitative'}\n      }\n    });\n\n    const bothModel = parseUnitModelWithScale({\n      config: {axis: {labelAngle: 500}},\n      mark: 'bar',\n      encoding: {\n        y: {\n          type: 'quantitative',\n          field: 'US_Gross',\n          scale: {domain: [-1, 2]},\n          bin: {extent: [0, 1]},\n          axis: {labelAngle: 600}\n        }\n      },\n      data: {url: 'data/movies.json'}\n    });\n\n    const neitherModel = parseUnitModelWithScale({\n      mark: 'bar',\n      encoding: {\n        y: {\n          type: 'quantitative',\n          field: 'US_Gross',\n          scale: {domain: [-1, 2]},\n          bin: {extent: [0, 1]}\n        }\n      },\n      data: {url: 'data/movies.json'}\n    });\n\n    it('should return the correct labelAngle from the axis definition', () => {\n      expect(240).toEqual(labelAngle(axisModel, axisModel.axis('y'), 'y', axisModel.fieldDef('y')));\n    });\n\n    it('should return the correct labelAngle from the axis config definition', () => {\n      expect(140).toEqual(labelAngle(configModel, configModel.axis('y'), 'y', configModel.fieldDef('y')));\n    });\n\n    it('should return the correct default labelAngle when not specified', () => {\n      expect(270).toEqual(labelAngle(defaultModel, defaultModel.axis('x'), 'x', defaultModel.fieldDef('x')));\n    });\n\n    it('should return the labelAngle declared in the axis when both the axis and axis config have labelAngle', () => {\n      expect(240).toEqual(labelAngle(bothModel, bothModel.axis('y'), 'y', bothModel.fieldDef('y')));\n    });\n\n    it('should return undefined when there is no default and no specified labelAngle', () => {\n      expect(undefined).toEqual(labelAngle(neitherModel, neitherModel.axis('y'), 'y', neitherModel.fieldDef('y')));\n    });\n  });\n\n  describe('defaultLabelAlign', () => {\n    describe('horizontal orients', () => {\n      it('360 degree check for horizonatal orients return to see if they orient properly', () => {\n        expect(defaultLabelAlign(0, 'top')).toEqual('center');\n        expect(defaultLabelAlign(15, 'top')).toEqual('right');\n        expect(defaultLabelAlign(30, 'top')).toEqual('right');\n        expect(defaultLabelAlign(45, 'top')).toEqual('right');\n        expect(defaultLabelAlign(60, 'top')).toEqual('right');\n        expect(defaultLabelAlign(75, 'top')).toEqual('right');\n        expect(defaultLabelAlign(90, 'top')).toEqual('right');\n        expect(defaultLabelAlign(105, 'top')).toEqual('right');\n        expect(defaultLabelAlign(120, 'top')).toEqual('right');\n        expect(defaultLabelAlign(135, 'top')).toEqual('right');\n        expect(defaultLabelAlign(150, 'top')).toEqual('right');\n        expect(defaultLabelAlign(165, 'top')).toEqual('right');\n        expect(defaultLabelAlign(180, 'top')).toEqual('center');\n        expect(defaultLabelAlign(195, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(210, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(225, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(240, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(255, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(270, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(285, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(300, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(315, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(330, 'bottom')).toEqual('right');\n        expect(defaultLabelAlign(345, 'bottom')).toEqual('right');\n      });\n      it('360 degree check for vertical orients return to see if they orient properly', () => {\n        expect(defaultLabelAlign(0, 'left')).toEqual('right');\n        expect(defaultLabelAlign(15, 'left')).toEqual('right');\n        expect(defaultLabelAlign(30, 'left')).toEqual('right');\n        expect(defaultLabelAlign(45, 'left')).toEqual('right');\n        expect(defaultLabelAlign(60, 'left')).toEqual('right');\n        expect(defaultLabelAlign(75, 'left')).toEqual('right');\n        expect(defaultLabelAlign(90, 'left')).toEqual('center');\n        expect(defaultLabelAlign(105, 'left')).toEqual('left');\n        expect(defaultLabelAlign(120, 'left')).toEqual('left');\n        expect(defaultLabelAlign(135, 'left')).toEqual('left');\n        expect(defaultLabelAlign(150, 'left')).toEqual('left');\n        expect(defaultLabelAlign(165, 'left')).toEqual('left');\n        expect(defaultLabelAlign(180, 'left')).toEqual('left');\n        expect(defaultLabelAlign(195, 'right')).toEqual('right');\n        expect(defaultLabelAlign(210, 'right')).toEqual('right');\n        expect(defaultLabelAlign(225, 'right')).toEqual('right');\n        expect(defaultLabelAlign(240, 'right')).toEqual('right');\n        expect(defaultLabelAlign(255, 'right')).toEqual('right');\n        expect(defaultLabelAlign(270, 'right')).toEqual('center');\n        expect(defaultLabelAlign(285, 'right')).toEqual('left');\n        expect(defaultLabelAlign(300, 'right')).toEqual('left');\n        expect(defaultLabelAlign(315, 'right')).toEqual('left');\n        expect(defaultLabelAlign(330, 'right')).toEqual('left');\n        expect(defaultLabelAlign(345, 'right')).toEqual('left');\n      });\n      it('should return undefined if angle is undefined', () => {\n        expect(defaultLabelAlign(undefined, 'left')).toEqual(undefined);\n      });\n    });\n  });\n\n  describe('defaultLabelBaseline', () => {\n    it('is middle for perpendiculars horizontal orients', () => {\n      expect(defaultLabelBaseline(90, 'top')).toEqual('middle');\n      expect(defaultLabelBaseline(270, 'bottom')).toEqual('middle');\n    });\n\n    it('is top for bottom orients for 1st and 4th quadrants', () => {\n      expect(defaultLabelBaseline(45, 'bottom')).toEqual('top');\n      expect(defaultLabelBaseline(180, 'top')).toEqual('top');\n    });\n\n    it('is bottom for bottom orients for 2nd and 3rd quadrants', () => {\n      expect(defaultLabelBaseline(100, 'bottom')).toEqual('middle');\n      expect(defaultLabelBaseline(260, 'bottom')).toEqual('middle');\n    });\n\n    it('is middle for 0 and 180 horizontal orients', () => {\n      expect(defaultLabelBaseline(0, 'left')).toEqual('middle');\n      expect(defaultLabelBaseline(180, 'right')).toEqual('middle');\n    });\n\n    it('is top for bottom orients for 1st and 2nd quadrants', () => {\n      expect(defaultLabelBaseline(80, 'left')).toEqual('top');\n      expect(defaultLabelBaseline(100, 'left')).toEqual('top');\n    });\n\n    it('is bottom for bottom orients for 3rd and 4th quadrants', () => {\n      expect(defaultLabelBaseline(280, 'left')).toEqual('bottom');\n      expect(defaultLabelBaseline(260, 'left')).toEqual('bottom');\n    });\n\n    it('is bottom for bottom orients for 3rd and 4th quadrants', () => {\n      expect(defaultLabelBaseline(280, 'left')).toEqual('bottom');\n      expect(defaultLabelBaseline(260, 'left')).toEqual('bottom');\n    });\n\n    it('should return undefined if angle is undefined', () => {\n      expect(defaultLabelBaseline(undefined, 'left')).toEqual(undefined);\n    });\n  });\n});\n"]}