{"version":3,"file":"nearest.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/nearest.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport * as selection from '../../../src/compile/selection/selection';\nimport nearest from '../../../src/compile/selection/transforms/nearest';\nimport * as log from '../../../src/log';\nimport {duplicate} from '../../../src/util';\nimport {parseUnitModel} from '../../util';\n\nfunction getModel(markType: any) {\n  const model = parseUnitModel({\n    mark: markType,\n    encoding: {\n      x: {field: 'Horsepower', type: 'quantitative'},\n      y: {field: 'Miles_per_Gallon', type: 'quantitative'},\n      color: {field: 'Origin', type: 'nominal'}\n    }\n  });\n  model.parseScale();\n  model.parseMarkGroup();\n  model.component.selection = selection.parseUnitSelection(model, {\n    one: {type: 'single', nearest: true},\n    two: {type: 'multi', nearest: true},\n    three: {type: 'interval'},\n    four: {type: 'single', nearest: false},\n    five: {type: 'multi'},\n    six: {type: 'multi', nearest: null},\n    seven: {type: 'single', nearest: true, encodings: ['x']},\n    eight: {type: 'single', nearest: true, encodings: ['y']},\n    nine: {type: 'single', nearest: true, encodings: ['color']}\n  });\n\n  return model;\n}\n\nfunction voronoiMark(x?: string | {expr: string}, y?: string | {expr: string}) {\n  return [\n    {hello: 'world'},\n    {\n      name: 'voronoi',\n      type: 'path',\n      from: {data: 'marks'},\n      encode: {\n        enter: {\n          fill: {value: 'transparent'},\n          strokeWidth: {value: 0.35},\n          stroke: {value: 'transparent'},\n          isVoronoi: {value: true}\n        }\n      },\n      transform: [\n        {\n          type: 'voronoi',\n          x: x || {expr: 'datum.datum.x || 0'},\n          y: y || {expr: 'datum.datum.y || 0'},\n          size: [{signal: 'width'}, {signal: 'height'}]\n        }\n      ]\n    }\n  ];\n}\n\ndescribe('Nearest Selection Transform', () => {\n  it('identifies transform invocation', () => {\n    const selCmpts = getModel('circle').component.selection;\n    expect(nearest.has(selCmpts['one'])).not.toBe(false);\n    expect(nearest.has(selCmpts['two'])).not.toBe(false);\n    expect(nearest.has(selCmpts['three'])).not.toBe(true);\n    expect(nearest.has(selCmpts['four'])).not.toBe(true);\n    expect(nearest.has(selCmpts['five'])).not.toBe(true);\n    expect(nearest.has(selCmpts['six'])).not.toBe(true);\n  });\n\n  it('adds voronoi for non-path marks', () => {\n    const model = getModel('circle');\n    const selCmpts = model.component.selection;\n    const marks: any[] = [{hello: 'world'}];\n\n    expect(nearest.marks(model, selCmpts['one'], marks)).toEqual(voronoiMark());\n  });\n\n  it(\n    'should warn for path marks',\n    log.wrap(localLogger => {\n      const model = getModel('line');\n      const selCmpts = model.component.selection;\n      const marks: any[] = [];\n      expect(nearest.marks(model, selCmpts['one'], marks)).toEqual(marks);\n      expect(localLogger.warns[0]).toEqual(log.message.nearestNotSupportForContinuous('line'));\n    })\n  );\n\n  it('limits to a single voronoi per unit', () => {\n    const model = getModel('circle');\n    const selCmpts = model.component.selection;\n    const marks: any[] = [{hello: 'world'}];\n\n    const marks2 = nearest.marks(model, selCmpts['one'], marks);\n    expect(nearest.marks(model, selCmpts['two'], marks2)).toEqual(voronoiMark());\n  });\n\n  it('supports 1D voronoi', () => {\n    const model = getModel('circle');\n    const selCmpts = model.component.selection;\n    const marks: any[] = [{hello: 'world'}];\n\n    expect(nearest.marks(model, selCmpts['seven'], duplicate(marks))).toEqual(voronoiMark(null, {expr: '0'}));\n\n    expect(nearest.marks(model, selCmpts['eight'], duplicate(marks))).toEqual(voronoiMark({expr: '0'}));\n\n    expect(nearest.marks(model, selCmpts['nine'], duplicate(marks))).toEqual(voronoiMark());\n  });\n});\n"]}