{"version":3,"file":"translate.test.js","sourceRoot":"","sources":["../../test-runtime/translate.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {assert} from 'chai';\nimport {\n  bound,\n  brush,\n  compositeTypes,\n  embedFn,\n  hits as hitsMaster,\n  parentSelector,\n  spec,\n  testRenderFn,\n  tuples,\n  unbound\n} from './util';\n\n[bound, unbound].forEach((bind, idx) => {\n  describe(`Translate ${bind} interval selections at runtime`, () => {\n    const type = 'interval';\n    const hits = hitsMaster.interval;\n    const embed = embedFn(browser);\n    const testRender = testRenderFn(browser, `interval/translate/${bind}`);\n    const binding = bind === bound ? {bind: 'scales'} : {};\n\n    const assertExtent = {\n      [unbound]: {\n        x: ['isAbove', 'isBelow'],\n        y: ['isBelow', 'isAbove']\n      },\n      [bound]: {\n        x: ['isBelow', 'isAbove'],\n        y: ['isAbove', 'isBelow']\n      }\n    };\n\n    it('should move back-and-forth', () => {\n      for (let i = 0; i < hits.translate.length; i++) {\n        embed(spec('unit', i, {type, ...binding}));\n        const drag = browser.execute(brush('drag', i)).value[0];\n        testRender(`${i}-0`);\n        const translate = browser.execute(brush('translate', i, null, bind === unbound)).value[0];\n        assert[assertExtent[bind].x[i]](translate.intervals[0].extent[0], drag.intervals[0].extent[0]);\n        assert[assertExtent[bind].x[i]](translate.intervals[0].extent[1], drag.intervals[0].extent[1]);\n        assert[assertExtent[bind].y[i]](translate.intervals[1].extent[0], drag.intervals[1].extent[0]);\n        assert[assertExtent[bind].y[i]](translate.intervals[1].extent[1], drag.intervals[1].extent[1]);\n        testRender(`${i}-1`);\n      }\n    });\n\n    it('should work with binned domains', () => {\n      for (let i = 0; i < hits.bins.length; i++) {\n        embed(\n          spec(\n            'unit',\n            1,\n            {type, ...binding, encodings: ['y']},\n            {\n              x: {aggregate: 'count', field: '*', type: 'quantitative'},\n              y: {bin: true},\n              color: {value: 'steelblue', field: null, type: null}\n            }\n          )\n        );\n        const drag = browser.execute(brush('bins', i)).value[0];\n        testRender(`bins_${i}-0`);\n        const translate = browser.execute(brush('bins_translate', i, null, bind === unbound)).value[0];\n        assert[assertExtent[bind].y[i]](translate.intervals[0].extent[0], drag.intervals[0].extent[0]);\n        assert[assertExtent[bind].y[i]](translate.intervals[0].extent[1], drag.intervals[0].extent[1]);\n        testRender(`bins_${i}-1`);\n      }\n    });\n\n    it('should work with temporal domains', () => {\n      const values = tuples.map(d => ({...d, a: new Date(2017, d.a)}));\n      const toNumber = '[0].intervals[0].extent.map((d) => +d)';\n\n      for (let i = 0; i < hits.translate.length; i++) {\n        embed(spec('unit', i, {type, ...binding, encodings: ['x']}, {values, x: {type: 'temporal'}}));\n        const drag = browser.execute(brush('drag', i) + toNumber).value;\n        testRender(`temporal_${i}-0`);\n        const translate = browser.execute(brush('translate', i, null, bind === unbound) + toNumber).value;\n        assert[assertExtent[bind].x[i]](translate[0], drag[0]);\n        assert[assertExtent[bind].x[i]](translate[1], drag[1]);\n        testRender(`temporal_${i}-1`);\n      }\n    });\n\n    it('should work with log/pow scales', () => {\n      for (let i = 0; i < hits.translate.length; i++) {\n        embed(\n          spec(\n            'unit',\n            i,\n            {type, ...binding},\n            {\n              x: {scale: {type: 'pow', exponent: 1.5}},\n              y: {scale: {type: 'log'}}\n            }\n          )\n        );\n        const drag = browser.execute(brush('drag', i)).value[0];\n        testRender(`logpow_${i}-0`);\n        const translate = browser.execute(brush('translate', i, null, bind === unbound)).value[0];\n        assert[assertExtent[bind].x[i]](translate.intervals[0].extent[0], drag.intervals[0].extent[0]);\n        assert[assertExtent[bind].x[i]](translate.intervals[0].extent[1], drag.intervals[0].extent[1]);\n        assert[assertExtent[bind].y[i]](translate.intervals[1].extent[0], drag.intervals[1].extent[0]);\n        assert[assertExtent[bind].y[i]](translate.intervals[1].extent[1], drag.intervals[1].extent[1]);\n        testRender(`logpow_${i}-1`);\n      }\n    });\n\n    if (bind === unbound) {\n      it('should work with ordinal/nominal domains', () => {\n        for (let i = 0; i < hits.translate.length; i++) {\n          embed(\n            spec(\n              'unit',\n              i,\n              {type, ...binding},\n              {\n                x: {type: 'ordinal'},\n                y: {type: 'nominal'}\n              }\n            )\n          );\n          const drag = browser.execute(brush('drag', i)).value[0];\n          testRender(`ord_${i}-0`);\n          const translate = browser.execute(brush('translate', i, null, true)).value[0];\n          assert[assertExtent[bind].x[i]](translate.intervals[0].extent[0], drag.intervals[0].extent[0]);\n          assert[assertExtent[bind].x[i]](translate.intervals[0].extent[1], drag.intervals[0].extent[1]);\n          assert[assertExtent[bind].y[i]](translate.intervals[1].extent[0], drag.intervals[1].extent[0]);\n          assert[assertExtent[bind].y[i]](translate.intervals[1].extent[1], drag.intervals[1].extent[1]);\n          testRender(`ord_${i}-1`);\n        }\n      });\n    } else {\n      compositeTypes.forEach(specType => {\n        const assertExtents = {\n          repeat: {\n            x: ['isBelow', 'isBelow', 'isBelow'],\n            y: ['isAbove', 'isAbove', 'isAbove']\n          },\n          facet: {\n            x: ['isBelow', 'isBelow', 'isBelow'],\n            y: ['isBelow', 'isAbove', 'isBelow']\n          }\n        };\n        it(`should work with shared scales in ${specType} views`, () => {\n          for (let i = 0; i < hits[specType].length; i++) {\n            embed(spec(specType, 0, {type, ...binding}, {resolve: {scale: {x: 'shared', y: 'shared'}}}));\n            const parent = parentSelector(specType, i);\n            const xscale = browser.execute('return view._runtime.scales.x.value.domain()').value;\n            const yscale = browser.execute('return view._runtime.scales.y.value.domain()').value;\n            const drag = browser.execute(brush(specType, i, parent)).value[0];\n            assert[assertExtents[specType].x[i]](drag.intervals[0].extent[0], xscale[0], `iter: ${i}`);\n            assert[assertExtents[specType].x[i]](drag.intervals[0].extent[1], xscale[1], `iter: ${i}`);\n            assert[assertExtents[specType].y[i]](drag.intervals[1].extent[0], yscale[0], `iter: ${i}`);\n            assert[assertExtents[specType].y[i]](drag.intervals[1].extent[1], yscale[1], `iter: ${i}`);\n            testRender(`${specType}_${i}`);\n          }\n        });\n      });\n    }\n  });\n});\n"]}