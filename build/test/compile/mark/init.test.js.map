{"version":3,"file":"init.test.js","sourceRoot":"","sources":["../../../../test/compile/mark/init.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport * as log from '../../../src/log';\nimport {CIRCLE, POINT, PRIMITIVE_MARKS, SQUARE, TICK} from '../../../src/mark';\nimport {without} from '../../../src/util';\nimport {parseUnitModelWithScaleAndLayoutSize} from '../../util';\n\ndescribe('compile/mark/init', () => {\n  describe('defaultOpacity', () => {\n    it('should return 0.7 by default for unaggregated point, tick, circle, and square', () => {\n      for (const mark of [POINT, TICK, CIRCLE, SQUARE]) {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark,\n          encoding: {\n            y: {type: 'quantitative', field: 'foo'},\n            x: {type: 'quantitative', field: 'bar'}\n          }\n        });\n        expect(model.markDef.opacity).toEqual(0.7);\n      }\n    });\n\n    it('should return undefined by default for aggregated point, tick, circle, and square', () => {\n      for (const mark of [POINT, TICK, CIRCLE, SQUARE]) {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark,\n          encoding: {\n            y: {aggregate: 'mean', type: 'quantitative', field: 'foo'},\n            x: {type: 'nominal', field: 'bar'}\n          }\n        });\n        expect(model.markDef.opacity).toEqual(undefined);\n      }\n    });\n\n    it('should use specified opacity', () => {\n      for (const mark of [POINT, TICK, CIRCLE, SQUARE]) {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark: {type: mark, opacity: 0.9},\n          encoding: {\n            y: {type: 'quantitative', field: 'foo'},\n            x: {type: 'quantitative', field: 'bar'}\n          }\n        });\n        expect(model.markDef.opacity).toEqual(0.9);\n      }\n    });\n\n    it('should return undefined by default for other marks', () => {\n      const otherMarks = without(PRIMITIVE_MARKS, [POINT, TICK, CIRCLE, SQUARE]);\n      for (const mark of otherMarks) {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark,\n          encoding: {\n            y: {type: 'quantitative', field: 'foo'},\n            x: {type: 'nominal', field: 'bar'}\n          }\n        });\n        expect(model.markDef.opacity).toEqual(undefined);\n      }\n    });\n  });\n\n  describe('orient', () => {\n    it(\n      'should return correct default for QxQ',\n      log.wrap(localLogger => {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark: 'bar',\n          encoding: {\n            y: {type: 'quantitative', field: 'foo'},\n            x: {type: 'quantitative', field: 'bar'}\n          }\n        });\n        expect(model.markDef.orient).toEqual('vertical');\n      })\n    );\n\n    it(\n      'should return correct default for empty plot',\n      log.wrap(localLogger => {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark: 'bar',\n          encoding: {}\n        });\n        expect(model.markDef.orient).toEqual(undefined);\n      })\n    );\n\n    it(\n      'should return correct orient for bar with both axes discrete',\n      log.wrap(localLogger => {\n        const model = parseUnitModelWithScaleAndLayoutSize({\n          mark: 'bar',\n          encoding: {\n            x: {type: 'ordinal', field: 'foo'},\n            y: {type: 'ordinal', field: 'bar'}\n          }\n        });\n        expect(model.markDef.orient).toEqual(undefined);\n      })\n    );\n\n    it('should return correct orient for vertical bar', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'bar',\n        encoding: {\n          y: {type: 'quantitative', field: 'foo'},\n          x: {type: 'ordinal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for horizontal bar', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'bar',\n        encoding: {\n          x: {type: 'quantitative', field: 'foo'},\n          y: {type: 'ordinal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('horizontal');\n    });\n\n    it('should return correct orient for vertical bar with raw temporal dimension', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'bar',\n        encoding: {\n          y: {type: 'quantitative', field: 'foo'},\n          x: {type: 'temporal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for horizontal bar with raw temporal dimension', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'bar',\n        encoding: {\n          x: {type: 'quantitative', field: 'foo'},\n          y: {type: 'temporal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('horizontal');\n    });\n\n    it('should return correct orient for vertical tick', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'tick',\n        encoding: {\n          x: {type: 'quantitative', field: 'foo'},\n          y: {type: 'ordinal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for vertical tick with bin', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'tick',\n        encoding: {\n          x: {type: 'quantitative', field: 'foo'},\n          y: {type: 'quantitative', field: 'bar', bin: true}\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for vertical tick of continuous timeUnit dotplot', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'tick',\n        encoding: {\n          x: {type: 'temporal', field: 'foo', timeUnit: 'yearmonthdate'},\n          y: {type: 'ordinal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for horizontal tick', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'tick',\n        encoding: {\n          y: {type: 'quantitative', field: 'foo'},\n          x: {type: 'ordinal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('horizontal');\n    });\n\n    it('should return correct orient for vertical rule', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          x: {value: 0}\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for horizontal rule', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          y: {value: 0}\n        }\n      });\n      expect(model.markDef.orient).toEqual('horizontal');\n    });\n\n    it('should return undefined for line segment rule', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          y: {value: 0},\n          x: {value: 0},\n          y2: {value: 100},\n          x2: {value: 100}\n        }\n      });\n      expect(model.markDef.orient).toEqual(undefined);\n    });\n\n    it('should return undefined for line segment rule with only x and y without x2, y2', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          y: {value: 0},\n          x: {value: 0}\n        }\n      });\n      expect(model.markDef.orient).toEqual(undefined);\n    });\n\n    it('should return correct orient for horizontal rules without x2 ', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          x: {field: 'b', type: 'quantitative'},\n          y: {field: 'a', type: 'ordinal'}\n        }\n      });\n\n      expect(model.markDef.orient).toEqual('horizontal');\n    });\n\n    it('should return correct orient for vertical rules without y2 ', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          y: {field: 'b', type: 'quantitative'},\n          x: {field: 'a', type: 'ordinal'}\n        }\n      });\n\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for vertical rule with range', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          x: {type: 'ordinal', field: 'foo'},\n          y: {type: 'quantitative', field: 'bar'},\n          y2: {type: 'quantitative', field: 'baz'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for horizontal rule with range', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          y: {type: 'ordinal', field: 'foo'},\n          x: {type: 'quantitative', field: 'bar'},\n          x2: {type: 'quantitative', field: 'baz'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('horizontal');\n    });\n\n    it('should return correct orient for horizontal rule with range and no ordinal', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          x: {type: 'quantitative', field: 'bar'},\n          x2: {type: 'quantitative', field: 'baz'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('horizontal');\n    });\n\n    it('should return correct orient for vertical rule with range and no ordinal', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'rule',\n        encoding: {\n          y: {type: 'quantitative', field: 'bar'},\n          y2: {type: 'quantitative', field: 'baz'}\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for bar with vertical binned data', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'bar',\n        encoding: {\n          x: {\n            field: 'bin_start',\n            bin: 'binned',\n            type: 'quantitative',\n            axis: {\n              tickMinStep: 2\n            }\n          },\n          x2: {\n            field: 'bin_end',\n            type: 'quantitative'\n          },\n          y: {\n            field: 'count',\n            type: 'quantitative'\n          }\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for bar with horizontal binned data', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'bar',\n        encoding: {\n          y: {\n            field: 'bin_start',\n            bin: 'binned',\n            type: 'quantitative',\n            axis: {\n              tickMinStep: 2\n            }\n          },\n          y2: {\n            field: 'bin_end',\n            type: 'quantitative'\n          },\n          x: {\n            field: 'count',\n            type: 'quantitative'\n          }\n        }\n      });\n      expect(model.markDef.orient).toEqual('horizontal');\n    });\n\n    it('should return correct orient for area with vertical binned data', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'area',\n        encoding: {\n          x: {\n            field: 'bin_start',\n            bin: 'binned',\n            type: 'quantitative',\n            axis: {\n              tickMinStep: 2\n            }\n          },\n          x2: {\n            field: 'bin_end',\n            type: 'quantitative'\n          },\n          y: {\n            field: 'count',\n            type: 'quantitative'\n          }\n        }\n      });\n      expect(model.markDef.orient).toEqual('vertical');\n    });\n\n    it('should return correct orient for area with horizontal binned data', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'area',\n        encoding: {\n          y: {\n            field: 'bin_start',\n            bin: 'binned',\n            type: 'quantitative',\n            axis: {\n              tickMinStep: 2\n            }\n          },\n          y2: {\n            field: 'bin_end',\n            type: 'quantitative'\n          },\n          x: {\n            field: 'count',\n            type: 'quantitative'\n          }\n        }\n      });\n      expect(model.markDef.orient).toEqual('horizontal');\n    });\n  });\n\n  describe('cursor', () => {\n    it('cursor should be undefined when no href channel defined', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'bar',\n        encoding: {\n          y: {type: 'quantitative', field: 'foo'},\n          x: {type: 'temporal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.cursor).toEqual(undefined);\n    });\n\n    it('should return pointer cursor when href channel present', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: 'bar',\n        selection: {test: {type: 'single'}},\n        encoding: {\n          x: {field: 'a', type: 'ordinal'},\n          y: {field: 'b', type: 'quantitative'},\n          href: {\n            condition: {selection: 'test', value: 'https://vega.github.io/schema/vega-lite/v3.json'},\n            field: 'a',\n            type: 'ordinal'\n          }\n        }\n      });\n      expect(model.markDef.cursor).toEqual('pointer');\n    });\n\n    it('should return specified cursor when href channel present but cursor specified', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: {type: 'bar', cursor: 'auto'},\n        selection: {test: {type: 'single'}},\n        encoding: {\n          x: {field: 'a', type: 'ordinal'},\n          y: {field: 'b', type: 'quantitative'},\n          href: {\n            condition: {selection: 'test', value: 'http://www.google.com'},\n            field: 'a',\n            type: 'ordinal'\n          }\n        }\n      });\n      expect(model.markDef.cursor).toEqual('auto');\n    });\n\n    it('should return pointer cursor when href channel specified in mark definition', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: {type: 'bar', href: 'http://www.google.com'},\n        encoding: {\n          y: {type: 'quantitative', field: 'foo'},\n          x: {type: 'temporal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.cursor).toEqual('pointer');\n    });\n\n    it('should return specified cursor when href channel specified in mark definition but cursor also specified in mark', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        mark: {type: 'bar', href: 'http://www.google.com', cursor: 'auto'},\n        encoding: {\n          y: {type: 'quantitative', field: 'foo'},\n          x: {type: 'temporal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.cursor).toEqual('auto');\n    });\n\n    it('should return pointer cursor when href channel specified in mark config', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        config: {\n          mark: {\n            href: 'http://www.google.com'\n          }\n        },\n        mark: 'bar',\n        encoding: {\n          y: {type: 'quantitative', field: 'foo'},\n          x: {type: 'temporal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.cursor).toEqual('pointer');\n    });\n\n    it('should return specified cursor when href channel specified in mark config but cursor also specified in mark', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        config: {\n          mark: {\n            href: 'http://www.google.com'\n          }\n        },\n        mark: {type: 'bar', cursor: 'auto'},\n        encoding: {\n          y: {type: 'quantitative', field: 'foo'},\n          x: {type: 'temporal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.cursor).toEqual('auto');\n    });\n\n    it('should not specify cursor in the markdef if defined in the config', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        config: {\n          mark: {\n            href: 'http://www.google.com',\n            cursor: 'auto'\n          }\n        },\n        mark: 'bar',\n        encoding: {\n          y: {type: 'quantitative', field: 'foo'},\n          x: {type: 'temporal', field: 'bar'}\n        }\n      });\n      expect(model.markDef.cursor).toEqual(undefined);\n    });\n  });\n});\n"]}