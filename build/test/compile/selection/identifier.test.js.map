{"version":3,"file":"identifier.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/identifier.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {assembleRootData} from '../../../src/compile/data/assemble';\nimport {optimizeDataflow} from '../../../src/compile/data/optimize';\nimport {Mark} from '../../../src/mark';\nimport {VgTransform} from '../../../src/vega.schema';\nimport {parseModel} from '../../util';\n\n/* tslint:disable:quotemark */\n\nfunction getVgData(selection: any, x?: any, y?: any, mark?: Mark, enc?: any, transform?: any) {\n  const model = parseModel({\n    data: {url: 'data/cars.json'},\n    transform,\n    selection,\n    mark: mark || 'circle',\n    encoding: {\n      x: {field: 'Horsepower', type: 'quantitative', ...x},\n      y: {field: 'Miles-per-Gallon', type: 'quantitative', ...y},\n      color: {field: 'Origin', type: 'nominal'},\n      ...enc\n    }\n  });\n  model.parse();\n  optimizeDataflow(model.component.data);\n  return assembleRootData(model.component.data, {});\n}\n\ndescribe('Identifier transform', () => {\n  it('is not unnecessarily added', () => {\n    function test(selDef?: any) {\n      const data = getVgData(selDef);\n      for (const d of data) {\n        expect(d.transform && d.transform.some(t => t.type === 'identifier')).not.toBe(true);\n      }\n    }\n\n    test();\n    for (const type of ['single', 'multi']) {\n      test({pt: {type, encodings: ['x']}});\n    }\n  });\n\n  it('is added for default point selections', () => {\n    for (const type of ['single', 'multi']) {\n      const url = getVgData({pt: {type}});\n      expect(url[0].transform[0].type).toEqual('identifier');\n    }\n  });\n\n  it('is added immediately after aggregate transforms', () => {\n    function test(transform: VgTransform[]) {\n      let aggr = -1;\n      transform.some((t, i) => ((aggr = i), t.type === 'aggregate'));\n      expect(aggr).toBeGreaterThanOrEqual(0);\n      expect(transform[aggr + 1].type).toEqual('identifier');\n    }\n\n    for (const type of ['single', 'multi']) {\n      const sel = {pt: {type}};\n      let data = getVgData(sel, {bin: true}, {aggregate: 'count'});\n      test(data[0].transform);\n\n      data = getVgData(sel, {aggregate: 'sum'}, null, 'bar', {column: {field: 'Cylinders', type: 'ordinal'}});\n      test(data[0].transform);\n    }\n  });\n\n  it('is added before any user-specified transforms', () => {\n    for (const type of ['single', 'multi']) {\n      const data = getVgData({pt: {type}}, null, null, null, null, [{calculate: 'datum.Horsepower * 2', as: 'foo'}]);\n      let calc = -1;\n      data[0].transform.some((t, i) => ((calc = i), t.type === 'formula' && t.as === 'foo'));\n      expect(data[0].transform[calc - 1].type).toEqual('identifier');\n    }\n  });\n});\n"]}