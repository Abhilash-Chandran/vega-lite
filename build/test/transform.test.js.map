{"version":3,"file":"transform.test.js","sourceRoot":"","sources":["../../test/transform.test.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,GAAG,MAAM,YAAY,CAAC;AAIlC,OAAO,EAAC,kBAAkB,EAAY,MAAM,kBAAkB,CAAC;AAE/D,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,EAAE,CACA,4FAA4F,EAC5F,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;QACrB,MAAM,MAAM,GAA8B;YACxC,GAAG,EAAE;gBACH,EAAC,GAAG,EAAE,EAAC,QAAQ,EAAE,cAA0B,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAC,EAAC;gBAC9E,EAAC,EAAE,EAAE,CAAC,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAAC;aAC/B;SACF,CAAC;QACF,MAAM,SAAS,GAAgB,CAAC,EAAC,MAAM,EAAC,CAAC,CAAC;QAC1C,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;YAC5C;gBACE,MAAM,EAAE;oBACN,GAAG,EAAE,CAAC,EAAC,GAAG,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAC,EAAC,EAAE,EAAC,EAAE,EAAE,CAAC,EAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,EAAC,CAAC;iBAC3G;aACF;SACF,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,CAAC;IACrF,CAAC,CAAC,CACH,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import * as log from '../src/log';\nimport {LogicalOperand} from '../src/logical';\nimport {Predicate} from '../src/predicate';\nimport {TimeUnit} from '../src/timeunit';\nimport {normalizeTransform, Transform} from '../src/transform';\n\ndescribe('normalizeTransform()', () => {\n  it(\n    'replaces filter with timeUnit=yearmonthday with yearmonthdate and throws the right warning',\n    log.wrap(localLogger => {\n      const filter: LogicalOperand<Predicate> = {\n        and: [\n          {not: {timeUnit: 'yearmonthday' as TimeUnit, field: 'd', equal: {year: 2008}}},\n          {or: [{field: 'a', equal: 5}]}\n        ]\n      };\n      const transform: Transform[] = [{filter}];\n      expect(normalizeTransform(transform)).toEqual([\n        {\n          filter: {\n            and: [{not: {timeUnit: 'yearmonthdate', field: 'd', equal: {year: 2008}}}, {or: [{field: 'a', equal: 5}]}]\n          }\n        }\n      ]);\n      expect(localLogger.warns[0]).toBe(log.message.dayReplacedWithDate('yearmonthday'));\n    })\n  );\n});\n"]}