{"version":3,"file":"assemble.test.js","sourceRoot":"","sources":["../../../../test/compile/header/assemble.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  assembleHeaderGroups,\n  assembleHeaderProperties,\n  assembleTitleGroup,\n  defaultHeaderGuideAlign,\n  defaultHeaderGuideBaseline,\n  getLayoutTitleBand\n} from '../../../src/compile/header/assemble';\nimport {HEADER_CHANNELS} from '../../../src/compile/header/component';\nimport {\n  HEADER_LABEL_PROPERTIES,\n  HEADER_LABEL_PROPERTIES_MAP,\n  HEADER_TITLE_PROPERTIES,\n  HEADER_TITLE_PROPERTIES_MAP\n} from '../../../src/header';\nimport {parseFacetModel} from '../../util';\n\ndescribe('compile/header/index', () => {\n  describe('defaultHeaderGuideAlign', () => {\n    it('should return left for anchor=start', () => {\n      for (const headerChannel of HEADER_CHANNELS) {\n        expect(defaultHeaderGuideAlign(headerChannel, 0, 'start')).toEqual({align: 'left'});\n      }\n    });\n\n    it('should return right for anchor=start', () => {\n      for (const headerChannel of HEADER_CHANNELS) {\n        expect(defaultHeaderGuideAlign(headerChannel, 0, 'end')).toEqual({align: 'right'});\n      }\n    });\n\n    it('label aligns correctly according to angle for row', () => {\n      expect(defaultHeaderGuideAlign('row', 0)).toEqual({align: 'right'});\n      expect(defaultHeaderGuideAlign('row', 10)).toEqual({align: 'right'});\n      expect(defaultHeaderGuideAlign('row', 135)).toEqual({align: 'left'});\n      expect(defaultHeaderGuideAlign('row', 90)).toEqual({align: 'center'});\n    });\n\n    it('label aligns correctly according to angle for column', () => {\n      expect(defaultHeaderGuideAlign('column', 0)).toEqual({align: 'center'});\n      expect(defaultHeaderGuideAlign('column', 10)).toEqual({align: 'right'});\n      expect(defaultHeaderGuideAlign('column', -10)).toEqual({align: 'left'});\n    });\n  });\n\n  describe('labelBaseline', () => {\n    it('label baseline adjusted according to angle for row', () => {\n      expect(defaultHeaderGuideBaseline(0, 'row')).toEqual({baseline: 'middle'});\n      expect(defaultHeaderGuideBaseline(90, 'row')).toEqual({baseline: 'top'});\n    });\n\n    it('label baseline adjusted according to angle for column', () => {\n      expect(defaultHeaderGuideBaseline(0, 'column')).toEqual({baseline: 'bottom'});\n      expect(defaultHeaderGuideBaseline(60, 'column')).toEqual({baseline: 'middle'});\n    });\n  });\n\n  describe('getHeaderGroups', () => {\n    it('should correctly process sort descending', () => {\n      const model = parseFacetModel({\n        facet: {\n          row: {field: 'a', type: 'ordinal', sort: 'ascending'},\n          column: {field: 'a', type: 'ordinal', sort: 'descending'}\n        },\n        spec: {\n          mark: 'point',\n          encoding: {\n            x: {field: 'b', type: 'quantitative'},\n            y: {field: 'c', type: 'quantitative'}\n          }\n        }\n      });\n      model.parseScale();\n      model.parseLayoutSize();\n      model.parseAxesAndHeaders();\n\n      const rowHeaderGroups = assembleHeaderGroups(model, 'row');\n      const columnHeaderGroups = assembleHeaderGroups(model, 'column');\n      expect(rowHeaderGroups[0].sort.order).toEqual('ascending');\n      expect(columnHeaderGroups[0].sort.order).toEqual('descending');\n    });\n\n    it('should correctly process sort field', () => {\n      const model = parseFacetModel({\n        facet: {\n          row: {field: 'a', type: 'ordinal', sort: {field: 'd', op: 'min'}}\n        },\n        spec: {\n          mark: 'point',\n          encoding: {\n            x: {field: 'b', type: 'quantitative'},\n            y: {field: 'c', type: 'quantitative'}\n          }\n        }\n      });\n      model.parseScale();\n      model.parseLayoutSize();\n      model.parseAxesAndHeaders();\n\n      const rowHeaderGroups = assembleHeaderGroups(model, 'row');\n      expect(rowHeaderGroups[0].sort.field).toEqual('datum[\"min_d\"]');\n    });\n  });\n\n  describe('getLayoutTitleBand', () => {\n    it('should return 0 for column start', () => {\n      expect(getLayoutTitleBand('start', 'column')).toEqual(0);\n    });\n\n    it('should return 1 for column end', () => {\n      expect(getLayoutTitleBand('end', 'column')).toEqual(1);\n    });\n    it('should return 1 for row start', () => {\n      expect(getLayoutTitleBand('start', 'row')).toEqual(1);\n    });\n\n    it('should return 0 for row end', () => {\n      expect(getLayoutTitleBand('end', 'row')).toEqual(0);\n    });\n  });\n\n  describe('getTitleGroup', () => {\n    const model = parseFacetModel({\n      facet: {\n        row: {field: 'a', type: 'ordinal'},\n        column: {field: 'a', type: 'ordinal'}\n      },\n      spec: {\n        mark: 'point',\n        encoding: {\n          x: {field: 'b', type: 'quantitative'},\n          y: {field: 'c', type: 'quantitative'}\n        }\n      }\n    });\n    model.parseScale();\n    model.parseLayoutSize();\n    model.parseAxesAndHeaders();\n\n    describe('for column', () => {\n      const columnLabelGroup = assembleTitleGroup(model, 'column');\n      const {title, ...columnTitleGroupTopLevelProps} = columnLabelGroup;\n      it('returns a header group mark with correct name, role, and type.', () => {\n        expect(columnTitleGroupTopLevelProps).toEqual({\n          name: 'column-title',\n          type: 'group',\n          role: 'column-title'\n        });\n      });\n      const name = title.text;\n      it('contains a correct title definition, including the correct name and orientation', () => {\n        expect(title).toEqual({\n          text: name,\n          offset: 10,\n          style: 'guide-title'\n        });\n      });\n    });\n\n    describe('for row', () => {\n      const rowTitleGroup = assembleTitleGroup(model, 'row');\n      const {title, ...rowTitleGroupTopLevelProps} = rowTitleGroup;\n      it('returns a header group mark with correct name, role, and type.', () => {\n        expect(rowTitleGroupTopLevelProps).toEqual({\n          name: 'row-title',\n          type: 'group',\n          role: 'row-title'\n        });\n      });\n      const name = title.text;\n      it('contains a correct title definition, including the correct name and orientation.', () => {\n        expect(title).toEqual({\n          text: name,\n          offset: 10,\n          orient: 'left',\n          style: 'guide-title'\n        });\n      });\n    });\n  });\n\n  describe('assembleHeaderProperties', () => {\n    describe('for title properties', () => {\n      const model = parseFacetModel({\n        config: {header: {titleFontSize: 20}},\n        facet: {\n          row: {field: 'a', type: 'ordinal', header: {titleFontSize: 40}}\n        },\n        spec: {\n          mark: 'point',\n          encoding: {\n            x: {field: 'b', type: 'quantitative'},\n            y: {field: 'c', type: 'quantitative'}\n          }\n        }\n      });\n      model.parseScale();\n      model.parseLayoutSize();\n      model.parseAxesAndHeaders();\n      const config = model.config;\n      const facetFieldDef = model.component.layoutHeaders['row'].facetFieldDef;\n\n      const headerTitleProps = assembleHeaderProperties(\n        config,\n        facetFieldDef,\n        'column',\n        HEADER_TITLE_PROPERTIES,\n        HEADER_TITLE_PROPERTIES_MAP\n      );\n      it('should return the correct title property from header', () => {\n        expect(headerTitleProps.fontSize).toEqual(40);\n      });\n\n      const configTitleProps = assembleHeaderProperties(\n        config,\n        undefined,\n        'column',\n        HEADER_TITLE_PROPERTIES,\n        HEADER_TITLE_PROPERTIES_MAP\n      );\n      it('should return the correct title property from config', () => {\n        expect(configTitleProps).toEqual({fontSize: 20, offset: 10});\n      });\n\n      const bothTitleProps = assembleHeaderProperties(\n        config,\n        facetFieldDef,\n        'column',\n        HEADER_TITLE_PROPERTIES,\n        HEADER_TITLE_PROPERTIES_MAP\n      );\n      it('should overwrite the config title property with the header title property', () => {\n        expect(bothTitleProps.fontSize).toEqual(40);\n      });\n    });\n\n    describe('for label properties', () => {\n      const model = parseFacetModel({\n        config: {header: {labelFontSize: 20}},\n        facet: {\n          row: {field: 'a', type: 'ordinal', header: {labelFontSize: 40}}\n        },\n        spec: {\n          mark: 'point',\n          encoding: {\n            x: {field: 'b', type: 'quantitative'},\n            y: {field: 'c', type: 'quantitative'}\n          }\n        }\n      });\n      model.parseScale();\n      model.parseLayoutSize();\n      model.parseAxesAndHeaders();\n      const config = model.config;\n      const facetFieldDef = model.component.layoutHeaders['row'].facetFieldDef;\n\n      const headerLabelProps = assembleHeaderProperties(\n        config,\n        facetFieldDef,\n        'column',\n        HEADER_LABEL_PROPERTIES,\n        HEADER_LABEL_PROPERTIES_MAP\n      );\n      it('should return the correct label property from header', () => {\n        expect(headerLabelProps.fontSize).toEqual(40);\n      });\n\n      const configLabelProps = assembleHeaderProperties(\n        config,\n        undefined,\n        'column',\n        HEADER_LABEL_PROPERTIES,\n        HEADER_LABEL_PROPERTIES_MAP\n      );\n      it('should return the correct label property from config', () => {\n        expect(configLabelProps).toEqual({fontSize: 20, offset: 10});\n      });\n\n      const bothLabelProps = assembleHeaderProperties(\n        config,\n        facetFieldDef,\n        'column',\n        HEADER_LABEL_PROPERTIES,\n        HEADER_LABEL_PROPERTIES_MAP\n      );\n      it('should overwrite the config label property with the header label property', () => {\n        expect(bothLabelProps.fontSize).toEqual(40);\n      });\n    });\n  });\n});\n"]}