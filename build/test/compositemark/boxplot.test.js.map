{"version":3,"file":"boxplot.test.js","sourceRoot":"","sources":["../../../test/compositemark/boxplot.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:quotemark */\nimport {assert} from 'chai';\n\nimport * as log from '../../src/log';\nimport {normalize} from '../../src/spec';\nimport {Transform} from '../../src/transform';\nimport {defaultConfig} from '.././../src/config';\n\ndescribe('normalizeBoxMinMax', () => {\n  it('should produce an error if both axes have aggregate boxplot', () => {\n    assert.throws(\n      () => {\n        normalize(\n          {\n            description:\n              'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n            data: {url: 'data/population.json'},\n            mark: {\n              type: 'boxplot',\n              extent: 'min-max'\n            },\n            encoding: {\n              x: {aggregate: 'boxplot', field: 'people', type: 'quantitative'},\n              y: {\n                aggregate: 'boxplot',\n                field: 'people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          defaultConfig\n        );\n      },\n      Error,\n      'Both x and y cannot have aggregate'\n    );\n  });\n\n  it('should produce correct layered specs for vertical boxplot with two quantitative axes and use default orientation', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 'min-max',\n            size: 5\n          },\n          encoding: {\n            x: {field: 'age', type: 'quantitative'},\n            y: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: ['age']\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 5\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'horizontal',\n              style: 'boxplot-median',\n              color: 'white',\n              size: 5\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce an error if neither the x axis or y axis is specified', () => {\n    assert.throws(\n      () => {\n        normalize(\n          {\n            description:\n              'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n            data: {url: 'data/population.json'},\n            mark: {\n              type: 'boxplot',\n              extent: 'min-max'\n            },\n            encoding: {\n              color: {value: 'skyblue'}\n            }\n          },\n          defaultConfig\n        );\n      },\n      Error,\n      'Need a valid continuous axis for boxplots'\n    );\n  });\n\n  it(\n    'should produce a warning if continuous axis has aggregate property',\n    log.wrap(localLogger => {\n      const aggregate = 'min';\n      const type = 'boxplot';\n\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type,\n            extent: 'min-max',\n            size: 14\n          },\n          encoding: {\n            x: {field: 'age', type: 'ordinal'},\n            y: {\n              aggregate,\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      );\n\n      assert.equal(localLogger.warns[0], log.message.errorBarContinuousAxisHasCustomizedAggregate(aggregate, type));\n    })\n  );\n\n  it('should produce an error if build 1D boxplot with a discrete axis', () => {\n    assert.throws(\n      () => {\n        normalize(\n          {\n            description:\n              'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n            data: {url: 'data/population.json'},\n            mark: 'boxplot',\n            encoding: {\n              x: {field: 'age', type: 'ordinal'}\n            }\n          },\n          defaultConfig\n        );\n      },\n      Error,\n      'Need a valid continuous axis for boxplots'\n    );\n  });\n\n  it('should produce an error if both axes are discrete', () => {\n    assert.throws(\n      () => {\n        normalize(\n          {\n            description:\n              'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n            data: {url: 'data/population.json'},\n            mark: {\n              type: 'boxplot',\n              extent: 'min-max'\n            },\n            encoding: {\n              x: {field: 'age', type: 'ordinal'},\n              y: {\n                field: 'age',\n                type: 'ordinal',\n                axis: {title: 'age'}\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          defaultConfig\n        );\n      },\n      Error,\n      'Need a valid continuous axis for boxplots'\n    );\n  });\n\n  it('should produce an error if in 2D boxplot both axes are not valid field definitions', () => {\n    assert.throws(\n      () => {\n        normalize(\n          {\n            description:\n              'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n            data: {url: 'data/population.json'},\n            mark: {\n              type: 'boxplot',\n              extent: 'min-max'\n            },\n            encoding: {\n              x: {field: 'age', type: 'ordinal'},\n              y: {\n                type: 'ordinal',\n                axis: {title: 'age'}\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          defaultConfig\n        );\n      },\n      Error,\n      'Need a valid continuous axis for boxplots'\n    );\n  });\n\n  it('should produce an error if 1D boxplot only axis is discrete', () => {\n    assert.throws(\n      () => {\n        normalize(\n          {\n            description:\n              'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n            data: {url: 'data/population.json'},\n            mark: 'boxplot',\n            encoding: {\n              x: {field: 'age', type: 'ordinal'},\n              color: {value: 'skyblue'}\n            }\n          },\n          defaultConfig\n        );\n      },\n      Error,\n      'Need a valid continuous axis for boxplots'\n    );\n  });\n\n  it('should produce correct layered specs for vertical boxplot with two quantitative axes and specify orientation with orient', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            orient: 'vertical',\n            extent: 'min-max'\n          },\n          encoding: {\n            x: {field: 'age', type: 'quantitative'},\n            y: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: ['age']\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 14\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'horizontal',\n              style: 'boxplot-median',\n              size: 14,\n              color: 'white'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for horizontal boxplot with two quantitative axes and specify orientation with orient', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            orient: 'horizontal',\n            extent: 'min-max'\n          },\n          encoding: {\n            y: {field: 'age', type: 'quantitative'},\n            x: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: ['age']\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {field: 'age', type: 'quantitative', title: 'age'},\n              x: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {field: 'age', type: 'quantitative', title: 'age'},\n              x: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 14\n            },\n            encoding: {\n              y: {field: 'age', type: 'quantitative', title: 'age'},\n              x: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'vertical',\n              style: 'boxplot-median',\n              color: 'white',\n              size: 14\n            },\n            encoding: {\n              y: {field: 'age', type: 'quantitative', title: 'age'},\n              x: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for vertical boxplot with two quantitative axes and specify orientation with aggregate', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 'min-max'\n          },\n          encoding: {\n            x: {field: 'age', type: 'quantitative'},\n            y: {\n              field: 'people',\n              type: 'quantitative',\n              aggregate: 'boxplot',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: ['age']\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 14\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'horizontal',\n              style: 'boxplot-median',\n              color: 'white',\n              size: 14\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for horizontal boxplot with two quantitative axes and specify orientation with aggregate', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 'min-max'\n          },\n          encoding: {\n            y: {field: 'age', type: 'quantitative'},\n            x: {\n              field: 'people',\n              type: 'quantitative',\n              aggregate: 'boxplot',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: ['age']\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {field: 'age', type: 'quantitative', title: 'age'},\n              x: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {field: 'age', type: 'quantitative', title: 'age'},\n              x: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 14\n            },\n            encoding: {\n              y: {field: 'age', type: 'quantitative', title: 'age'},\n              x: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'vertical',\n              style: 'boxplot-median',\n              color: 'white',\n              size: 14\n            },\n            encoding: {\n              y: {field: 'age', type: 'quantitative', title: 'age'},\n              x: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for vertical boxplot with min and max', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 'min-max'\n          },\n          encoding: {\n            x: {field: 'age', type: 'ordinal'},\n            y: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: ['age']\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {field: 'age', type: 'ordinal', title: 'age'},\n              y: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {field: 'age', type: 'ordinal', title: 'age'},\n              y: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 14\n            },\n            encoding: {\n              x: {field: 'age', type: 'ordinal', title: 'age'},\n              y: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'horizontal',\n              style: 'boxplot-median',\n              color: 'white',\n              size: 14\n            },\n            encoding: {\n              x: {field: 'age', type: 'ordinal', title: 'age'},\n              y: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for horizontal boxplot with min and max', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 'min-max'\n          },\n          encoding: {\n            y: {field: 'age', type: 'ordinal'},\n            x: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: ['age']\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {field: 'age', type: 'ordinal', title: 'age'},\n              x: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {field: 'age', type: 'ordinal', title: 'age'},\n              x: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 14\n            },\n            encoding: {\n              y: {field: 'age', type: 'ordinal', title: 'age'},\n              x: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              },\n              color: {value: 'skyblue'}\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'vertical',\n              style: 'boxplot-median',\n              color: 'white',\n              size: 14\n            },\n            encoding: {\n              y: {field: 'age', type: 'ordinal', title: 'age'},\n              x: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for horizontal with no nonpositional encoding properties boxplot with min and max', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 'min-max'\n          },\n          encoding: {\n            y: {field: 'age', type: 'ordinal'},\n            x: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            }\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: ['age']\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {field: 'age', type: 'ordinal', title: 'age'},\n              x: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {field: 'age', type: 'ordinal', title: 'age'},\n              x: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 14\n            },\n            encoding: {\n              y: {field: 'age', type: 'ordinal', title: 'age'},\n              x: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'vertical',\n              style: 'boxplot-median',\n              color: 'white',\n              size: 14\n            },\n            encoding: {\n              y: {field: 'age', type: 'ordinal', title: 'age'},\n              x: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for 1D boxplot with only x', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 'min-max'\n          },\n          encoding: {\n            x: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            }\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: []\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              x: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 14\n            },\n            encoding: {\n              x: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              x2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'vertical',\n              style: 'boxplot-median',\n              color: 'white',\n              size: 14\n            },\n            encoding: {\n              x: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for 1D boxplot with only y', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 'min-max'\n          },\n          encoding: {\n            y: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            }\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        transform: [\n          {\n            aggregate: [\n              {\n                op: 'q1',\n                field: 'people',\n                as: 'lower_box_people'\n              },\n              {\n                op: 'q3',\n                field: 'people',\n                as: 'upper_box_people'\n              },\n              {\n                op: 'median',\n                field: 'people',\n                as: 'mid_box_people'\n              },\n              {\n                op: 'min',\n                field: 'people',\n                as: 'lower_whisker_people'\n              },\n              {\n                op: 'max',\n                field: 'people',\n                as: 'upper_whisker_people'\n              }\n            ],\n            groupby: []\n          }\n        ],\n        layer: [\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {\n                field: 'lower_whisker_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'lower_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'rule',\n              style: 'boxplot-rule'\n            },\n            encoding: {\n              y: {\n                field: 'upper_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_whisker_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'bar',\n              style: 'boxplot-box',\n              size: 14\n            },\n            encoding: {\n              y: {\n                field: 'lower_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              },\n              y2: {\n                field: 'upper_box_people',\n                type: 'quantitative'\n              }\n            }\n          },\n          {\n            mark: {\n              type: 'tick',\n              orient: 'horizontal',\n              style: 'boxplot-median',\n              color: 'white',\n              size: 14\n            },\n            encoding: {\n              y: {\n                field: 'mid_box_people',\n                type: 'quantitative',\n                axis: {title: 'population'}\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it(\"should not overwrite transform with boxplot's transfroms\", () => {\n    const outputSpec = normalize(\n      {\n        data: {url: 'data/population.json'},\n        mark: {\n          type: 'boxplot',\n          extent: 'min-max'\n        },\n        transform: [{calculate: 'age * 2', as: 'age2'}],\n        encoding: {x: {field: 'age', type: 'ordinal'}, y: {field: 'people', type: 'quantitative', title: 'population'}}\n      },\n      defaultConfig\n    );\n\n    const transforms: Transform[] = outputSpec.transform;\n    expect(transforms).toBeDefined();\n    expect(transforms).not.toHaveLength(0);\n    expect(transforms[0]).toEqual({calculate: 'age * 2', as: 'age2'});\n  });\n});\n\ndescribe('normalizeBoxIQR', () => {\n  it('should produce correct layered specs for vertical boxplot with two quantitative axes and use default orientation for a 1.5 * IQR whiskers with boxplot mark type', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: 'boxplot',\n          encoding: {\n            x: {field: 'age', type: 'quantitative'},\n            y: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        layer: [\n          {\n            transform: [\n              {\n                aggregate: [\n                  {\n                    op: 'q1',\n                    field: 'people',\n                    as: 'lower_box_people'\n                  },\n                  {\n                    op: 'q3',\n                    field: 'people',\n                    as: 'upper_box_people'\n                  },\n                  {\n                    op: 'median',\n                    field: 'people',\n                    as: 'mid_box_people'\n                  },\n                  {\n                    op: 'min',\n                    field: 'people',\n                    as: 'min_people'\n                  },\n                  {\n                    op: 'max',\n                    field: 'people',\n                    as: 'max_people'\n                  }\n                ],\n                groupby: ['age']\n              },\n              {\n                calculate: 'datum.upper_box_people - datum.lower_box_people',\n                as: 'iqr_people'\n              },\n              {\n                calculate: `min(datum.upper_box_people + datum.iqr_people * ${\n                  defaultConfig.boxplot.extent\n                }, datum.max_people)`,\n                as: 'upper_whisker_people'\n              },\n              {\n                calculate: `max(datum.lower_box_people - datum.iqr_people * ${\n                  defaultConfig.boxplot.extent\n                }, datum.min_people)`,\n                as: 'lower_whisker_people'\n              }\n            ],\n            layer: [\n              {\n                mark: {\n                  type: 'rule',\n                  style: 'boxplot-rule'\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'lower_whisker_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  },\n                  y2: {\n                    field: 'lower_box_people',\n                    type: 'quantitative'\n                  }\n                }\n              },\n              {\n                mark: {\n                  type: 'rule',\n                  style: 'boxplot-rule'\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'upper_box_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  },\n                  y2: {\n                    field: 'upper_whisker_people',\n                    type: 'quantitative'\n                  }\n                }\n              },\n              {\n                mark: {\n                  type: 'bar',\n                  style: 'boxplot-box',\n                  size: 14\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'lower_box_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  },\n                  y2: {\n                    field: 'upper_box_people',\n                    type: 'quantitative'\n                  },\n                  color: {value: 'skyblue'}\n                }\n              },\n              {\n                mark: {\n                  type: 'tick',\n                  orient: 'horizontal',\n                  style: 'boxplot-median',\n                  color: 'white',\n                  size: 14\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'mid_box_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  }\n                }\n              }\n            ]\n          },\n          {\n            transform: [\n              {\n                window: [\n                  {\n                    op: 'q1',\n                    field: 'people',\n                    as: 'lower_box_people'\n                  },\n                  {\n                    op: 'q3',\n                    field: 'people',\n                    as: 'upper_box_people'\n                  }\n                ],\n                groupby: ['age'],\n                frame: [null, null]\n              },\n              {\n                filter:\n                  '(datum.people < datum.lower_box_people - 1.5 * (datum.upper_box_people - datum.lower_box_people)) || (datum.people > datum.upper_box_people + 1.5 * (datum.upper_box_people - datum.lower_box_people))'\n              }\n            ],\n            mark: {\n              type: 'point',\n              style: 'boxplot-outliers'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'people',\n                type: 'quantitative'\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for vertical boxplot with two quantitative axes and use default orientation for a 1.5 * IQR whiskers', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 1.5\n          },\n          encoding: {\n            x: {field: 'age', type: 'quantitative'},\n            y: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            },\n            color: {value: 'skyblue'}\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        layer: [\n          {\n            transform: [\n              {\n                aggregate: [\n                  {\n                    op: 'q1',\n                    field: 'people',\n                    as: 'lower_box_people'\n                  },\n                  {\n                    op: 'q3',\n                    field: 'people',\n                    as: 'upper_box_people'\n                  },\n                  {\n                    op: 'median',\n                    field: 'people',\n                    as: 'mid_box_people'\n                  },\n                  {\n                    op: 'min',\n                    field: 'people',\n                    as: 'min_people'\n                  },\n                  {\n                    op: 'max',\n                    field: 'people',\n                    as: 'max_people'\n                  }\n                ],\n                groupby: ['age']\n              },\n              {\n                calculate: 'datum.upper_box_people - datum.lower_box_people',\n                as: 'iqr_people'\n              },\n              {\n                calculate: 'min(datum.upper_box_people + datum.iqr_people * 1.5, datum.max_people)',\n                as: 'upper_whisker_people'\n              },\n              {\n                calculate: 'max(datum.lower_box_people - datum.iqr_people * 1.5, datum.min_people)',\n                as: 'lower_whisker_people'\n              }\n            ],\n            layer: [\n              {\n                mark: {\n                  type: 'rule',\n                  style: 'boxplot-rule'\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'lower_whisker_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  },\n                  y2: {\n                    field: 'lower_box_people',\n                    type: 'quantitative'\n                  }\n                }\n              },\n              {\n                mark: {\n                  type: 'rule',\n                  style: 'boxplot-rule'\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'upper_box_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  },\n                  y2: {\n                    field: 'upper_whisker_people',\n                    type: 'quantitative'\n                  }\n                }\n              },\n              {\n                mark: {\n                  type: 'bar',\n                  style: 'boxplot-box',\n                  size: 14\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'lower_box_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  },\n                  y2: {\n                    field: 'upper_box_people',\n                    type: 'quantitative'\n                  },\n                  color: {value: 'skyblue'}\n                }\n              },\n              {\n                mark: {\n                  type: 'tick',\n                  orient: 'horizontal',\n                  style: 'boxplot-median',\n                  color: 'white',\n                  size: 14\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'mid_box_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  }\n                }\n              }\n            ]\n          },\n          {\n            transform: [\n              {\n                window: [\n                  {\n                    op: 'q1',\n                    field: 'people',\n                    as: 'lower_box_people'\n                  },\n                  {\n                    op: 'q3',\n                    field: 'people',\n                    as: 'upper_box_people'\n                  }\n                ],\n                groupby: ['age'],\n                frame: [null, null]\n              },\n              {\n                filter:\n                  '(datum.people < datum.lower_box_people - 1.5 * (datum.upper_box_people - datum.lower_box_people)) || (datum.people > datum.upper_box_people + 1.5 * (datum.upper_box_people - datum.lower_box_people))'\n              }\n            ],\n            mark: {\n              type: 'point',\n              style: 'boxplot-outliers'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'people',\n                type: 'quantitative'\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n\n  it('should produce correct layered specs for vertical IQR boxplot where color encodes the mean of the people field', () => {\n    assert.deepEqual(\n      normalize(\n        {\n          description:\n            'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n          data: {url: 'data/population.json'},\n          mark: {\n            type: 'boxplot',\n            extent: 1.5\n          },\n          encoding: {\n            x: {field: 'age', type: 'quantitative'},\n            y: {\n              field: 'people',\n              type: 'quantitative',\n              axis: {title: 'population'}\n            },\n            color: {\n              aggregate: 'mean',\n              field: 'people',\n              type: 'quantitative'\n            }\n          }\n        },\n        defaultConfig\n      ),\n      {\n        description: 'A box plot showing median, min, and max in the US population distribution of age groups in 2000.',\n        data: {url: 'data/population.json'},\n        layer: [\n          {\n            transform: [\n              {\n                aggregate: [\n                  {\n                    op: 'mean',\n                    field: 'people',\n                    as: 'mean_people'\n                  },\n                  {\n                    op: 'q1',\n                    field: 'people',\n                    as: 'lower_box_people'\n                  },\n                  {\n                    op: 'q3',\n                    field: 'people',\n                    as: 'upper_box_people'\n                  },\n                  {\n                    op: 'median',\n                    field: 'people',\n                    as: 'mid_box_people'\n                  },\n                  {\n                    op: 'min',\n                    field: 'people',\n                    as: 'min_people'\n                  },\n                  {\n                    op: 'max',\n                    field: 'people',\n                    as: 'max_people'\n                  }\n                ],\n                groupby: ['age']\n              },\n              {\n                calculate: 'datum.upper_box_people - datum.lower_box_people',\n                as: 'iqr_people'\n              },\n              {\n                calculate: 'min(datum.upper_box_people + datum.iqr_people * 1.5, datum.max_people)',\n                as: 'upper_whisker_people'\n              },\n              {\n                calculate: 'max(datum.lower_box_people - datum.iqr_people * 1.5, datum.min_people)',\n                as: 'lower_whisker_people'\n              }\n            ],\n            layer: [\n              {\n                mark: {\n                  type: 'rule',\n                  style: 'boxplot-rule'\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'lower_whisker_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  },\n                  y2: {\n                    field: 'lower_box_people',\n                    type: 'quantitative'\n                  }\n                }\n              },\n              {\n                mark: {\n                  type: 'rule',\n                  style: 'boxplot-rule'\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'upper_box_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  },\n                  y2: {\n                    field: 'upper_whisker_people',\n                    type: 'quantitative'\n                  }\n                }\n              },\n              {\n                mark: {\n                  type: 'bar',\n                  style: 'boxplot-box',\n                  size: 14\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'lower_box_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  },\n                  y2: {\n                    field: 'upper_box_people',\n                    type: 'quantitative'\n                  },\n                  color: {\n                    field: 'mean_people',\n                    title: 'Mean of people',\n                    type: 'quantitative'\n                  }\n                }\n              },\n              {\n                mark: {\n                  type: 'tick',\n                  orient: 'horizontal',\n                  style: 'boxplot-median',\n                  color: 'white',\n                  size: 14\n                },\n                encoding: {\n                  x: {field: 'age', type: 'quantitative', title: 'age'},\n                  y: {\n                    field: 'mid_box_people',\n                    type: 'quantitative',\n                    axis: {title: 'population'}\n                  }\n                }\n              }\n            ]\n          },\n          {\n            transform: [\n              {\n                window: [\n                  {\n                    op: 'q1',\n                    field: 'people',\n                    as: 'lower_box_people'\n                  },\n                  {\n                    op: 'q3',\n                    field: 'people',\n                    as: 'upper_box_people'\n                  }\n                ],\n                groupby: ['age'],\n                frame: [null, null]\n              },\n              {\n                filter:\n                  '(datum.people < datum.lower_box_people - 1.5 * (datum.upper_box_people - datum.lower_box_people)) || (datum.people > datum.upper_box_people + 1.5 * (datum.upper_box_people - datum.lower_box_people))'\n              }\n            ],\n            mark: {\n              type: 'point',\n              style: 'boxplot-outliers'\n            },\n            encoding: {\n              x: {field: 'age', type: 'quantitative', title: 'age'},\n              y: {\n                field: 'people',\n                type: 'quantitative'\n              }\n            }\n          }\n        ]\n      }\n    );\n  });\n});\n"]}