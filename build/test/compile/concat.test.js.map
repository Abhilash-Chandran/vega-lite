{"version":3,"file":"concat.test.js","sourceRoot":"","sources":["../../../test/compile/concat.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as log from '../../src/log';\nimport {parseConcatModel} from '../util';\n\ndescribe('Concat', () => {\n  describe('merge scale domains', () => {\n    it('should instantiate all children in vconcat', () => {\n      const model = parseConcatModel({\n        vconcat: [\n          {\n            mark: 'point',\n            encoding: {\n              x: {field: 'a', type: 'ordinal'}\n            }\n          },\n          {\n            mark: 'bar',\n            encoding: {\n              x: {field: 'b', type: 'ordinal'},\n              y: {field: 'c', type: 'quantitative'}\n            }\n          }\n        ]\n      });\n\n      expect(model.children).toHaveLength(2);\n      expect(model.isVConcat).toBeTruthy();\n    });\n\n    it('should instantiate all children in hconcat', () => {\n      const model = parseConcatModel({\n        hconcat: [\n          {\n            mark: 'point',\n            encoding: {\n              x: {field: 'a', type: 'ordinal'}\n            }\n          },\n          {\n            mark: 'bar',\n            encoding: {\n              x: {field: 'b', type: 'ordinal'},\n              y: {field: 'c', type: 'quantitative'}\n            }\n          }\n        ]\n      });\n\n      expect(model.children).toHaveLength(2);\n      expect(!model.isVConcat).toBeTruthy();\n    });\n\n    it('should create correct layout for vconcat', () => {\n      const model = parseConcatModel({\n        vconcat: [\n          {\n            mark: 'point',\n            encoding: {}\n          },\n          {\n            mark: 'bar',\n            encoding: {}\n          }\n        ]\n      });\n\n      expect(model.assembleLayout()).toEqual({\n        padding: {row: 10, column: 10},\n        columns: 1,\n        bounds: 'full',\n        align: 'each'\n      });\n    });\n\n    it('should create correct layout for hconcat', () => {\n      const model = parseConcatModel({\n        hconcat: [\n          {\n            mark: 'point',\n            encoding: {}\n          },\n          {\n            mark: 'bar',\n            encoding: {}\n          }\n        ]\n      });\n\n      expect(model.assembleLayout()).toEqual({\n        padding: {row: 10, column: 10},\n        bounds: 'full',\n        align: 'each'\n      });\n    });\n  });\n\n  describe('resolve', () => {\n    it(\n      'cannot share axes',\n      log.wrap(localLogger => {\n        parseConcatModel({\n          hconcat: [],\n          resolve: {\n            axis: {\n              x: 'shared'\n            }\n          }\n        });\n        expect(localLogger.warns[0]).toEqual(log.message.CONCAT_CANNOT_SHARE_AXIS);\n      })\n    );\n  });\n});\n"]}