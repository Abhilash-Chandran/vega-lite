{"version":3,"file":"signal.js","sourceRoot":"","sources":["../../../src/compile/signal.ts"],"names":[],"mappings":"AAIA;;;GAGG;AACH,MAAM,OAAO,gBAAgB;IAC3B,YAAoB,aAA2B;QAA3B,kBAAa,GAAb,aAAa,CAAc;IAAG,CAAC;IAEnD,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;IAC9B,CAAC;IAEM,MAAM;QACX,OAAO,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC;IAC/B,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,MAAc,EAAE,UAAkB;QACvD,OAAO,IAAI,gBAAgB,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACxD,CAAC;CACF","sourcesContent":["import {SignalRef} from 'vega';\n\nexport type Rename = (oldSignalName: string) => string;\n\n/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport class SignalRefWrapper implements SignalRef {\n  constructor(private exprGenerator: () => string) {}\n\n  public get signal() {\n    return this.exprGenerator();\n  }\n\n  public toJSON() {\n    return {signal: this.signal};\n  }\n\n  public static fromName(rename: Rename, signalName: string) {\n    return new SignalRefWrapper(() => rename(signalName));\n  }\n}\n"]}