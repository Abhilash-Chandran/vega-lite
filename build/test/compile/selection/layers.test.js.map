{"version":3,"file":"layers.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/layers.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport * as selection from '../../../src/compile/selection';\nimport {UnitModel} from '../../../src/compile/unit';\nimport {parseLayerModel} from '../../util';\n\ndescribe('Layered Selections', () => {\n  const layers = parseLayerModel({\n    layer: [\n      {\n        selection: {\n          brush: {type: 'interval'}\n        },\n        mark: 'circle',\n        encoding: {\n          x: {field: 'Horsepower', type: 'quantitative'},\n          y: {field: 'Miles_per_Gallon', type: 'quantitative'},\n          color: {field: 'Origin', type: 'nominal'}\n        }\n      },\n      {\n        selection: {\n          grid: {type: 'interval', bind: 'scales'}\n        },\n        mark: 'square',\n        encoding: {\n          x: {field: 'Horsepower', type: 'quantitative'},\n          y: {field: 'Miles_per_Gallon', type: 'quantitative'},\n          color: {field: 'Origin', type: 'nominal'}\n        }\n      }\n    ],\n    config: {mark: {tooltip: null}}\n  });\n\n  layers.parse();\n\n  it('should appropriately name the unit', () => {\n    const unit = layers.children[0] as UnitModel;\n    expect(selection.unitName(unit)).toEqual('\"layer_0\"');\n  });\n\n  // Selections should augment layered marks together, rather than each\n  // mark individually. This ensures correct interleaving of brush marks\n  // (i.e., that the brush mark appears above all layers and thus can be\n  // moved around).\n  it('should pass through unit mark assembly', () => {\n    expect(layers.children[0].assembleMarks()).toEqual([\n      {\n        name: 'layer_0_marks',\n        type: 'symbol',\n        style: ['circle'],\n        from: {\n          data: 'layer_0_main'\n        },\n        clip: true,\n        encode: {\n          update: {\n            x: {\n              scale: 'x',\n              field: 'Horsepower'\n            },\n            y: {\n              scale: 'y',\n              field: 'Miles_per_Gallon'\n            },\n            fill: [\n              {\n                test:\n                  'datum[\"Horsepower\"] === null || isNaN(datum[\"Horsepower\"]) || datum[\"Miles_per_Gallon\"] === null || isNaN(datum[\"Miles_per_Gallon\"])',\n                value: null\n              },\n              {\n                scale: 'color',\n                field: 'Origin'\n              }\n            ],\n            shape: {\n              value: 'circle'\n            },\n            opacity: {\n              value: 0.7\n            }\n          }\n        }\n      }\n    ]);\n\n    expect(layers.children[1].assembleMarks()).toEqual([\n      {\n        name: 'layer_1_marks',\n        type: 'symbol',\n        style: ['square'],\n        from: {\n          data: 'layer_1_main'\n        },\n        clip: true,\n        encode: {\n          update: {\n            x: {\n              scale: 'x',\n              field: 'Horsepower'\n            },\n            y: {\n              scale: 'y',\n              field: 'Miles_per_Gallon'\n            },\n            fill: [\n              {\n                test:\n                  'datum[\"Horsepower\"] === null || isNaN(datum[\"Horsepower\"]) || datum[\"Miles_per_Gallon\"] === null || isNaN(datum[\"Miles_per_Gallon\"])',\n                value: null\n              },\n              {\n                scale: 'color',\n                field: 'Origin'\n              }\n            ],\n            shape: {\n              value: 'square'\n            },\n            opacity: {\n              value: 0.7\n            }\n          }\n        }\n      }\n    ]);\n  });\n\n  it('should assemble selection marks across layers', () => {\n    const child0 = layers.children[0].assembleMarks()[0];\n    const child1 = layers.children[1].assembleMarks()[0];\n\n    expect(layers.assembleMarks()).toEqual([\n      // Background brush mark for \"brush\" selection.\n      {\n        name: 'brush_brush_bg',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: '#333'},\n            fillOpacity: {value: 0.125}\n          },\n          update: {\n            x: [\n              {\n                test: 'data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"',\n                signal: 'brush_x[0]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y: [\n              {\n                test: 'data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"',\n                signal: 'brush_y[0]'\n              },\n              {\n                value: 0\n              }\n            ],\n            x2: [\n              {\n                test: 'data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"',\n                signal: 'brush_x[1]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y2: [\n              {\n                test: 'data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"',\n                signal: 'brush_y[1]'\n              },\n              {\n                value: 0\n              }\n            ]\n          }\n        }\n      },\n      // Layer marks\n      {...child0, clip: true},\n      {...child1, clip: true},\n      // Foreground brush mark for \"brush\" selection.\n      {\n        name: 'brush_brush',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: 'transparent'}\n          },\n          update: {\n            stroke: [\n              {\n                test: 'brush_x[0] !== brush_x[1] && brush_y[0] !== brush_y[1]',\n                value: 'white'\n              },\n              {value: null}\n            ],\n            x: [\n              {\n                test: 'data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"',\n                signal: 'brush_x[0]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y: [\n              {\n                test: 'data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"',\n                signal: 'brush_y[0]'\n              },\n              {\n                value: 0\n              }\n            ],\n            x2: [\n              {\n                test: 'data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"',\n                signal: 'brush_x[1]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y2: [\n              {\n                test: 'data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"',\n                signal: 'brush_y[1]'\n              },\n              {\n                value: 0\n              }\n            ]\n          }\n        }\n      }\n    ]);\n  });\n});\n"]}