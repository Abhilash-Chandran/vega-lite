{"version":3,"file":"translate.test.js","sourceRoot":"","sources":["../../test-runtime/translate.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {assert} from 'chai';\nimport {Page} from 'puppeteer';\nimport {\n  bound,\n  brush,\n  compositeTypes,\n  embedFn,\n  hits as hitsMaster,\n  parentSelector,\n  spec,\n  testRenderFn,\n  tuples,\n  unbound\n} from './util';\n\ndeclare const page: Page;\n// declare const jestPuppeteer: any;\n\nfor (const bind of [bound, unbound]) {\n  describe(`Translate ${bind} interval selections at runtime`, () => {\n    beforeAll(async () => {\n      await page.goto('http://0.0.0.0:8000/test-runtime/');\n    });\n\n    const type = 'interval';\n    const hits = hitsMaster.interval;\n    const embed = embedFn(page);\n    const testRender = testRenderFn(page, `interval/translate/${bind}`);\n    const binding = bind === bound ? {bind: 'scales'} : {};\n\n    const assertExtent = {\n      [unbound]: {\n        x: ['isAbove', 'isBelow'],\n        y: ['isBelow', 'isAbove']\n      },\n      [bound]: {\n        x: ['isBelow', 'isAbove'],\n        y: ['isAbove', 'isBelow']\n      }\n    };\n\n    it('should move back-and-forth', async () => {\n      for (let i = 0; i < hits.translate.length; i++) {\n        await embed(spec('unit', i, {type, ...binding}));\n        const drag = (await page.evaluate(brush('drag', i)))[0];\n        await testRender(`${i}-0`);\n        const translate = (await page.evaluate(brush('translate', i, null, bind === unbound)))[0];\n        assert[assertExtent[bind].x[i]](translate.values[0][0], drag.values[0][0]);\n        assert[assertExtent[bind].x[i]](translate.values[0][1], drag.values[0][1]);\n        assert[assertExtent[bind].y[i]](translate.values[1][0], drag.values[1][0]);\n        assert[assertExtent[bind].y[i]](translate.values[1][1], drag.values[1][1]);\n        await testRender(`${i}-1`);\n      }\n    });\n\n    it('should work with binned domains', async () => {\n      for (let i = 0; i < hits.bins.length; i++) {\n        await embed(\n          spec(\n            'unit',\n            1,\n            {type, ...binding, encodings: ['y']},\n            {\n              x: {aggregate: 'count', type: 'quantitative'},\n              y: {bin: true},\n              color: {value: 'steelblue', field: null, type: null}\n            }\n          )\n        );\n        const drag = (await page.evaluate(brush('bins', i)))[0];\n        await testRender(`bins_${i}-0`);\n        const translate = (await page.evaluate(brush('bins_translate', i, null, bind === unbound)))[0];\n        assert[assertExtent[bind].y[i]](translate.values[0][0], drag.values[0][0]);\n        assert[assertExtent[bind].y[i]](translate.values[0][1], drag.values[0][1]);\n        await testRender(`bins_${i}-1`);\n      }\n    });\n\n    it('should work with temporal domains', async () => {\n      // await jestPuppeteer.debug();\n      const values = tuples.map(d => ({...d, a: new Date(2017, d.a)}));\n      const toNumber = (a: any) => a[0].values[0].map((d: any) => +d);\n\n      for (let i = 0; i < hits.translate.length; i++) {\n        await embed(spec('unit', i, {type, ...binding, encodings: ['x']}, {values, x: {type: 'temporal'}}));\n        const drag = toNumber(await page.evaluate(brush('drag', i)));\n        await testRender(`temporal_${i}-0`);\n        const translate = toNumber(await page.evaluate(brush('translate', i, null, bind === unbound)));\n        assert[assertExtent[bind].x[i]](translate[0], drag[0]);\n        assert[assertExtent[bind].x[i]](translate[1], drag[1]);\n        await testRender(`temporal_${i}-1`);\n      }\n    });\n\n    it('should work with log/pow scales', async () => {\n      for (let i = 0; i < hits.translate.length; i++) {\n        await embed(\n          spec(\n            'unit',\n            i,\n            {type, ...binding},\n            {\n              x: {scale: {type: 'pow', exponent: 1.5}},\n              y: {scale: {type: 'log'}}\n            }\n          )\n        );\n        const drag = (await page.evaluate(brush('drag', i)))[0];\n        await testRender(`logpow_${i}-0`);\n        const translate = (await page.evaluate(brush('translate', i, null, bind === unbound)))[0];\n        assert[assertExtent[bind].x[i]](translate.values[0][0], drag.values[0][0]);\n        assert[assertExtent[bind].x[i]](translate.values[0][1], drag.values[0][1]);\n        assert[assertExtent[bind].y[i]](translate.values[1][0], drag.values[1][0]);\n        assert[assertExtent[bind].y[i]](translate.values[1][1], drag.values[1][1]);\n        await testRender(`logpow_${i}-1`);\n      }\n    });\n\n    if (bind === unbound) {\n      it('should work with ordinal/nominal domains', async () => {\n        for (let i = 0; i < hits.translate.length; i++) {\n          await embed(\n            spec(\n              'unit',\n              i,\n              {type, ...binding},\n              {\n                x: {type: 'ordinal'},\n                y: {type: 'nominal'}\n              }\n            )\n          );\n          const drag = (await page.evaluate(brush('drag', i)))[0];\n          await testRender(`ord_${i}-0`);\n          const translate = (await page.evaluate(brush('translate', i, null, true)))[0];\n          assert[assertExtent[bind].x[i]](translate.values[0][0], drag.values[0][0]);\n          assert[assertExtent[bind].x[i]](translate.values[0][1], drag.values[0][1]);\n          assert[assertExtent[bind].y[i]](translate.values[1][0], drag.values[1][0]);\n          assert[assertExtent[bind].y[i]](translate.values[1][1], drag.values[1][1]);\n          await testRender(`ord_${i}-1`);\n        }\n      });\n    } else {\n      compositeTypes.forEach(specType => {\n        const assertExtents = {\n          repeat: {\n            x: ['isBelow', 'isBelow', 'isBelow'],\n            y: ['isAbove', 'isAbove', 'isAbove']\n          },\n          facet: {\n            x: ['isBelow', 'isBelow', 'isBelow'],\n            y: ['isBelow', 'isAbove', 'isBelow']\n          }\n        };\n        it(`should work with shared scales in ${specType} views`, async () => {\n          for (let i = 0; i < hits[specType].length; i++) {\n            await embed(spec(specType, 0, {type, ...binding}, {resolve: {scale: {x: 'shared', y: 'shared'}}}));\n            const parent = parentSelector(specType, i);\n            const xscale = await page.evaluate('view._runtime.scales.x.value.domain()');\n            const yscale = await page.evaluate('view._runtime.scales.y.value.domain()');\n            const drag = (await page.evaluate(brush(specType, i, parent)))[0];\n            assert[assertExtents[specType].x[i]](drag.values[0][0], xscale[0], `iter: ${i}`);\n            assert[assertExtents[specType].x[i]](drag.values[0][1], xscale[1], `iter: ${i}`);\n            assert[assertExtents[specType].y[i]](drag.values[1][0], yscale[0], `iter: ${i}`);\n            assert[assertExtents[specType].y[i]](drag.values[1][1], yscale[1], `iter: ${i}`);\n            await testRender(`${specType}_${i}`);\n          }\n        });\n      });\n    }\n  });\n}\n"]}