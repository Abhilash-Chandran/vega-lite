{"version":3,"file":"config.test.js","sourceRoot":"","sources":["../../test/config.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {assert} from 'chai';\nimport {Config, defaultConfig, isVgScheme, stripAndRedirectConfig} from '../src/config';\nimport {PRIMITIVE_MARKS} from '../src/mark';\nimport {duplicate} from '../src/util';\n\ndescribe('config', () => {\n  describe('stripAndRedirectConfig', () => {\n    const config: Config = {\n      ...defaultConfig,\n      mark: {\n        ...defaultConfig.mark,\n        opacity: 0.3\n      },\n      bar: {\n        opacity: 0.5,\n        ...defaultConfig.bar\n      },\n      view: {\n        fill: '#eee'\n      },\n      title: {\n        color: 'red',\n        fontWeight: 'bold'\n      },\n      boxplot: {\n        rule: {\n          fill: 'red'\n        },\n        median: {\n          color: 'white'\n        }\n      }\n    };\n    const copy = duplicate(config);\n    const output = stripAndRedirectConfig(config);\n\n    it('should not cause side-effect to the input', () => {\n      assert.deepEqual(config, copy);\n    });\n\n    it('should remove VL only mark config but keep Vega mark config', () => {\n      assert.isUndefined(output.mark.color);\n      assert.equal(output.mark.opacity, 0.3);\n    });\n\n    it('should redirect mark config to style and remove VL only mark-specific config', () => {\n      for (const mark of PRIMITIVE_MARKS) {\n        assert.isUndefined(output[mark], `${mark} config should be redirected`);\n      }\n      assert.isUndefined(output.style.bar['binSpacing'], `VL only Bar config should be removed`);\n      assert.isUndefined(output.style.cell['width'], `VL only cell config should be removed`);\n      assert.isUndefined(output.style.cell['height'], `VL only cell config should be removed`);\n      assert.equal(output.style.cell['fill'], '#eee', `config.view should be redirect to config.style.cell`);\n\n      assert.deepEqual(output.style.bar.opacity, 0.5, 'Bar config should be redirected to config.style.bar');\n    });\n\n    it('should redirect config.title to config.style.group-title and rename color to fill', () => {\n      assert.deepEqual(output.title, undefined);\n      assert.deepEqual(output.style['group-title'].fontWeight, 'bold');\n      assert.deepEqual(output.style['group-title'].fill, 'red');\n    });\n\n    it('should remove empty config object', () => {\n      assert.isUndefined(output.axisTop);\n    });\n  });\n\n  describe('isVgScheme', () => {\n    it('should return true for valid scheme object', () => {\n      assert.isTrue(isVgScheme({scheme: 'viridis', count: 2}));\n    });\n\n    it('should return false for non-scheme object', () => {\n      assert.isFalse(isVgScheme(['#EA98D2', '#659CCA']));\n    });\n  });\n});\n"]}