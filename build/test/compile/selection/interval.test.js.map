{"version":3,"file":"interval.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/interval.test.ts"],"names":[],"mappings":"AAAA,8BAA8B;AAE9B,OAAO,EAAC,MAAM,EAAC,MAAM,MAAM,CAAC;AAC5B,OAAO,EAAC,QAAQ,IAAI,aAAa,EAAC,MAAM,qBAAqB,CAAC;AAE9D,OAAO,QAAQ,MAAM,yCAAyC,CAAC;AAC/D,OAAO,KAAK,SAAS,MAAM,0CAA0C,CAAC;AACtE,OAAO,EAAC,cAAc,EAAC,MAAM,YAAY,CAAC;AAE1C,QAAQ,CAAC,qBAAqB,EAAE;IAC9B,IAAM,KAAK,GAAG,cAAc,CAAC;QAC3B,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE;YACR,CAAC,EAAE,EAAC,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,cAAc,EAAC;YAC9C,CAAC,EAAE,EAAC,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,cAAc,EAAC;YACpD,KAAK,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAC;SAC1C;KACF,CAAC,CAAC;IACH,KAAK,CAAC,UAAU,EAAE,CAAC;IAEnB,IAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,kBAAkB,CAAC,KAAK,EAAE;QAChF,GAAG,EAAE,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAC;QACxE,GAAG,EAAE;YACH,IAAI,EAAE,UAAU;YAChB,SAAS,EAAE,CAAC,GAAG,CAAC;YAChB,IAAI,EAAE,QAAQ;YACd,SAAS,EAAE,KAAK;YAChB,IAAI,EAAE,KAAK;SACZ;QACD,QAAQ,EAAE;YACR,IAAI,EAAE,UAAU;YAChB,EAAE,EAAE,+DAA+D;YACnE,SAAS,EAAE,KAAK;YAChB,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,WAAW;YACpB,IAAI,EAAE;gBACJ,IAAI,EAAE,KAAK;gBACX,WAAW,EAAE,IAAI;gBACjB,MAAM,EAAE,OAAO;gBACf,WAAW,EAAE,CAAC;gBACd,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACnB,gBAAgB,EAAE,CAAC;gBACnB,aAAa,EAAE,IAAI;aACpB;SACF;KACF,CAAC,CAAC,CAAC;IAEJ,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,2BAA2B,EAAE;YAC9B,IAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE;gBAC/B;oBACE,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,EAAE;oBACT,EAAE,EAAE;wBACF;4BACE,MAAM,EAAE,aAAa,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BAC9C,MAAM,EAAE,oBAAoB;yBAC7B;wBACD;4BACE,MAAM,EAAE,aAAa,CAAC,iDAAiD,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BACpF,MAAM,EAAE,sCAAsC;yBAC/C;wBACD;4BACE,MAAM,EAAE,EAAC,MAAM,EAAE,mBAAmB,EAAC;4BACrC,MAAM,EAAE,gEAAgE;yBACzE;qBACF;iBACF;gBACD;oBACE,IAAI,EAAE,gBAAgB;oBACtB,EAAE,EAAE;wBACF;4BACE,MAAM,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC;4BACzB,MAAM,EAAE,mDAAmD;yBAC5D;qBACF;iBACF;gBACD;oBACE,IAAI,EAAE,mBAAmB;oBACzB,MAAM,EACJ,yJAAyJ;iBAC5J;aACF,CAAC,CAAC;YAEH,IAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE;gBAC/B;oBACE,IAAI,EAAE,sBAAsB;oBAC5B,EAAE,EAAE,EAAE;iBACP;aACF,CAAC,CAAC;YAEH,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,kBAAkB,CAAC,OAAO,EAAE;gBACjC;oBACE,IAAI,EAAE,UAAU;oBAChB,KAAK,EAAE,EAAE;oBACT,EAAE,EAAE;wBACF;4BACE,MAAM,EAAE,aAAa,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BAC9C,MAAM,EAAE,oBAAoB;yBAC7B;wBACD;4BACE,MAAM,EAAE,aAAa,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BACrE,MAAM,EAAE,yCAAyC;yBAClD;wBACD;4BACE,MAAM,EAAE,aAAa,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BAC5C,MAAM,EAAE,oBAAoB;yBAC7B;wBACD;4BACE,MAAM,EAAE,aAAa,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BAChE,MAAM,EAAE,yCAAyC;yBAClD;wBACD;4BACE,MAAM,EAAE,EAAC,MAAM,EAAE,sBAAsB,EAAC;4BACxC,MAAM,EAAE,sEAAsE;yBAC/E;qBACF;iBACF;gBACD;oBACE,IAAI,EAAE,mBAAmB;oBACzB,EAAE,EAAE;wBACF;4BACE,MAAM,EAAE,EAAC,MAAM,EAAE,UAAU,EAAC;4BAC5B,MAAM,EAAE,4DAA4D;yBACrE;qBACF;iBACF;gBACD;oBACE,IAAI,EAAE,UAAU;oBAChB,KAAK,EAAE,EAAE;oBACT,EAAE,EAAE;wBACF;4BACE,MAAM,EAAE,aAAa,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BAC9C,MAAM,EAAE,oBAAoB;yBAC7B;wBACD;4BACE,MAAM,EAAE,aAAa,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BACrE,MAAM,EAAE,0CAA0C;yBACnD;wBACD;4BACE,MAAM,EAAE,aAAa,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BAC5C,MAAM,EAAE,oBAAoB;yBAC7B;wBACD;4BACE,MAAM,EAAE,aAAa,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;4BAChE,MAAM,EAAE,0CAA0C;yBACnD;wBACD;4BACE,MAAM,EAAE,EAAC,MAAM,EAAE,sBAAsB,EAAC;4BACxC,MAAM,EAAE,kFAAkF;yBAC3F;qBACF;iBACF;gBACD;oBACE,IAAI,EAAE,yBAAyB;oBAC/B,EAAE,EAAE;wBACF;4BACE,MAAM,EAAE,EAAC,MAAM,EAAE,UAAU,EAAC;4BAC5B,MAAM,EAAE,4DAA4D;yBACrE;qBACF;iBACF;gBACD;oBACE,IAAI,EAAE,sBAAsB;oBAC5B,MAAM,EACJ,8UAA8U;iBACjV;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE;YAC3B,IAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE;gBAC/B;oBACE,IAAI,EAAE,WAAW;oBACjB,EAAE,EAAE;wBACF;4BACE,MAAM,EAAE,CAAC,EAAC,MAAM,EAAE,gBAAgB,EAAC,CAAC;4BACpC,MAAM,EAAE,wFAAwF;yBACjG;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,IAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE;gBAC/B;oBACE,IAAI,EAAE,WAAW;oBACjB,EAAE,EAAE;wBACF;4BACE,MAAM,EAAE,CAAC,EAAC,MAAM,EAAE,sBAAsB,EAAC,CAAC;4BAC1C,MAAM,EACJ,oGAAoG;yBACvG;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,kBAAkB,CAAC,OAAO,EAAE;gBACjC;oBACE,IAAI,EAAE,cAAc;oBACpB,EAAE,EAAE;wBACF;4BACE,MAAM,EAAE,CAAC,EAAC,MAAM,EAAE,mBAAmB,EAAC,EAAE,EAAC,MAAM,EAAE,yBAAyB,EAAC,CAAC;4BAC5E,MAAM,EACJ,qJAAqJ;yBACxJ;qBACF;iBACF;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE;YACpD,IAAM,MAAM,GAAG,cAAc,CAAC;gBAC5B,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE;oBACR,CAAC,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC;oBACrC,CAAC,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC;iBACtC;aACF,CAAC,CAAC;YAEH,MAAM,CAAC,UAAU,EAAE,CAAC;YAEpB,IAAM,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,kBAAkB,CAAC,MAAM,EAAE;gBACnF,GAAG,EAAE;oBACH,IAAI,EAAE,UAAU;oBAChB,SAAS,EAAE,CAAC,GAAG,CAAC;oBAChB,SAAS,EAAE,KAAK;oBAChB,IAAI,EAAE,KAAK;iBACZ;aACF,CAAC,CAAC,CAAC;YAEJ,IAAM,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE;QAC1B,IAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5D,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;QAEzC,IAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5D,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;QAEzC,IAAM,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjE,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,0BAA0B,CAAC,CAAC;QAEpD,IAAM,OAAO,GAAG,SAAS,CAAC,4BAA4B,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAClE,MAAM,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACjC;gBACE,IAAI,EAAE,YAAY;gBAClB,EAAE,EAAE;oBACF;wBACE,MAAM,EAAE,EAAC,MAAM,EAAE,WAAW,EAAC;wBAC7B,MAAM,EAAE,2BAAyB,OAAO,MAAG;qBAC5C;iBACF;aACF;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,EAAE,EAAE;oBACF;wBACE,MAAM,EAAE,EAAC,MAAM,EAAE,WAAW,EAAC;wBAC7B,MAAM,EAAE,2BAAyB,OAAO,MAAG;qBAC5C;iBACF;aACF;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,EAAE,EAAE;oBACF;wBACE,MAAM,EAAE,EAAC,MAAM,EAAE,cAAc,EAAC;wBAChC,MAAM,EAAE,8BAA4B,SAAS,MAAG;qBACjD;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE;QACtB,IAAM,KAAK,GAAU,CAAC,EAAC,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;QACxC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE;YACpE;gBACE,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE;oBACN,KAAK,EAAE;wBACL,IAAI,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC;wBACrB,WAAW,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC;qBAC5B;oBACD,MAAM,EAAE;wBACN,CAAC,EAAE;4BACD;gCACE,IAAI,EAAE,8DAA8D;gCACpE,MAAM,EAAE,UAAU;6BACnB;4BACD;gCACE,KAAK,EAAE,CAAC;6BACT;yBACF;wBACD,CAAC,EAAE;4BACD;gCACE,IAAI,EAAE,8DAA8D;gCACpE,KAAK,EAAE,CAAC;6BACT;4BACD;gCACE,KAAK,EAAE,CAAC;6BACT;yBACF;wBACD,EAAE,EAAE;4BACF;gCACE,IAAI,EAAE,8DAA8D;gCACpE,MAAM,EAAE,UAAU;6BACnB;4BACD;gCACE,KAAK,EAAE,CAAC;6BACT;yBACF;wBACD,EAAE,EAAE;4BACF;gCACE,IAAI,EAAE,8DAA8D;gCACpE,KAAK,EAAE;oCACL,KAAK,EAAE,QAAQ;iCAChB;6BACF;4BACD;gCACE,KAAK,EAAE,CAAC;6BACT;yBACF;qBACF;iBACF;aACF;YACD,EAAC,KAAK,EAAE,OAAO,EAAC;YAChB;gBACE,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE;oBACN,KAAK,EAAE;wBACL,IAAI,EAAE,EAAC,KAAK,EAAE,aAAa,EAAC;qBAC7B;oBACD,MAAM,EAAE;wBACN,MAAM,EAAE;4BACN;gCACE,IAAI,EAAE,uBAAuB;gCAC7B,KAAK,EAAE,OAAO;6BACf;4BACD;gCACE,KAAK,EAAE,IAAI;6BACZ;yBACF;wBACD,CAAC,EAAE;4BACD;gCACE,IAAI,EAAE,8DAA8D;gCACpE,MAAM,EAAE,UAAU;6BACnB;4BACD;gCACE,KAAK,EAAE,CAAC;6BACT;yBACF;wBACD,CAAC,EAAE;4BACD;gCACE,IAAI,EAAE,8DAA8D;gCACpE,KAAK,EAAE,CAAC;6BACT;4BACD;gCACE,KAAK,EAAE,CAAC;6BACT;yBACF;wBACD,EAAE,EAAE;4BACF;gCACE,IAAI,EAAE,8DAA8D;gCACpE,MAAM,EAAE,UAAU;6BACnB;4BACD;gCACE,KAAK,EAAE,CAAC;6BACT;yBACF;wBACD,EAAE,EAAE;4BACF;gCACE,IAAI,EAAE,8DAA8D;gCACpE,KAAK,EAAE;oCACL,KAAK,EAAE,QAAQ;iCAChB;6BACF;4BACD;gCACE,KAAK,EAAE,CAAC;6BACT;yBACF;qBACF;iBACF;aACF;SACF,CAAC,CAAC;QAEH,+DAA+D;QAC/D,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;QAE7E,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,EAAE;YACvE;gBACE,IAAI,EAAE,iBAAiB;gBACvB,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE;oBACN,KAAK,EAAE;wBACL,IAAI,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC;wBACpB,WAAW,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC;qBAC3B;oBACD,MAAM,EAAE;wBACN,CAAC,EAAE;4BACD,MAAM,EAAE,aAAa;yBACtB;wBACD,CAAC,EAAE;4BACD,MAAM,EAAE,aAAa;yBACtB;wBACD,EAAE,EAAE;4BACF,MAAM,EAAE,aAAa;yBACtB;wBACD,EAAE,EAAE;4BACF,MAAM,EAAE,aAAa;yBACtB;qBACF;iBACF;aACF;YACD,EAAC,KAAK,EAAE,OAAO,EAAC;YAChB;gBACE,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE;oBACN,KAAK,EAAE;wBACL,IAAI,EAAE,EAAC,KAAK,EAAE,aAAa,EAAC;qBAC7B;oBACD,MAAM,EAAE;wBACN,MAAM,EAAE;4BACN;gCACE,IAAI,EAAE,4DAA4D;gCAClE,KAAK,EAAE,OAAO;6BACf;4BACD,EAAC,KAAK,EAAE,IAAI,EAAC;yBACd;wBACD,WAAW,EAAE;4BACX;gCACE,IAAI,EAAE,4DAA4D;gCAClE,KAAK,EAAE,CAAC;6BACT;4BACD,EAAC,KAAK,EAAE,IAAI,EAAC;yBACd;wBACD,UAAU,EAAE;4BACV;gCACE,IAAI,EAAE,4DAA4D;gCAClE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;6BACf;4BACD,EAAC,KAAK,EAAE,IAAI,EAAC;yBACd;wBACD,gBAAgB,EAAE;4BAChB;gCACE,IAAI,EAAE,4DAA4D;gCAClE,KAAK,EAAE,CAAC;6BACT;4BACD,EAAC,KAAK,EAAE,IAAI,EAAC;yBACd;wBACD,aAAa,EAAE;4BACb;gCACE,IAAI,EAAE,4DAA4D;gCAClE,KAAK,EAAE,IAAI;6BACZ;4BACD,EAAC,KAAK,EAAE,IAAI,EAAC;yBACd;wBACD,CAAC,EAAE;4BACD,MAAM,EAAE,aAAa;yBACtB;wBACD,CAAC,EAAE;4BACD,MAAM,EAAE,aAAa;yBACtB;wBACD,EAAE,EAAE;4BACF,MAAM,EAAE,aAAa;yBACtB;wBACD,EAAE,EAAE;4BACF,MAAM,EAAE,aAAa;yBACtB;qBACF;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* tslint:disable quotemark */\n\nimport {assert} from 'chai';\nimport {selector as parseSelector} from 'vega-event-selector';\n\nimport interval from '../../../src/compile/selection/interval';\nimport * as selection from '../../../src/compile/selection/selection';\nimport {parseUnitModel} from '../../util';\n\ndescribe('Interval Selections', () => {\n  const model = parseUnitModel({\n    mark: 'circle',\n    encoding: {\n      x: {field: 'Horsepower', type: 'quantitative'},\n      y: {field: 'Miles-per-Gallon', type: 'quantitative'},\n      color: {field: 'Origin', type: 'nominal'}\n    }\n  });\n  model.parseScale();\n\n  const selCmpts = (model.component.selection = selection.parseUnitSelection(model, {\n    one: {type: 'interval', encodings: ['x'], translate: false, zoom: false},\n    two: {\n      type: 'interval',\n      encodings: ['y'],\n      bind: 'scales',\n      translate: false,\n      zoom: false\n    },\n    'thr-ee': {\n      type: 'interval',\n      on: '[mousedown, mouseup] > mousemove, [keydown, keyup] > keypress',\n      translate: false,\n      zoom: false,\n      resolve: 'intersect',\n      mark: {\n        fill: 'red',\n        fillOpacity: 0.75,\n        stroke: 'black',\n        strokeWidth: 4,\n        strokeDash: [10, 5],\n        strokeDashOffset: 3,\n        strokeOpacity: 0.25\n      }\n    }\n  }));\n\n  describe('Tuple Signals', () => {\n    it('builds projection signals', () => {\n      const oneSg = interval.signals(model, selCmpts['one']);\n      assert.includeDeepMembers(oneSg, [\n        {\n          name: 'one_x',\n          value: [],\n          on: [\n            {\n              events: parseSelector('mousedown', 'scope')[0],\n              update: '[x(unit), x(unit)]'\n            },\n            {\n              events: parseSelector('[mousedown, window:mouseup] > window:mousemove!', 'scope')[0],\n              update: '[one_x[0], clamp(x(unit), 0, width)]'\n            },\n            {\n              events: {signal: 'one_scale_trigger'},\n              update: '[scale(\"x\", one_Horsepower[0]), scale(\"x\", one_Horsepower[1])]'\n            }\n          ]\n        },\n        {\n          name: 'one_Horsepower',\n          on: [\n            {\n              events: {signal: 'one_x'},\n              update: 'one_x[0] === one_x[1] ? null : invert(\"x\", one_x)'\n            }\n          ]\n        },\n        {\n          name: 'one_scale_trigger',\n          update:\n            '(!isArray(one_Horsepower) || (+invert(\"x\", one_x)[0] === +one_Horsepower[0] && +invert(\"x\", one_x)[1] === +one_Horsepower[1])) ? one_scale_trigger : {}'\n        }\n      ]);\n\n      const twoSg = interval.signals(model, selCmpts['two']);\n      assert.includeDeepMembers(twoSg, [\n        {\n          name: 'two_Miles_per_Gallon',\n          on: []\n        }\n      ]);\n\n      const threeSg = interval.signals(model, selCmpts['thr_ee']);\n      assert.includeDeepMembers(threeSg, [\n        {\n          name: 'thr_ee_x',\n          value: [],\n          on: [\n            {\n              events: parseSelector('mousedown', 'scope')[0],\n              update: '[x(unit), x(unit)]'\n            },\n            {\n              events: parseSelector('[mousedown, mouseup] > mousemove', 'scope')[0],\n              update: '[thr_ee_x[0], clamp(x(unit), 0, width)]'\n            },\n            {\n              events: parseSelector('keydown', 'scope')[0],\n              update: '[x(unit), x(unit)]'\n            },\n            {\n              events: parseSelector('[keydown, keyup] > keypress', 'scope')[0],\n              update: '[thr_ee_x[0], clamp(x(unit), 0, width)]'\n            },\n            {\n              events: {signal: 'thr_ee_scale_trigger'},\n              update: '[scale(\"x\", thr_ee_Horsepower[0]), scale(\"x\", thr_ee_Horsepower[1])]'\n            }\n          ]\n        },\n        {\n          name: 'thr_ee_Horsepower',\n          on: [\n            {\n              events: {signal: 'thr_ee_x'},\n              update: 'thr_ee_x[0] === thr_ee_x[1] ? null : invert(\"x\", thr_ee_x)'\n            }\n          ]\n        },\n        {\n          name: 'thr_ee_y',\n          value: [],\n          on: [\n            {\n              events: parseSelector('mousedown', 'scope')[0],\n              update: '[y(unit), y(unit)]'\n            },\n            {\n              events: parseSelector('[mousedown, mouseup] > mousemove', 'scope')[0],\n              update: '[thr_ee_y[0], clamp(y(unit), 0, height)]'\n            },\n            {\n              events: parseSelector('keydown', 'scope')[0],\n              update: '[y(unit), y(unit)]'\n            },\n            {\n              events: parseSelector('[keydown, keyup] > keypress', 'scope')[0],\n              update: '[thr_ee_y[0], clamp(y(unit), 0, height)]'\n            },\n            {\n              events: {signal: 'thr_ee_scale_trigger'},\n              update: '[scale(\"y\", thr_ee_Miles_per_Gallon[0]), scale(\"y\", thr_ee_Miles_per_Gallon[1])]'\n            }\n          ]\n        },\n        {\n          name: 'thr_ee_Miles_per_Gallon',\n          on: [\n            {\n              events: {signal: 'thr_ee_y'},\n              update: 'thr_ee_y[0] === thr_ee_y[1] ? null : invert(\"y\", thr_ee_y)'\n            }\n          ]\n        },\n        {\n          name: 'thr_ee_scale_trigger',\n          update:\n            '(!isArray(thr_ee_Horsepower) || (+invert(\"x\", thr_ee_x)[0] === +thr_ee_Horsepower[0] && +invert(\"x\", thr_ee_x)[1] === +thr_ee_Horsepower[1])) && (!isArray(thr_ee_Miles_per_Gallon) || (+invert(\"y\", thr_ee_y)[0] === +thr_ee_Miles_per_Gallon[0] && +invert(\"y\", thr_ee_y)[1] === +thr_ee_Miles_per_Gallon[1])) ? thr_ee_scale_trigger : {}'\n        }\n      ]);\n    });\n\n    it('builds trigger signals', () => {\n      const oneSg = interval.signals(model, selCmpts['one']);\n      assert.includeDeepMembers(oneSg, [\n        {\n          name: 'one_tuple',\n          on: [\n            {\n              events: [{signal: 'one_Horsepower'}],\n              update: 'one_Horsepower ? {unit: \"\", fields: one_tuple_fields, values: [one_Horsepower]} : null'\n            }\n          ]\n        }\n      ]);\n\n      const twoSg = interval.signals(model, selCmpts['two']);\n      assert.includeDeepMembers(twoSg, [\n        {\n          name: 'two_tuple',\n          on: [\n            {\n              events: [{signal: 'two_Miles_per_Gallon'}],\n              update:\n                'two_Miles_per_Gallon ? {unit: \"\", fields: two_tuple_fields, values: [two_Miles_per_Gallon]} : null'\n            }\n          ]\n        }\n      ]);\n\n      const threeSg = interval.signals(model, selCmpts['thr_ee']);\n      assert.includeDeepMembers(threeSg, [\n        {\n          name: 'thr_ee_tuple',\n          on: [\n            {\n              events: [{signal: 'thr_ee_Horsepower'}, {signal: 'thr_ee_Miles_per_Gallon'}],\n              update:\n                'thr_ee_Horsepower && thr_ee_Miles_per_Gallon ? {unit: \"\", fields: thr_ee_tuple_fields, values: [thr_ee_Horsepower, thr_ee_Miles_per_Gallon]} : null'\n            }\n          ]\n        }\n      ]);\n    });\n\n    it('namespaces signals when encoding/fields collide', () => {\n      const model2 = parseUnitModel({\n        mark: 'circle',\n        encoding: {\n          x: {field: 'x', type: 'quantitative'},\n          y: {field: 'y', type: 'quantitative'}\n        }\n      });\n\n      model2.parseScale();\n\n      const selCmpts2 = (model2.component.selection = selection.parseUnitSelection(model2, {\n        one: {\n          type: 'interval',\n          encodings: ['x'],\n          translate: false,\n          zoom: false\n        }\n      }));\n\n      const sg = interval.signals(model, selCmpts2['one']);\n      assert.equal(sg[0].name, 'one_x');\n      assert.equal(sg[1].name, 'one_x_1');\n    });\n  });\n\n  it('builds modify signals', () => {\n    const oneExpr = interval.modifyExpr(model, selCmpts['one']);\n    assert.equal(oneExpr, 'one_tuple, true');\n\n    const twoExpr = interval.modifyExpr(model, selCmpts['two']);\n    assert.equal(twoExpr, 'two_tuple, true');\n\n    const threeExpr = interval.modifyExpr(model, selCmpts['thr_ee']);\n    assert.equal(threeExpr, 'thr_ee_tuple, {unit: \"\"}');\n\n    const signals = selection.assembleUnitSelectionSignals(model, []);\n    assert.includeDeepMembers(signals, [\n      {\n        name: 'one_modify',\n        on: [\n          {\n            events: {signal: 'one_tuple'},\n            update: `modify(\\\"one_store\\\", ${oneExpr})`\n          }\n        ]\n      },\n      {\n        name: 'two_modify',\n        on: [\n          {\n            events: {signal: 'two_tuple'},\n            update: `modify(\\\"two_store\\\", ${twoExpr})`\n          }\n        ]\n      },\n      {\n        name: 'thr_ee_modify',\n        on: [\n          {\n            events: {signal: 'thr_ee_tuple'},\n            update: `modify(\\\"thr_ee_store\\\", ${threeExpr})`\n          }\n        ]\n      }\n    ]);\n  });\n\n  it('builds brush mark', () => {\n    const marks: any[] = [{hello: 'world'}];\n    assert.sameDeepMembers(interval.marks(model, selCmpts['one'], marks), [\n      {\n        name: 'one_brush_bg',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: '#333'},\n            fillOpacity: {value: 0.125}\n          },\n          update: {\n            x: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                signal: 'one_x[0]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                value: 0\n              },\n              {\n                value: 0\n              }\n            ],\n            x2: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                signal: 'one_x[1]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y2: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                field: {\n                  group: 'height'\n                }\n              },\n              {\n                value: 0\n              }\n            ]\n          }\n        }\n      },\n      {hello: 'world'},\n      {\n        name: 'one_brush',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: 'transparent'}\n          },\n          update: {\n            stroke: [\n              {\n                test: 'one_x[0] !== one_x[1]',\n                value: 'white'\n              },\n              {\n                value: null\n              }\n            ],\n            x: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                signal: 'one_x[0]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                value: 0\n              },\n              {\n                value: 0\n              }\n            ],\n            x2: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                signal: 'one_x[1]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y2: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                field: {\n                  group: 'height'\n                }\n              },\n              {\n                value: 0\n              }\n            ]\n          }\n        }\n      }\n    ]);\n\n    // Scale-bound interval selections should not add a brush mark.\n    assert.sameDeepMembers(interval.marks(model, selCmpts['two'], marks), marks);\n\n    assert.sameDeepMembers(interval.marks(model, selCmpts['thr_ee'], marks), [\n      {\n        name: 'thr_ee_brush_bg',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: 'red'},\n            fillOpacity: {value: 0.75}\n          },\n          update: {\n            x: {\n              signal: 'thr_ee_x[0]'\n            },\n            y: {\n              signal: 'thr_ee_y[0]'\n            },\n            x2: {\n              signal: 'thr_ee_x[1]'\n            },\n            y2: {\n              signal: 'thr_ee_y[1]'\n            }\n          }\n        }\n      },\n      {hello: 'world'},\n      {\n        name: 'thr_ee_brush',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: 'transparent'}\n          },\n          update: {\n            stroke: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: 'black'\n              },\n              {value: null}\n            ],\n            strokeWidth: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: 4\n              },\n              {value: null}\n            ],\n            strokeDash: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: [10, 5]\n              },\n              {value: null}\n            ],\n            strokeDashOffset: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: 3\n              },\n              {value: null}\n            ],\n            strokeOpacity: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: 0.25\n              },\n              {value: null}\n            ],\n            x: {\n              signal: 'thr_ee_x[0]'\n            },\n            y: {\n              signal: 'thr_ee_y[0]'\n            },\n            x2: {\n              signal: 'thr_ee_x[1]'\n            },\n            y2: {\n              signal: 'thr_ee_y[1]'\n            }\n          }\n        }\n      }\n    ]);\n  });\n});\n"]}