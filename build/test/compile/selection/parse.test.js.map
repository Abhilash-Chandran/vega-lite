{"version":3,"file":"parse.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/parse.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport {selector as parseSelector} from 'vega-event-selector';\nimport * as selection from '../../../src/compile/selection/selection';\nimport {keys} from '../../../src/util';\nimport {parseUnitModel} from '../../util';\n\ndescribe('Selection', () => {\n  const model = parseUnitModel({\n    mark: 'circle',\n    encoding: {\n      x: {field: 'Horsepower', type: 'quantitative'},\n      y: {field: 'Miles_per_Gallon', type: 'quantitative'},\n      color: {field: 'Origin', type: 'nominal'}\n    }\n  });\n\n  model.parseScale();\n\n  it('parses default selection definitions', () => {\n    const component = selection.parseUnitSelection(model, {\n      one: {type: 'single'},\n      two: {type: 'multi'},\n      three: {type: 'interval'}\n    });\n\n    expect(keys(component)).toEqual(['one', 'two', 'three']);\n\n    expect(component.one.name).toBe('one');\n    expect(component.one.type).toBe('single');\n    expect(component['one'].project).toEqual([{field: '_vgsid_', type: 'E'}]);\n    expect(component['one'].events).toEqual(parseSelector('click', 'scope'));\n\n    expect(component.two.name).toBe('two');\n    expect(component.two.type).toBe('multi');\n    expect(component.two.toggle).toEqual('event.shiftKey');\n    expect(component['two'].project).toEqual([{field: '_vgsid_', type: 'E'}]);\n    expect(component['two'].events).toEqual(parseSelector('click', 'scope'));\n\n    expect(component.three.name).toBe('three');\n    expect(component.three.type).toBe('interval');\n    expect(component.three.translate).toEqual('[mousedown, window:mouseup] > window:mousemove!');\n    expect(component.three.zoom).toEqual('wheel!');\n    expect(component['three'].project).toEqual(\n      expect.arrayContaining([\n        {field: 'Horsepower', channel: 'x', type: 'R'},\n        {field: 'Miles_per_Gallon', channel: 'y', type: 'R'}\n      ])\n    );\n    expect(component['three'].events).toEqual(\n      parseSelector('[mousedown, window:mouseup] > window:mousemove!', 'scope')\n    );\n  });\n\n  it('supports inline default overrides', () => {\n    const component = selection.parseUnitSelection(model, {\n      one: {\n        type: 'single',\n        on: 'dblclick',\n        fields: ['Cylinders']\n      },\n      two: {\n        type: 'multi',\n        on: 'mouseover',\n        toggle: 'event.ctrlKey',\n        encodings: ['color']\n      },\n      three: {\n        type: 'interval',\n        on: '[mousedown[!event.shiftKey], mouseup] > mousemove',\n        encodings: ['y'],\n        translate: false,\n        zoom: 'wheel[event.altKey]'\n      }\n    });\n\n    expect(keys(component)).toEqual(['one', 'two', 'three']);\n\n    expect(component.one.name).toBe('one');\n    expect(component.one.type).toBe('single');\n    expect(component['one'].project).toEqual([{field: 'Cylinders', type: 'E'}]);\n    expect(component['one'].events).toEqual(parseSelector('dblclick', 'scope'));\n\n    expect(component.two.name).toBe('two');\n    expect(component.two.type).toBe('multi');\n    expect(component.two.toggle).toEqual('event.ctrlKey');\n    expect(component['two'].project).toEqual(expect.arrayContaining([{field: 'Origin', channel: 'color', type: 'E'}]));\n    expect(component['two'].events).toEqual(parseSelector('mouseover', 'scope'));\n\n    expect(component.three.name).toBe('three');\n    expect(component.three.type).toBe('interval');\n    expect(component.three.translate).toEqual(false);\n    expect(component.three.zoom).toEqual('wheel[event.altKey]');\n    expect(component['three'].project).toEqual(\n      expect.arrayContaining([{field: 'Miles_per_Gallon', channel: 'y', type: 'R'}])\n    );\n    expect(component['three'].events).toEqual(\n      parseSelector('[mousedown[!event.shiftKey], mouseup] > mousemove', 'scope')\n    );\n  });\n\n  it('respects selection configs', () => {\n    model.config.selection = {\n      single: {on: 'dblclick', fields: ['Cylinders']},\n      multi: {on: 'mouseover', encodings: ['color'], toggle: 'event.ctrlKey'},\n      interval: {\n        on: '[mousedown[!event.shiftKey], mouseup] > mousemove',\n        encodings: ['y'],\n        zoom: 'wheel[event.altKey]'\n      }\n    };\n\n    const component = selection.parseUnitSelection(model, {\n      one: {type: 'single'},\n      two: {type: 'multi'},\n      three: {type: 'interval'}\n    });\n\n    expect(keys(component)).toEqual(['one', 'two', 'three']);\n\n    expect(component.one.name).toBe('one');\n    expect(component.one.type).toBe('single');\n    expect(component['one'].project).toEqual([{field: 'Cylinders', type: 'E'}]);\n    expect(component['one'].events).toEqual(parseSelector('dblclick', 'scope'));\n\n    expect(component.two.name).toBe('two');\n    expect(component.two.type).toBe('multi');\n    expect(component.two.toggle).toEqual('event.ctrlKey');\n    expect(component['two'].project).toEqual(expect.arrayContaining([{field: 'Origin', channel: 'color', type: 'E'}]));\n    expect(component['two'].events).toEqual(parseSelector('mouseover', 'scope'));\n\n    expect(component.three.name).toBe('three');\n    expect(component.three.type).toBe('interval');\n    expect(!component.three.translate).toBeTruthy();\n    expect(component.three.zoom).toEqual('wheel[event.altKey]');\n    expect(component['three'].project).toEqual(\n      expect.arrayContaining([{field: 'Miles_per_Gallon', channel: 'y', type: 'R'}])\n    );\n    expect(component['three'].events).toEqual(\n      parseSelector('[mousedown[!event.shiftKey], mouseup] > mousemove', 'scope')\n    );\n  });\n\n  describe('Projection', () => {\n    it('uses enumerated types for interval selections', () => {\n      let m = parseUnitModel({\n        mark: 'circle',\n        encoding: {\n          x: {field: 'Origin', type: 'nominal'},\n          y: {field: 'Miles_per_Gallon', type: 'quantitative'}\n        }\n      });\n\n      m.parseScale();\n\n      let c = selection.parseUnitSelection(m, {\n        one: {type: 'interval', encodings: ['x']}\n      });\n\n      expect(c['one'].project).toEqual([{field: 'Origin', channel: 'x', type: 'E'}]);\n\n      m = parseUnitModel({\n        mark: 'bar',\n        encoding: {\n          x: {field: 'Origin', type: 'nominal'},\n          y: {field: 'Miles_per_Gallon', type: 'quantitative'}\n        }\n      });\n\n      m.parseScale();\n\n      c = selection.parseUnitSelection(m, {\n        one: {type: 'interval', encodings: ['x']}\n      });\n\n      expect(c['one'].project).toEqual([{field: 'Origin', channel: 'x', type: 'E'}]);\n    });\n\n    it('uses ranged types for single/multi selections', () => {\n      let m = parseUnitModel({\n        mark: 'circle',\n        encoding: {\n          x: {field: 'Acceleration', type: 'quantitative', bin: true},\n          y: {field: 'Miles_per_Gallon', type: 'quantitative'}\n        }\n      });\n\n      m.parseScale();\n\n      let c = selection.parseUnitSelection(m, {\n        one: {type: 'single', encodings: ['x']}\n      });\n\n      expect(c['one'].project).toEqual([{field: 'Acceleration', channel: 'x', type: 'R-RE'}]);\n\n      m = parseUnitModel({\n        mark: 'bar',\n        encoding: {\n          x: {field: 'Acceleration', type: 'quantitative', bin: true},\n          y: {field: 'Miles_per_Gallon', type: 'quantitative'}\n        }\n      });\n\n      m.parseScale();\n\n      c = selection.parseUnitSelection(m, {\n        one: {type: 'multi', encodings: ['x']}\n      });\n\n      expect(c['one'].project).toEqual([{field: 'Acceleration', channel: 'x', type: 'R-RE'}]);\n    });\n  });\n});\n"]}