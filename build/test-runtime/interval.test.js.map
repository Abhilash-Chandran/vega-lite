{"version":3,"file":"interval.test.js","sourceRoot":"","sources":["../../test-runtime/interval.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {Page} from 'puppeteer';\nimport {SelectionType} from '../src/selection';\nimport {brush, embedFn, hits as hitsMaster, spec, testRenderFn, tuples} from './util';\n\ndeclare const page: Page;\n\ndescribe('interval selections at runtime in unit views', () => {\n  beforeAll(async () => {\n    await page.goto('http://0.0.0.0:8000/test-runtime/');\n  });\n\n  const type: SelectionType = 'interval';\n  const hits = hitsMaster.interval;\n  const embed = embedFn(page);\n  const testRender = testRenderFn(page, `${type}/unit`);\n\n  it('should add extents to the store', async done => {\n    for (let i = 0; i < hits.drag.length; i++) {\n      await embed(spec('unit', i, {type}));\n      const store = await page.evaluate(brush('drag', i));\n      expect(store).toHaveLength(1);\n      expect(store[0].fields).toHaveLength(2);\n      expect(store[0].values).toHaveLength(2);\n      expect(store[0].fields[0].channel).toBe('x');\n      expect(store[0].fields[0].field).toBe('a');\n      expect(store[0].fields[0].type).toBe('R');\n      expect(store[0].fields[1].channel).toBe('y');\n      expect(store[0].fields[1].field).toBe('b');\n      expect(store[0].fields[1].type).toBe('R');\n      expect(store[0].values[0]).toHaveLength(2);\n      expect(store[0].values[1]).toHaveLength(2);\n      await testRender(`drag_${i}`);\n    }\n    done();\n  });\n\n  it('should respect projections', async () => {\n    await embed(spec('unit', 0, {type, encodings: ['x']}));\n    for (let i = 0; i < hits.drag.length; i++) {\n      const store = await page.evaluate(brush('drag', i));\n      expect(store).toHaveLength(1);\n      expect(store[0].fields).toHaveLength(1);\n      expect(store[0].values).toHaveLength(1);\n      expect(store[0].fields[0].channel).toBe('x');\n      expect(store[0].fields[0].field).toBe('a');\n      expect(store[0].fields[0].type).toBe('R');\n      expect(store[0].values[0]).toHaveLength(2);\n      await testRender(`x_${i}`);\n    }\n\n    await embed(spec('unit', 1, {type, encodings: ['y']}));\n    for (let i = 0; i < hits.drag.length; i++) {\n      const store = await page.evaluate(brush('drag', i));\n      expect(store).toHaveLength(1);\n      expect(store[0].fields).toHaveLength(1);\n      expect(store[0].values).toHaveLength(1);\n      expect(store[0].fields[0].channel).toBe('y');\n      expect(store[0].fields[0].field).toBe('b');\n      expect(store[0].fields[0].type).toBe('R');\n      expect(store[0].values[0]).toHaveLength(2);\n      await testRender(`y_${i}`);\n    }\n  });\n\n  it('should clear out stored extents', async () => {\n    for (let i = 0; i < hits.drag_clear.length; i++) {\n      await embed(spec('unit', i, {type}));\n      let store = await page.evaluate(brush('drag', i));\n      expect(store).toHaveLength(1);\n\n      store = await page.evaluate(brush('drag_clear', i));\n      expect(store).toHaveLength(0);\n      await testRender(`clear_${i}`);\n    }\n  });\n\n  it('should brush over binned domains', async () => {\n    await embed(\n      spec(\n        'unit',\n        1,\n        {type, encodings: ['y']},\n        {\n          x: {aggregate: 'count', type: 'quantitative'},\n          y: {bin: true},\n          color: {value: 'steelblue', field: null, type: null}\n        }\n      )\n    );\n    for (let i = 0; i < hits.bins.length; i++) {\n      const store = await page.evaluate(brush('bins', i));\n      expect(store).toHaveLength(1);\n      expect(store[0].fields).toHaveLength(1);\n      expect(store[0].values).toHaveLength(1);\n      expect(store[0].fields[0].channel).toBe('y');\n      expect(store[0].fields[0].field).toBe('b');\n      expect(store[0].fields[0].type).toBe('R');\n      expect(store[0].values[0]).toHaveLength(2);\n      await testRender(`bins_${i}`);\n    }\n\n    const store = await page.evaluate(brush('bins_clear', 0));\n    expect(store).toHaveLength(0);\n  });\n\n  it('should brush over ordinal/nominal domains', async () => {\n    const xextents = [[2, 3, 4], [6, 7, 8]];\n    const yextents = [[49, 52, 53, 54, 55, 66, 67, 68, 76, 81, 87, 91], [17, 19, 23, 24, 27, 28, 35, 39, 43, 48]];\n\n    for (let i = 0; i < hits.drag.length; i++) {\n      await embed(spec('unit', i, {type}, {x: {type: 'ordinal'}, y: {type: 'nominal'}}));\n      const store = await page.evaluate(brush('drag', i));\n      expect(store).toHaveLength(1);\n      expect(store[0].fields).toHaveLength(2);\n      expect(store[0].values).toHaveLength(2);\n      expect(store[0].fields[0].channel).toBe('x');\n      expect(store[0].fields[0].field).toBe('a');\n      expect(store[0].fields[0].type).toBe('E');\n      expect(store[0].fields[1].channel).toBe('y');\n      expect(store[0].fields[1].field).toBe('b');\n      expect(store[0].fields[1].type).toBe('E');\n      expect(store[0].values[0]).toEqual(expect.arrayContaining(xextents[i]));\n      expect(store[0].values[1]).toEqual(expect.arrayContaining(yextents[i]));\n      await testRender(`ord_${i}`);\n    }\n\n    const store = await page.evaluate(brush('drag_clear', 0));\n    expect(store).toHaveLength(0);\n  });\n\n  it('should brush over temporal domains', async () => {\n    const values = tuples.map(d => ({...d, a: new Date(2017, d.a)}));\n    const toNumber = (a: any) => a[0].values[0].map((d: any) => +d);\n\n    await embed(spec('unit', 0, {type, encodings: ['x']}, {values, x: {type: 'temporal'}}));\n    let extents = [[1485969714000, 1493634384000], [1496346498000, 1504364922000]];\n    for (let i = 0; i < hits.drag.length; i++) {\n      const store = toNumber(await page.evaluate(brush('drag', i)));\n      expect(store).toEqual(expect.arrayContaining(extents[i]));\n      await testRender(`temporal_${i}`);\n    }\n\n    let cleared = await page.evaluate(brush('drag_clear', 0));\n    expect(cleared).toHaveLength(0);\n\n    await embed(spec('unit', 1, {type, encodings: ['x']}, {values, x: {type: 'temporal', timeUnit: 'day'}}));\n\n    extents = [[1136190528000, 1136361600000], [1136449728000, 1136535264000]];\n    for (let i = 0; i < hits.drag.length; i++) {\n      const store = toNumber(await page.evaluate(brush('drag', i)));\n      expect(store).toEqual(expect.arrayContaining(extents[i]));\n      await testRender(`dayTimeUnit_${i}`);\n    }\n\n    cleared = await page.evaluate(brush('drag_clear', 0));\n    expect(cleared).toHaveLength(0);\n  });\n\n  it('should brush over log/pow scales', async () => {\n    for (let i = 0; i < hits.drag.length; i++) {\n      await embed(\n        spec(\n          'unit',\n          i,\n          {type},\n          {\n            x: {scale: {type: 'pow', exponent: 1.5}},\n            y: {scale: {type: 'log'}}\n          }\n        )\n      );\n      const store = await page.evaluate(brush('drag', i));\n      expect(store).toHaveLength(1);\n      expect(store[0].fields).toHaveLength(2);\n      expect(store[0].values).toHaveLength(2);\n      expect(store[0].values[0]).toHaveLength(2);\n      expect(store[0].values[1]).toHaveLength(2);\n      await testRender(`logpow_${i}`);\n    }\n  });\n});\n"]}