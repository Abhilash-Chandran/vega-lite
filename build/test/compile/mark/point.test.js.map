{"version":3,"file":"point.test.js","sourceRoot":"","sources":["../../../../test/compile/mark/point.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport {COLOR, SHAPE, SIZE, X, Y} from '../../../src/channel';\nimport {circle, point, square} from '../../../src/compile/mark/point';\nimport {Config} from '../../../src/config';\nimport {Encoding} from '../../../src/encoding';\nimport {defaultMarkConfig} from '../../../src/mark';\nimport {NormalizedUnitSpec, TopLevel} from '../../../src/spec';\nimport {parseUnitModelWithScaleAndLayoutSize} from '../../util';\n\ndescribe('Mark: Point', () => {\n  function pointXY(moreEncoding: Encoding<string> = {}, moreConfig: Config = {}): TopLevel<NormalizedUnitSpec> {\n    return {\n      mark: 'point',\n      encoding: {\n        x: {field: 'year', type: 'ordinal'},\n        y: {field: 'yield', type: 'quantitative'},\n        ...moreEncoding\n      },\n      data: {url: 'data/barley.json'},\n      config: {invalidValues: null, ...moreConfig}\n    };\n  }\n\n  describe('with x', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'point',\n      encoding: {x: {field: 'year', type: 'ordinal'}},\n      data: {url: 'data/barley.json'}\n    });\n\n    const props = point.encodeEntry(model);\n\n    it('should be centered on y', () => {\n      expect(props.y).toEqual({\n        mult: 0.5,\n        signal: 'height'\n      });\n    });\n\n    it('should scale on x', () => {\n      expect(props.x).toEqual({scale: X, field: 'year'});\n    });\n  });\n\n  describe('with stacked x', () => {\n    // This is a simplified example for stacked point.\n    // In reality this will be used as stacked's overlayed marker\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'point',\n      encoding: {\n        x: {aggregate: 'sum', field: 'a', type: 'quantitative'},\n        color: {field: 'b', type: 'ordinal'}\n      },\n      data: {url: 'data/barley.json'},\n      config: {stack: 'zero'}\n    });\n\n    const props = point.encodeEntry(model);\n\n    it('should use stack_end on x', () => {\n      expect(props.x).toEqual({scale: X, field: 'sum_a_end'});\n    });\n  });\n\n  describe('with y', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'point',\n      encoding: {y: {field: 'year', type: 'ordinal'}},\n      data: {url: 'data/barley.json'}\n    });\n\n    const props = point.encodeEntry(model);\n\n    it('should be centered on x', () => {\n      expect(props.x).toEqual({\n        mult: 0.5,\n        signal: 'width'\n      });\n    });\n\n    it('should scale on y', () => {\n      expect(props.y).toEqual({scale: Y, field: 'year'});\n    });\n  });\n\n  describe('with stacked y', () => {\n    // This is a simplified example for stacked point.\n    // In reality this will be used as stacked's overlayed marker\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'point',\n      encoding: {\n        y: {aggregate: 'sum', field: 'a', type: 'quantitative'},\n        color: {field: 'b', type: 'ordinal'}\n      },\n      data: {url: 'data/barley.json'},\n      config: {stack: 'zero'}\n    });\n\n    const props = point.encodeEntry(model);\n\n    it('should use stack_end on y', () => {\n      expect(props.y).toEqual({scale: Y, field: 'sum_a_end'});\n    });\n  });\n\n  describe('with x and y', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize(pointXY());\n    const props = point.encodeEntry(model);\n\n    it('should scale on x', () => {\n      expect(props.x).toEqual({scale: X, field: 'year'});\n    });\n\n    it('should scale on y', () => {\n      expect(props.y).toEqual({scale: Y, field: 'yield'});\n    });\n\n    it('should be an unfilled circle', () => {\n      expect(props.fill).toEqual({value: 'transparent'});\n      expect(props.stroke).toEqual({value: defaultMarkConfig.color});\n    });\n  });\n\n  describe('with band x and quantitative y', () => {\n    it('should offset band position by half band', () => {\n      const model = parseUnitModelWithScaleAndLayoutSize({\n        data: {url: 'data/barley.json'},\n        mark: 'point',\n        encoding: {\n          x: {field: 'year', type: 'ordinal', scale: {type: 'band'}},\n          y: {field: 'yield', type: 'quantitative'}\n        }\n      });\n      const props = point.encodeEntry(model);\n      expect(props.x).toEqual({scale: 'x', field: 'year', band: 0.5});\n    });\n  });\n\n  describe('with x, y, size', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize(\n      pointXY({\n        size: {aggregate: 'count', type: 'quantitative'}\n      })\n    );\n    const props = point.encodeEntry(model);\n\n    it('should have scale for size', () => {\n      expect(props.size).toEqual({scale: SIZE, field: 'count_*'});\n    });\n  });\n\n  describe('with x, y, color', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize(\n      pointXY({\n        color: {field: 'yield', type: 'quantitative'}\n      })\n    );\n    const props = point.encodeEntry(model);\n\n    it('should have scale for color', () => {\n      expect(props.stroke).toEqual({scale: COLOR, field: 'yield'});\n    });\n  });\n\n  describe('with x, y, and condition-only color', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      ...pointXY({\n        color: {condition: {selection: 'test', field: 'yield', type: 'quantitative'}}\n      }),\n      selection: {test: {type: 'single'}}\n    });\n    model.parseSelection();\n    const props = point.encodeEntry(model);\n\n    it('should have one condition for color with scale for \"yield\"', () => {\n      expect(Array.isArray(props.stroke)).toBe(true);\n      expect(props.stroke['length']).toEqual(2);\n      expect(props.stroke[0].scale).toEqual(COLOR);\n      expect(props.stroke[0].field).toEqual('yield');\n    });\n  });\n\n  describe('with x, y, and condition-only color', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      ...pointXY({\n        color: {condition: {test: 'true', field: 'yield', type: 'quantitative'}}\n      })\n    });\n    model.parseSelection();\n    const props = point.encodeEntry(model);\n\n    it('should have one condition for color with scale for \"yield\"', () => {\n      expect(Array.isArray(props.stroke)).toBe(true);\n      expect(props.stroke['length']).toEqual(2);\n      expect(props.stroke[0].test).toEqual('true');\n      expect(props.stroke[1].value).toEqual('#4c78a8');\n    });\n  });\n\n  describe('with x, y, shape', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize(\n      pointXY({\n        shape: {field: 'site', type: 'nominal'}\n      })\n    );\n    const props = point.encodeEntry(model);\n\n    it('should have scale for shape', () => {\n      expect(props.shape).toEqual({scale: SHAPE, field: 'site'});\n    });\n  });\n\n  describe('with constant color, shape, and size', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize(\n      pointXY({\n        shape: {value: 'circle'},\n        color: {value: 'red'},\n        size: {value: 23}\n      })\n    );\n    const props = point.encodeEntry(model);\n    it('should correct shape, color and size', () => {\n      expect(props.shape).toEqual({value: 'circle'});\n      expect(props.stroke).toEqual({value: 'red'});\n      expect(props.size).toEqual({value: 23});\n    });\n  });\n\n  describe('with config.mark.size', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize(pointXY({}, {mark: {size: 23}}));\n    const props = point.encodeEntry(model);\n    it('should have correct size', () => {\n      expect(props.size).toEqual({value: 23});\n    });\n  });\n\n  describe('with config.point.size', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize(pointXY({}, {point: {size: 23}}));\n    const props = point.encodeEntry(model);\n    it('should have correct size', () => {\n      expect(props.size).toEqual({value: 23});\n    });\n  });\n\n  describe('with href', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'point',\n      encoding: {\n        href: {value: 'https://idl.cs.washington.edu/'}\n      }\n    });\n    const props = point.encodeEntry(model);\n\n    it('should pass href value to encoding', () => {\n      expect(props.href).toEqual({value: 'https://idl.cs.washington.edu/'});\n    });\n  });\n});\n\ndescribe('Mark: Square', () => {\n  it('should have correct shape', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'square',\n      encoding: {\n        color: {value: 'blue'}\n      }\n    });\n    const props = square.encodeEntry(model);\n\n    expect(props.shape['value']).toBe('square');\n  });\n\n  it('should be filled by default', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'square',\n      encoding: {\n        color: {value: 'blue'}\n      }\n    });\n    const props = square.encodeEntry(model);\n\n    expect(props.fill['value']).toBe('blue');\n  });\n\n  it('with config.mark.filled:false should have transparent fill', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'square',\n      encoding: {\n        color: {value: 'blue'}\n      },\n      config: {\n        mark: {\n          filled: false\n        }\n      }\n    });\n\n    const props = square.encodeEntry(model);\n\n    expect(props.stroke['value']).toBe('blue');\n    expect(props.fill['value']).toBe('transparent');\n  });\n});\n\ndescribe('Mark: Circle', () => {\n  const model = parseUnitModelWithScaleAndLayoutSize({\n    mark: 'circle',\n    encoding: {\n      color: {value: 'blue'}\n    }\n  });\n  const props = circle.encodeEntry(model);\n\n  it('should have correct shape', () => {\n    expect(props.shape['value']).toBe('circle');\n  });\n\n  it('should be filled by default', () => {\n    expect(props.fill['value']).toBe('blue');\n  });\n\n  it('with config.mark.filled:false should have transparent fill', () => {\n    const filledCircleModel = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'circle',\n      encoding: {\n        color: {value: 'blue'}\n      },\n      config: {\n        mark: {\n          filled: false\n        }\n      }\n    });\n\n    const filledCircleProps = circle.encodeEntry(filledCircleModel);\n\n    expect(filledCircleProps.stroke['value']).toBe('blue');\n    expect(filledCircleProps.fill['value']).toBe('transparent');\n  });\n});\n"]}