{"version":3,"file":"core.js","sourceRoot":"","sources":["../../../src/normalize/core.ts"],"names":[],"mappings":"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","sourcesContent":["import {COLUMN, ROW} from '../channel';\nimport {boxPlotNormalizer} from '../compositemark/boxplot';\nimport {errorBandNormalizer} from '../compositemark/errorband';\nimport {errorBarNormalizer} from '../compositemark/errorbar';\nimport {channelHasField, Encoding} from '../encoding';\nimport * as log from '../log';\nimport {Projection} from '../projection';\nimport {ExtendedLayerSpec, ExtendedUnitSpec, FacetedExtendedUnitSpec, GenericSpec} from '../spec';\nimport {NormalizedFacetSpec} from '../spec/facet';\nimport {GenericLayerSpec, NormalizedLayerSpec} from '../spec/layer';\nimport {SpecMapper} from '../spec/map';\nimport {isUnitSpec, NormalizedUnitSpec} from '../spec/unit';\nimport {keys} from '../util';\nimport {NonFacetUnitNormalizer, NormalizerParams} from './base';\nimport {PathOverlayNormalizer} from './pathoverlay';\nimport {RuleForRangedLineNormalizer} from './ruleforrangedline';\n\nexport class CoreNormalizer extends SpecMapper<NormalizerParams, FacetedExtendedUnitSpec, ExtendedLayerSpec> {\n  private nonFacetUnitNormalizers: NonFacetUnitNormalizer<any>[] = [\n    boxPlotNormalizer,\n    errorBarNormalizer,\n    errorBandNormalizer,\n    new PathOverlayNormalizer(),\n    new RuleForRangedLineNormalizer()\n  ];\n\n  public map(spec: GenericSpec<FacetedExtendedUnitSpec, ExtendedLayerSpec>, params: NormalizerParams) {\n    // Special handling for a faceted unit spec as it can return a facet spec, not just a layer or unit spec like a normal unit spec.\n    if (isUnitSpec(spec)) {\n      const hasRow = channelHasField(spec.encoding, ROW);\n      const hasColumn = channelHasField(spec.encoding, COLUMN);\n\n      if (hasRow || hasColumn) {\n        return this.mapFacetedUnit(spec, params);\n      }\n    }\n\n    return super.map(spec, params);\n  }\n\n  // This is for normalizing non-facet unit\n  public mapUnit(spec: ExtendedUnitSpec, params: NormalizerParams): NormalizedUnitSpec | NormalizedLayerSpec {\n    const {parentEncoding, parentProjection} = params;\n    if (parentEncoding || parentProjection) {\n      return this.mapUnitWithParentEncodingOrProjection(spec, params);\n    }\n\n    const normalizeLayerOrUnit = this.mapLayerOrUnit.bind(this);\n\n    for (const unitNormalizer of this.nonFacetUnitNormalizers) {\n      if (unitNormalizer.hasMatchingType(spec, params.config)) {\n        return unitNormalizer.run(spec, params, normalizeLayerOrUnit);\n      }\n    }\n\n    return spec as NormalizedUnitSpec;\n  }\n\n  private mapUnitWithParentEncodingOrProjection(\n    spec: FacetedExtendedUnitSpec,\n    params: NormalizerParams\n  ): NormalizedUnitSpec | NormalizedLayerSpec {\n    const {encoding, projection} = spec;\n    const {parentEncoding, parentProjection, config} = params;\n    const mergedProjection = mergeProjection({parentProjection, projection});\n    const mergedEncoding = mergeEncoding({parentEncoding, encoding});\n    return this.mapUnit(\n      {\n        ...spec,\n        ...(mergedProjection ? {projection: mergedProjection} : {}),\n        ...(mergedEncoding ? {encoding: mergedEncoding} : {})\n      },\n      {config}\n    );\n  }\n\n  private mapFacetedUnit(spec: FacetedExtendedUnitSpec, params: NormalizerParams): NormalizedFacetSpec {\n    // New encoding in the inside spec should not contain row / column\n    // as row/column should be moved to facet\n    const {row, column, ...encoding} = spec.encoding;\n\n    // Mark and encoding should be moved into the inner spec\n    const {mark, width, projection, height, selection, encoding: _, ...outerSpec} = spec;\n\n    return {\n      ...outerSpec,\n      facet: {\n        ...(row ? {row} : {}),\n        ...(column ? {column} : {})\n      },\n      spec: this.mapUnit(\n        {\n          ...(projection ? {projection} : {}),\n          mark,\n          ...(width ? {width} : {}),\n          ...(height ? {height} : {}),\n          encoding,\n          ...(selection ? {selection} : {})\n        },\n        params\n      )\n    };\n  }\n\n  public mapLayer(\n    spec: ExtendedLayerSpec,\n    {parentEncoding, parentProjection, ...otherParams}: NormalizerParams\n  ): GenericLayerSpec<NormalizedUnitSpec> {\n    // Special handling for extended layer spec\n\n    const {encoding, projection, ...rest} = spec;\n    const params: NormalizerParams = {\n      ...otherParams,\n      parentEncoding: mergeEncoding({parentEncoding, encoding}),\n      parentProjection: mergeProjection({parentProjection, projection})\n    };\n    return super.mapLayer(rest, params);\n  }\n}\n\nfunction mergeEncoding(opt: {parentEncoding: Encoding<any>; encoding: Encoding<any>}): Encoding<any> {\n  const {parentEncoding, encoding} = opt;\n  if (parentEncoding && encoding) {\n    const overriden = keys(parentEncoding).reduce((o, key) => {\n      if (encoding[key]) {\n        o.push(key);\n      }\n      return o;\n    }, []);\n\n    if (overriden.length > 0) {\n      log.warn(log.message.encodingOverridden(overriden));\n    }\n  }\n\n  const merged = {\n    ...(parentEncoding || {}),\n    ...(encoding || {})\n  };\n  return keys(merged).length > 0 ? merged : undefined;\n}\n\nfunction mergeProjection(opt: {parentProjection: Projection; projection: Projection}) {\n  const {parentProjection, projection} = opt;\n  if (parentProjection && projection) {\n    log.warn(log.message.projectionOverridden({parentProjection, projection}));\n  }\n  return projection || parentProjection;\n}\n"]}