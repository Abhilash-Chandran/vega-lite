{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../../../test/compile/header/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {assert} from 'chai';\nimport {getHeaderGroups, getTitleGroup, labelAlign, labelBaseline} from '../../../src/compile/header';\nimport {getHeaderProperties} from '../../../src/compile/header/index';\nimport {\n  HEADER_LABEL_PROPERTIES,\n  HEADER_LABEL_PROPERTIES_MAP,\n  HEADER_TITLE_PROPERTIES,\n  HEADER_TITLE_PROPERTIES_MAP\n} from '../../../src/header';\nimport {parseFacetModel} from '../../util';\n\ndescribe('compile/header/index', () => {\n  describe('label aligns correctly according to angle', () => {\n    expect(labelAlign(23)).toEqual({align: {value: 'right'}});\n    expect(labelAlign(135)).toEqual({align: {value: 'left'}});\n    expect(labelAlign(50)).toEqual({align: {value: 'right'}});\n  });\n\n  describe('label baseline adjusted according to angle', () => {\n    expect(labelBaseline(10)).toEqual({baseline: 'middle'});\n    expect(labelBaseline(90)).toEqual({baseline: 'top'});\n  });\n\n  describe('getHeaderGroups', () => {\n    it('should correctly process sort descending', () => {\n      const model = parseFacetModel({\n        facet: {\n          row: {field: 'a', type: 'ordinal', sort: 'ascending'},\n          column: {field: 'a', type: 'ordinal', sort: 'descending'}\n        },\n        spec: {\n          mark: 'point',\n          encoding: {\n            x: {field: 'b', type: 'quantitative'},\n            y: {field: 'c', type: 'quantitative'}\n          }\n        }\n      });\n      model.parseScale();\n      model.parseLayoutSize();\n      model.parseAxisAndHeader();\n\n      const rowHeaderGroups = getHeaderGroups(model, 'row');\n      const columnHeaderGroups = getHeaderGroups(model, 'column');\n      assert.equal(rowHeaderGroups[0].sort.order, 'ascending');\n      assert.equal(columnHeaderGroups[0].sort.order, 'descending');\n    });\n\n    it('should correctly process sort field', () => {\n      const model = parseFacetModel({\n        facet: {\n          row: {field: 'a', type: 'ordinal', sort: {field: 'd', op: 'min'}}\n        },\n        spec: {\n          mark: 'point',\n          encoding: {\n            x: {field: 'b', type: 'quantitative'},\n            y: {field: 'c', type: 'quantitative'}\n          }\n        }\n      });\n      model.parseScale();\n      model.parseLayoutSize();\n      model.parseAxisAndHeader();\n\n      const rowHeaderGroups = getHeaderGroups(model, 'row');\n      assert.equal(rowHeaderGroups[0].sort.field, 'datum[\"min_d\"]');\n    });\n  });\n\n  describe('getTitleGroup', () => {\n    const model = parseFacetModel({\n      facet: {\n        row: {field: 'a', type: 'ordinal'},\n        column: {field: 'a', type: 'ordinal'}\n      },\n      spec: {\n        mark: 'point',\n        encoding: {\n          x: {field: 'b', type: 'quantitative'},\n          y: {field: 'c', type: 'quantitative'}\n        }\n      }\n    });\n    model.parseScale();\n    model.parseLayoutSize();\n    model.parseAxisAndHeader();\n\n    describe('for column', () => {\n      const columnLabelGroup = getTitleGroup(model, 'column');\n      const {title, ...columnTitleGroupTopLevelProps} = columnLabelGroup;\n      it('returns a header group mark with correct name, role, and type.', () => {\n        expect(columnTitleGroupTopLevelProps).toEqual({\n          name: 'column-title',\n          type: 'group',\n          role: 'column-title'\n        });\n      });\n      const name = title.text;\n      it('contains a correct title definition, including the correct name and orientation', () => {\n        expect(title).toEqual({\n          text: name,\n          offset: 10,\n          style: 'guide-title'\n        });\n      });\n    });\n\n    describe('for row', () => {\n      const rowTitleGroup = getTitleGroup(model, 'row');\n      const {title, ...rowTitleGroupTopLevelProps} = rowTitleGroup;\n      it('returns a header group mark with correct name, role, and type.', () => {\n        expect(rowTitleGroupTopLevelProps).toEqual({\n          name: 'row-title',\n          type: 'group',\n          role: 'row-title'\n        });\n      });\n      const name = title.text;\n      it('contains a correct title definition, including the correct name and orientation.', () => {\n        expect(title).toEqual({\n          text: name,\n          offset: 10,\n          orient: 'left',\n          style: 'guide-title'\n        });\n      });\n    });\n  });\n\n  describe('getHeaderProperties', () => {\n    describe('for title properties', () => {\n      const titleSpec = parseFacetModel({\n        config: {header: {titleFontSize: 20}},\n        facet: {\n          row: {field: 'a', type: 'ordinal', header: {titleFontSize: 40}}\n        },\n        spec: {\n          mark: 'point',\n          encoding: {\n            x: {field: 'b', type: 'quantitative'},\n            y: {field: 'c', type: 'quantitative'}\n          }\n        }\n      });\n      titleSpec.parseScale();\n      titleSpec.parseLayoutSize();\n      titleSpec.parseAxisAndHeader();\n      const config = titleSpec.config;\n      const facetFieldDef = titleSpec.component.layoutHeaders['row'].facetFieldDef;\n\n      const headerTitleProps = getHeaderProperties(\n        undefined,\n        facetFieldDef,\n        HEADER_TITLE_PROPERTIES,\n        HEADER_TITLE_PROPERTIES_MAP\n      );\n      it('should return the correct title property from header', () => {\n        expect(headerTitleProps).toEqual({fontSize: 40});\n      });\n\n      const configTitleProps = getHeaderProperties(\n        config,\n        undefined,\n        HEADER_TITLE_PROPERTIES,\n        HEADER_TITLE_PROPERTIES_MAP\n      );\n      it('should return the correct title property from config', () => {\n        expect(configTitleProps).toEqual({fontSize: 20});\n      });\n\n      const bothTitleProps = getHeaderProperties(\n        config,\n        facetFieldDef,\n        HEADER_TITLE_PROPERTIES,\n        HEADER_TITLE_PROPERTIES_MAP\n      );\n      it('should overwrite the config title property with the header title property', () => {\n        expect(bothTitleProps).toEqual({fontSize: 40});\n      });\n    });\n\n    describe('for label properties', () => {\n      const labelSpec = parseFacetModel({\n        config: {header: {labelFontSize: 20}},\n        facet: {\n          row: {field: 'a', type: 'ordinal', header: {labelFontSize: 40}}\n        },\n        spec: {\n          mark: 'point',\n          encoding: {\n            x: {field: 'b', type: 'quantitative'},\n            y: {field: 'c', type: 'quantitative'}\n          }\n        }\n      });\n      labelSpec.parseScale();\n      labelSpec.parseLayoutSize();\n      labelSpec.parseAxisAndHeader();\n      const config = labelSpec.config;\n      const facetFieldDef = labelSpec.component.layoutHeaders['row'].facetFieldDef;\n\n      const headerLabelProps = getHeaderProperties(\n        undefined,\n        facetFieldDef,\n        HEADER_LABEL_PROPERTIES,\n        HEADER_LABEL_PROPERTIES_MAP\n      );\n      it('should return the correct label property from header', () => {\n        expect(headerLabelProps).toEqual({fontSize: 40});\n      });\n\n      const configLabelProps = getHeaderProperties(\n        config,\n        undefined,\n        HEADER_LABEL_PROPERTIES,\n        HEADER_LABEL_PROPERTIES_MAP\n      );\n      it('should return the correct label property from config', () => {\n        expect(configLabelProps).toEqual({fontSize: 20});\n      });\n\n      const bothLabelProps = getHeaderProperties(\n        config,\n        facetFieldDef,\n        HEADER_LABEL_PROPERTIES,\n        HEADER_LABEL_PROPERTIES_MAP\n      );\n      it('should overwrite the config label property with the header label property', () => {\n        expect(bothLabelProps).toEqual({fontSize: 40});\n      });\n    });\n  });\n});\n"]}