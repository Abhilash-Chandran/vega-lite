{"version":3,"file":"interval.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/interval.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport {selector as parseSelector} from 'vega-event-selector';\nimport {assembleUnitSelectionSignals} from '../../../src/compile/selection/assemble';\nimport interval from '../../../src/compile/selection/interval';\nimport {parseUnitSelection} from '../../../src/compile/selection/parse';\nimport {parseUnitModel} from '../../util';\n\ndescribe('Interval Selections', () => {\n  const model = parseUnitModel({\n    mark: 'circle',\n    encoding: {\n      x: {field: 'Horsepower', type: 'quantitative'},\n      y: {field: 'Miles-per-Gallon', type: 'quantitative'},\n      color: {field: 'Origin', type: 'nominal'}\n    }\n  });\n  model.parseScale();\n\n  const selCmpts = (model.component.selection = parseUnitSelection(model, {\n    one: {type: 'interval', encodings: ['x'], translate: false, zoom: false},\n    two: {\n      type: 'interval',\n      encodings: ['y'],\n      bind: 'scales',\n      translate: false,\n      zoom: false\n    },\n    'thr-ee': {\n      type: 'interval',\n      on: '[mousedown, mouseup] > mousemove, [keydown, keyup] > keypress',\n      translate: false,\n      zoom: false,\n      resolve: 'intersect',\n      mark: {\n        fill: 'red',\n        fillOpacity: 0.75,\n        stroke: 'black',\n        strokeWidth: 4,\n        strokeDash: [10, 5],\n        strokeDashOffset: 3,\n        strokeOpacity: 0.25\n      }\n    },\n    four: {\n      type: 'interval',\n      translate: false,\n      zoom: false,\n      encodings: ['x'],\n      init: {x: [50, 70]}\n    },\n    five: {\n      type: 'interval',\n      translate: false,\n      zoom: false,\n      init: {x: [50, 60], y: [23, 54]}\n    },\n    six: {\n      type: 'interval',\n      translate: false,\n      zoom: false,\n      encodings: ['x'],\n      init: {\n        x: [{year: 2000, month: 10, day: 5}, {year: 2001, month: 1, day: 13}]\n      }\n    }\n  }));\n\n  describe('Tuple Signals', () => {\n    it('builds projection signals', () => {\n      const oneSg = interval.signals(model, selCmpts['one']);\n      expect(oneSg).toEqual(\n        expect.arrayContaining([\n          {\n            name: 'one_x',\n            value: [],\n            on: [\n              {\n                events: parseSelector('mousedown', 'scope')[0],\n                update: '[x(unit), x(unit)]'\n              },\n              {\n                events: parseSelector('[mousedown, window:mouseup] > window:mousemove!', 'scope')[0],\n                update: '[one_x[0], clamp(x(unit), 0, width)]'\n              },\n              {\n                events: {signal: 'one_scale_trigger'},\n                update: '[scale(\"x\", one_Horsepower[0]), scale(\"x\", one_Horsepower[1])]'\n              }\n            ]\n          },\n          {\n            name: 'one_Horsepower',\n            on: [\n              {\n                events: {signal: 'one_x'},\n                update: 'one_x[0] === one_x[1] ? null : invert(\"x\", one_x)'\n              }\n            ]\n          },\n          {\n            name: 'one_scale_trigger',\n            update:\n              '(!isArray(one_Horsepower) || (+invert(\"x\", one_x)[0] === +one_Horsepower[0] && +invert(\"x\", one_x)[1] === +one_Horsepower[1])) ? one_scale_trigger : {}'\n          }\n        ])\n      );\n\n      const twoSg = interval.signals(model, selCmpts['two']);\n      expect(twoSg).toContainEqual({\n        name: 'two_Miles_per_Gallon',\n        on: []\n      });\n\n      const threeSg = interval.signals(model, selCmpts['thr_ee']);\n      expect(threeSg).toEqual(\n        expect.arrayContaining([\n          {\n            name: 'thr_ee_x',\n            value: [],\n            on: [\n              {\n                events: parseSelector('mousedown', 'scope')[0],\n                update: '[x(unit), x(unit)]'\n              },\n              {\n                events: parseSelector('[mousedown, mouseup] > mousemove', 'scope')[0],\n                update: '[thr_ee_x[0], clamp(x(unit), 0, width)]'\n              },\n              {\n                events: parseSelector('keydown', 'scope')[0],\n                update: '[x(unit), x(unit)]'\n              },\n              {\n                events: parseSelector('[keydown, keyup] > keypress', 'scope')[0],\n                update: '[thr_ee_x[0], clamp(x(unit), 0, width)]'\n              },\n              {\n                events: {signal: 'thr_ee_scale_trigger'},\n                update: '[scale(\"x\", thr_ee_Horsepower[0]), scale(\"x\", thr_ee_Horsepower[1])]'\n              }\n            ]\n          },\n          {\n            name: 'thr_ee_Horsepower',\n            on: [\n              {\n                events: {signal: 'thr_ee_x'},\n                update: 'thr_ee_x[0] === thr_ee_x[1] ? null : invert(\"x\", thr_ee_x)'\n              }\n            ]\n          },\n          {\n            name: 'thr_ee_y',\n            value: [],\n            on: [\n              {\n                events: parseSelector('mousedown', 'scope')[0],\n                update: '[y(unit), y(unit)]'\n              },\n              {\n                events: parseSelector('[mousedown, mouseup] > mousemove', 'scope')[0],\n                update: '[thr_ee_y[0], clamp(y(unit), 0, height)]'\n              },\n              {\n                events: parseSelector('keydown', 'scope')[0],\n                update: '[y(unit), y(unit)]'\n              },\n              {\n                events: parseSelector('[keydown, keyup] > keypress', 'scope')[0],\n                update: '[thr_ee_y[0], clamp(y(unit), 0, height)]'\n              },\n              {\n                events: {signal: 'thr_ee_scale_trigger'},\n                update: '[scale(\"y\", thr_ee_Miles_per_Gallon[0]), scale(\"y\", thr_ee_Miles_per_Gallon[1])]'\n              }\n            ]\n          },\n          {\n            name: 'thr_ee_Miles_per_Gallon',\n            on: [\n              {\n                events: {signal: 'thr_ee_y'},\n                update: 'thr_ee_y[0] === thr_ee_y[1] ? null : invert(\"y\", thr_ee_y)'\n              }\n            ]\n          },\n          {\n            name: 'thr_ee_scale_trigger',\n            update:\n              '(!isArray(thr_ee_Horsepower) || (+invert(\"x\", thr_ee_x)[0] === +thr_ee_Horsepower[0] && +invert(\"x\", thr_ee_x)[1] === +thr_ee_Horsepower[1])) && (!isArray(thr_ee_Miles_per_Gallon) || (+invert(\"y\", thr_ee_y)[0] === +thr_ee_Miles_per_Gallon[0] && +invert(\"y\", thr_ee_y)[1] === +thr_ee_Miles_per_Gallon[1])) ? thr_ee_scale_trigger : {}'\n          }\n        ])\n      );\n\n      const fourSg = interval.signals(model, selCmpts['four']);\n      expect(fourSg).toEqual(\n        expect.arrayContaining([\n          {\n            name: 'four_x',\n            init: '[scale(\"x\", 50), scale(\"x\", 70)]',\n            on: [\n              {\n                events: parseSelector('mousedown', 'scope')[0],\n                update: '[x(unit), x(unit)]'\n              },\n              {\n                events: parseSelector('[mousedown, window:mouseup] > window:mousemove!', 'scope')[0],\n                update: '[four_x[0], clamp(x(unit), 0, width)]'\n              },\n              {\n                events: {signal: 'four_scale_trigger'},\n                update: '[scale(\"x\", four_Horsepower[0]), scale(\"x\", four_Horsepower[1])]'\n              }\n            ]\n          },\n          {\n            name: 'four_Horsepower',\n            init: '[50, 70]',\n            on: [\n              {\n                events: {signal: 'four_x'},\n                update: 'four_x[0] === four_x[1] ? null : invert(\"x\", four_x)'\n              }\n            ]\n          },\n          {\n            name: 'four_scale_trigger',\n            update:\n              '(!isArray(four_Horsepower) || (+invert(\"x\", four_x)[0] === +four_Horsepower[0] && +invert(\"x\", four_x)[1] === +four_Horsepower[1])) ? four_scale_trigger : {}'\n          }\n        ])\n      );\n\n      const fiveSg = interval.signals(model, selCmpts['five']);\n      expect(fiveSg).toEqual(\n        expect.arrayContaining([\n          {\n            name: 'five_x',\n            init: '[scale(\"x\", 50), scale(\"x\", 60)]',\n            on: [\n              {\n                events: parseSelector('mousedown', 'scope')[0],\n                update: '[x(unit), x(unit)]'\n              },\n              {\n                events: parseSelector('[mousedown, window:mouseup] > window:mousemove!', 'scope')[0],\n                update: '[five_x[0], clamp(x(unit), 0, width)]'\n              },\n              {\n                events: {signal: 'five_scale_trigger'},\n                update: '[scale(\"x\", five_Horsepower[0]), scale(\"x\", five_Horsepower[1])]'\n              }\n            ]\n          },\n          {\n            name: 'five_Horsepower',\n            init: '[50, 60]',\n            on: [\n              {\n                events: {signal: 'five_x'},\n                update: 'five_x[0] === five_x[1] ? null : invert(\"x\", five_x)'\n              }\n            ]\n          },\n          {\n            name: 'five_y',\n            init: '[scale(\"y\", 23), scale(\"y\", 54)]',\n            on: [\n              {\n                events: parseSelector('mousedown', 'scope')[0],\n                update: '[y(unit), y(unit)]'\n              },\n              {\n                events: parseSelector('[mousedown, window:mouseup] > window:mousemove!', 'scope')[0],\n                update: '[five_y[0], clamp(y(unit), 0, height)]'\n              },\n              {\n                events: {signal: 'five_scale_trigger'},\n                update: '[scale(\"y\", five_Miles_per_Gallon[0]), scale(\"y\", five_Miles_per_Gallon[1])]'\n              }\n            ]\n          },\n          {\n            name: 'five_Miles_per_Gallon',\n            init: '[23, 54]',\n            on: [\n              {\n                events: {signal: 'five_y'},\n                update: 'five_y[0] === five_y[1] ? null : invert(\"y\", five_y)'\n              }\n            ]\n          },\n          {\n            name: 'five_scale_trigger',\n            update:\n              '(!isArray(five_Horsepower) || (+invert(\"x\", five_x)[0] === +five_Horsepower[0] && +invert(\"x\", five_x)[1] === +five_Horsepower[1])) && (!isArray(five_Miles_per_Gallon) || (+invert(\"y\", five_y)[0] === +five_Miles_per_Gallon[0] && +invert(\"y\", five_y)[1] === +five_Miles_per_Gallon[1])) ? five_scale_trigger : {}'\n          }\n        ])\n      );\n\n      const sixSg = interval.signals(model, selCmpts['six']);\n      expect(sixSg).toEqual(\n        expect.arrayContaining([\n          {\n            name: 'six_x',\n            init: '[scale(\"x\", datetime(2000, 10, 5+1, 0, 0, 0, 0)), scale(\"x\", datetime(2001, 1, 13+1, 0, 0, 0, 0))]',\n            on: [\n              {\n                events: parseSelector('mousedown', 'scope')[0],\n                update: '[x(unit), x(unit)]'\n              },\n              {\n                events: parseSelector('[mousedown, window:mouseup] > window:mousemove!', 'scope')[0],\n                update: '[six_x[0], clamp(x(unit), 0, width)]'\n              },\n              {\n                events: {signal: 'six_scale_trigger'},\n                update: '[scale(\"x\", six_Horsepower[0]), scale(\"x\", six_Horsepower[1])]'\n              }\n            ]\n          },\n          {\n            name: 'six_Horsepower',\n            init: '[datetime(2000, 10, 5+1, 0, 0, 0, 0), datetime(2001, 1, 13+1, 0, 0, 0, 0)]',\n            on: [\n              {\n                events: {signal: 'six_x'},\n                update: 'six_x[0] === six_x[1] ? null : invert(\"x\", six_x)'\n              }\n            ]\n          },\n          {\n            name: 'six_scale_trigger',\n            update:\n              '(!isArray(six_Horsepower) || (+invert(\"x\", six_x)[0] === +six_Horsepower[0] && +invert(\"x\", six_x)[1] === +six_Horsepower[1])) ? six_scale_trigger : {}'\n          }\n        ])\n      );\n    });\n\n    it('builds trigger signals', () => {\n      const oneSg = interval.signals(model, selCmpts['one']);\n      expect(oneSg).toContainEqual({\n        name: 'one_tuple',\n        on: [\n          {\n            events: [{signal: 'one_Horsepower'}],\n            update: 'one_Horsepower ? {unit: \"\", fields: one_tuple_fields, values: [one_Horsepower]} : null'\n          }\n        ]\n      });\n\n      const twoSg = interval.signals(model, selCmpts['two']);\n      expect(twoSg).toContainEqual({\n        name: 'two_tuple',\n        on: [\n          {\n            events: [{signal: 'two_Miles_per_Gallon'}],\n            update: 'two_Miles_per_Gallon ? {unit: \"\", fields: two_tuple_fields, values: [two_Miles_per_Gallon]} : null'\n          }\n        ]\n      });\n\n      const threeSg = interval.signals(model, selCmpts['thr_ee']);\n      expect(threeSg).toContainEqual({\n        name: 'thr_ee_tuple',\n        on: [\n          {\n            events: [{signal: 'thr_ee_Horsepower || thr_ee_Miles_per_Gallon'}],\n            update:\n              'thr_ee_Horsepower && thr_ee_Miles_per_Gallon ? {unit: \"\", fields: thr_ee_tuple_fields, values: [thr_ee_Horsepower,thr_ee_Miles_per_Gallon]} : null'\n          }\n        ]\n      });\n\n      const fourSg = interval.signals(model, selCmpts['four']);\n      expect(fourSg).toContainEqual({\n        name: 'four_tuple',\n        init: '{unit: \"\", fields: four_tuple_fields, values: [[50, 70]]}',\n        on: [\n          {\n            events: [{signal: 'four_Horsepower'}],\n            update: 'four_Horsepower ? {unit: \"\", fields: four_tuple_fields, values: [four_Horsepower]} : null'\n          }\n        ]\n      });\n\n      const fiveSg = interval.signals(model, selCmpts['five']);\n      expect(fiveSg).toContainEqual({\n        name: 'five_tuple',\n        init: '{unit: \"\", fields: five_tuple_fields, values: [[50, 60], [23, 54]]}',\n        on: [\n          {\n            events: [{signal: 'five_Horsepower || five_Miles_per_Gallon'}],\n            update:\n              'five_Horsepower && five_Miles_per_Gallon ? {unit: \"\", fields: five_tuple_fields, values: [five_Horsepower,five_Miles_per_Gallon]} : null'\n          }\n        ]\n      });\n    });\n\n    it('namespaces signals when encoding/fields collide', () => {\n      const model2 = parseUnitModel({\n        mark: 'circle',\n        encoding: {\n          x: {field: 'x', type: 'quantitative'},\n          y: {field: 'y', type: 'quantitative'}\n        }\n      });\n\n      model2.parseScale();\n\n      const selCmpts2 = (model2.component.selection = parseUnitSelection(model2, {\n        one: {\n          type: 'interval',\n          encodings: ['x'],\n          translate: false,\n          zoom: false\n        }\n      }));\n\n      const sg = interval.signals(model, selCmpts2['one']);\n      expect(sg[0].name).toEqual('one_x_1');\n      expect(sg[1].name).toEqual('one_x');\n    });\n  });\n\n  it('builds modify signals', () => {\n    const oneExpr = interval.modifyExpr(model, selCmpts['one']);\n    expect(oneExpr).toEqual('one_tuple, true');\n\n    const twoExpr = interval.modifyExpr(model, selCmpts['two']);\n    expect(twoExpr).toEqual('two_tuple, true');\n\n    const threeExpr = interval.modifyExpr(model, selCmpts['thr_ee']);\n    expect(threeExpr).toEqual('thr_ee_tuple, {unit: \"\"}');\n\n    const signals = assembleUnitSelectionSignals(model, []);\n    expect(signals).toEqual(\n      expect.arrayContaining([\n        {\n          name: 'one_modify',\n          update: `modify(\\\"one_store\\\", ${oneExpr})`\n        },\n        {\n          name: 'two_modify',\n          update: `modify(\\\"two_store\\\", ${twoExpr})`\n        },\n        {\n          name: 'thr_ee_modify',\n          update: `modify(\\\"thr_ee_store\\\", ${threeExpr})`\n        }\n      ])\n    );\n  });\n\n  it('builds brush mark', () => {\n    const marks: any[] = [{hello: 'world'}];\n    expect(interval.marks(model, selCmpts['one'], marks)).toEqual([\n      {\n        name: 'one_brush_bg',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: '#333'},\n            fillOpacity: {value: 0.125}\n          },\n          update: {\n            x: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                signal: 'one_x[0]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                value: 0\n              },\n              {\n                value: 0\n              }\n            ],\n            x2: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                signal: 'one_x[1]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y2: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                field: {\n                  group: 'height'\n                }\n              },\n              {\n                value: 0\n              }\n            ]\n          }\n        }\n      },\n      {hello: 'world'},\n      {\n        name: 'one_brush',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: 'transparent'}\n          },\n          update: {\n            stroke: [\n              {\n                test: 'one_x[0] !== one_x[1]',\n                value: 'white'\n              },\n              {\n                value: null\n              }\n            ],\n            x: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                signal: 'one_x[0]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                value: 0\n              },\n              {\n                value: 0\n              }\n            ],\n            x2: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                signal: 'one_x[1]'\n              },\n              {\n                value: 0\n              }\n            ],\n            y2: [\n              {\n                test: 'data(\"one_store\").length && data(\"one_store\")[0].unit === \"\"',\n                field: {\n                  group: 'height'\n                }\n              },\n              {\n                value: 0\n              }\n            ]\n          }\n        }\n      }\n    ]);\n\n    // Scale-bound interval selections should not add a brush mark.\n    expect(interval.marks(model, selCmpts['two'], marks)).toEqual(marks);\n\n    expect(interval.marks(model, selCmpts['thr_ee'], marks)).toEqual([\n      {\n        name: 'thr_ee_brush_bg',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: 'red'},\n            fillOpacity: {value: 0.75}\n          },\n          update: {\n            x: {\n              signal: 'thr_ee_x[0]'\n            },\n            y: {\n              signal: 'thr_ee_y[0]'\n            },\n            x2: {\n              signal: 'thr_ee_x[1]'\n            },\n            y2: {\n              signal: 'thr_ee_y[1]'\n            }\n          }\n        }\n      },\n      {hello: 'world'},\n      {\n        name: 'thr_ee_brush',\n        type: 'rect',\n        clip: true,\n        encode: {\n          enter: {\n            fill: {value: 'transparent'}\n          },\n          update: {\n            stroke: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: 'black'\n              },\n              {value: null}\n            ],\n            strokeWidth: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: 4\n              },\n              {value: null}\n            ],\n            strokeDash: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: [10, 5]\n              },\n              {value: null}\n            ],\n            strokeDashOffset: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: 3\n              },\n              {value: null}\n            ],\n            strokeOpacity: [\n              {\n                test: 'thr_ee_x[0] !== thr_ee_x[1] && thr_ee_y[0] !== thr_ee_y[1]',\n                value: 0.25\n              },\n              {value: null}\n            ],\n            x: {\n              signal: 'thr_ee_x[0]'\n            },\n            y: {\n              signal: 'thr_ee_y[0]'\n            },\n            x2: {\n              signal: 'thr_ee_x[1]'\n            },\n            y2: {\n              signal: 'thr_ee_y[1]'\n            }\n          }\n        }\n      }\n    ]);\n  });\n});\n"]}