{"version":3,"file":"multi.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/multi.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\nimport {\n  assembleUnitSelectionData,\n  assembleUnitSelectionMarks,\n  assembleUnitSelectionSignals\n} from '../../../src/compile/selection/assemble';\nimport multi from '../../../src/compile/selection/multi';\nimport {parseUnitSelection} from '../../../src/compile/selection/parse';\nimport {parseUnitModelWithScale} from '../../util';\n\ndescribe('Multi Selection', () => {\n  const model = parseUnitModelWithScale({\n    mark: 'circle',\n    encoding: {\n      x: {field: 'Horsepower', type: 'quantitative'},\n      y: {field: 'Miles_per_Gallon', type: 'quantitative', bin: true},\n      color: {field: 'Origin', type: 'nominal'}\n    }\n  });\n\n  const selCmpts = (model.component.selection = parseUnitSelection(model, {\n    one: {type: 'multi'},\n    two: {\n      type: 'multi',\n      nearest: true,\n      on: 'mouseover',\n      toggle: 'event.ctrlKey',\n      encodings: ['y', 'color']\n    },\n    'thr-ee': {\n      type: 'multi',\n      fields: ['Horsepower'],\n      init: {Horsepower: 50}\n    },\n    four: {\n      type: 'multi',\n      encodings: ['x', 'color'],\n      init: {Horsepower: 50, color: 'Japan'}\n    },\n    five: {\n      type: 'multi',\n      fields: ['Year', 'Origin'],\n      init: [\n        {\n          Origin: 'Japan',\n          Year: {year: 1970, month: 1, day: 1}\n        },\n        {\n          Origin: 'USA',\n          Year: {year: 1980, month: 1, day: 1}\n        }\n      ]\n    }\n  }));\n\n  it('builds tuple signals', () => {\n    const oneSg = multi.signals(model, selCmpts['one']);\n    expect(oneSg).toEqual([\n      {\n        name: 'one_tuple',\n        on: [\n          {\n            events: selCmpts['one'].events,\n            update:\n              'datum && item().mark.marktype !== \\'group\\' ? {unit: \"\", fields: one_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"_vgsid_\"]]} : null',\n            force: true\n          }\n        ]\n      }\n    ]);\n\n    const twoSg = multi.signals(model, selCmpts['two']);\n    expect(twoSg).toEqual([\n      {\n        name: 'two_tuple',\n        on: [\n          {\n            events: selCmpts['two'].events,\n            update:\n              'datum && item().mark.marktype !== \\'group\\' ? {unit: \"\", fields: two_tuple_fields, values: [[(item().isVoronoi ? datum.datum : datum)[\"bin_maxbins_10_Miles_per_Gallon\"], (item().isVoronoi ? datum.datum : datum)[\"bin_maxbins_10_Miles_per_Gallon_end\"]], (item().isVoronoi ? datum.datum : datum)[\"Origin\"]]} : null',\n            force: true\n          }\n        ]\n      }\n    ]);\n\n    const threeSg = multi.signals(model, selCmpts['thr_ee']);\n    expect(threeSg).toEqual([\n      {\n        name: 'thr_ee_tuple',\n        on: [\n          {\n            events: [{source: 'scope', type: 'click'}],\n            update:\n              'datum && item().mark.marktype !== \\'group\\' ? {unit: \"\", fields: thr_ee_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"Horsepower\"]]} : null',\n            force: true\n          }\n        ]\n      },\n      {\n        name: 'thr_ee_init',\n        init: 'modify(\"thr_ee_store\", [{unit: \"\", fields: thr_ee_tuple_fields, values: [50]}])'\n      }\n    ]);\n\n    const fourSg = multi.signals(model, selCmpts['four']);\n    expect(fourSg).toEqual([\n      {\n        name: 'four_tuple',\n        on: [\n          {\n            events: [{source: 'scope', type: 'click'}],\n            update:\n              'datum && item().mark.marktype !== \\'group\\' ? {unit: \"\", fields: four_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"Horsepower\"], (item().isVoronoi ? datum.datum : datum)[\"Origin\"]]} : null',\n            force: true\n          }\n        ]\n      },\n      {\n        name: 'four_init',\n        init: 'modify(\"four_store\", [{unit: \"\", fields: four_tuple_fields, values: [50, \"Japan\"]}])'\n      }\n    ]);\n\n    const fiveSg = multi.signals(model, selCmpts['five']);\n    expect(fiveSg).toEqual([\n      {\n        name: 'five_tuple',\n        on: [\n          {\n            events: [{source: 'scope', type: 'click'}],\n            update:\n              'datum && item().mark.marktype !== \\'group\\' ? {unit: \"\", fields: five_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"Year\"], (item().isVoronoi ? datum.datum : datum)[\"Origin\"]]} : null',\n            force: true\n          }\n        ]\n      },\n      {\n        name: 'five_init',\n        init:\n          'modify(\"five_store\", [{unit: \"\", fields: five_tuple_fields, values: [datetime(1970, 1, 1+1, 0, 0, 0, 0), \"Japan\"]},{unit: \"\", fields: five_tuple_fields, values: [datetime(1980, 1, 1+1, 0, 0, 0, 0), \"USA\"]}])'\n      }\n    ]);\n\n    const signals = assembleUnitSelectionSignals(model, []);\n    expect(signals).toEqual(expect.arrayContaining([...oneSg, ...twoSg, ...threeSg, ...fourSg, ...fiveSg]));\n  });\n\n  it('builds unit datasets', () => {\n    const data: any[] = [];\n    expect(assembleUnitSelectionData(model, data)).toEqual([\n      {name: 'one_store'},\n      {name: 'two_store'},\n      {name: 'thr_ee_store'},\n      {name: 'four_store'},\n      {name: 'five_store'}\n    ]);\n  });\n\n  it('leaves marks alone', () => {\n    const marks: any[] = [];\n    model.component.selection = {one: selCmpts['one']};\n    expect(assembleUnitSelectionMarks(model, marks)).toEqual(marks);\n  });\n});\n"]}