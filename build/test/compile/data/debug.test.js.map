{"version":3,"file":"debug.test.js","sourceRoot":"","sources":["../../../../test/compile/data/debug.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,IAAI,EAAC,MAAM,iCAAiC,CAAC;AACrD,OAAO,EAAC,cAAc,EAAC,MAAM,mBAAmB,CAAC;AACjD,OAAO,EAAC,YAAY,EAAC,MAAM,sCAAsC,CAAC;AAElE,IAAM,GAAG,GAAG,2OAaV,CAAC;AAEH,QAAQ,CAAC,oBAAoB,EAAE;IAC7B,QAAQ,CAAC,MAAM,EAAE;QACf,EAAE,CAAC,mCAAmC,EAAE;YACtC,cAAc,EAAE,CAAC;YAEjB,IAAM,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;YACpC,aAAa;YACb,IAAM,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {draw} from '../../../src/compile/data/debug';\nimport {resetIdCounter} from '../../../src/util';\nimport {DataFlowNode} from './../../../src/compile/data/dataflow';\n\nconst dot = `digraph DataFlow {\n  rankdir = TB;\n  node [shape=record]\n    \"43\" [\n    label = <DataFlow>;\n    tooltip = \"[43]&#010;44\"\n  ]\n  \"45\" [\n    label = <DataFlow>;\n    tooltip = \"[45]&#010;46\"\n  ]\n\n  \"43\" -> \"45\"\n}`;\n\ndescribe('compile/data/debug', () => {\n  describe('draw', () => {\n    it('should draw simple dataflow graph', () => {\n      resetIdCounter();\n\n      const root = new DataFlowNode(null);\n      // @ts-ignore\n      const node = new DataFlowNode(root);\n      expect(draw([root])).toBe(dot);\n    });\n  });\n});\n"]}