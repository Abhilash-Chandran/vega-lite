{"version":3,"file":"rule.test.js","sourceRoot":"","sources":["../../../../test/compile/mark/rule.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport {COLOR, X, Y} from '../../../src/channel';\nimport {rule} from '../../../src/compile/mark/rule';\nimport {parseUnitModelWithScaleAndLayoutSize} from '../../util';\n\ndescribe('Mark: Rule', () => {\n  describe('without encoding', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {}\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should not show anything', () => {\n      expect(props.x).toBeUndefined();\n      expect(props.y).toBeUndefined();\n    });\n  });\n\n  describe('with x-only', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {x: {field: 'a', type: 'quantitative'}}\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create vertical rule that fits height', () => {\n      expect(props.x).toEqual({scale: X, field: 'a'});\n      expect(props.y).toEqual({field: {group: 'height'}});\n      expect(props.y2).toEqual({value: 0});\n    });\n  });\n\n  describe('with y-only', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {y: {field: 'a', type: 'quantitative'}}\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rule that fits height', () => {\n      expect(props.y).toEqual({scale: Y, field: 'a'});\n      expect(props.x).toEqual({value: 0});\n      expect(props.x2).toEqual({field: {group: 'width'}});\n    });\n  });\n\n  describe('with x and x2 only', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        x: {field: 'a', type: 'quantitative'},\n        x2: {field: 'a2', type: 'quantitative'}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rule on the axis', () => {\n      expect(props.x).toEqual({scale: X, field: 'a'});\n      expect(props.x2).toEqual({scale: X, field: 'a2'});\n      expect(props.y).toEqual({\n        mult: 0.5,\n        signal: 'height'\n      });\n    });\n  });\n\n  describe('with y and y2 only', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        y: {field: 'a', type: 'quantitative'},\n        y2: {field: 'a2', type: 'quantitative'}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rules on the axis', () => {\n      expect(props.y).toEqual({scale: Y, field: 'a'});\n      expect(props.y2).toEqual({scale: Y, field: 'a2'});\n      expect(props.x).toEqual({\n        mult: 0.5,\n        signal: 'width'\n      });\n    });\n  });\n\n  describe('with x, x2, and y', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        x: {field: 'a', type: 'quantitative'},\n        x2: {field: 'a2', type: 'quantitative'},\n        y: {field: 'b', type: 'quantitative'}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rules', () => {\n      expect(props.x).toEqual({scale: X, field: 'a'});\n      expect(props.x2).toEqual({scale: X, field: 'a2'});\n      expect(props.y).toEqual({scale: Y, field: 'b'});\n    });\n  });\n\n  describe('with x, x2, y, and y2', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        x: {field: 'a', type: 'quantitative'},\n        x2: {field: 'a2', type: 'quantitative'},\n        y: {field: 'b', type: 'quantitative'},\n        y2: {field: 'b2', type: 'quantitative'}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create oblique rules', () => {\n      expect(props.x).toEqual({scale: X, field: 'a'});\n      expect(props.x2).toEqual({scale: X, field: 'a2'});\n      expect(props.y).toEqual({scale: Y, field: 'b'});\n      expect(props.y2).toEqual({scale: Y, field: 'b2'});\n    });\n  });\n\n  describe('with x and y', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        x: {field: 'a', type: 'quantitative'},\n        y: {field: 'b', type: 'quantitative'}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create oblique rules', () => {\n      expect(props.x).toEqual({scale: X, field: 'a'});\n      expect(props.y).toEqual({scale: Y, field: 'b'});\n    });\n  });\n\n  describe('with y, y2, and x', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        y: {field: 'a', type: 'quantitative'},\n        y2: {field: 'a2', type: 'quantitative'},\n        x: {field: 'b', type: 'quantitative'}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create vertical rules', () => {\n      expect(props.y).toEqual({scale: Y, field: 'a'});\n      expect(props.y2).toEqual({scale: Y, field: 'a2'});\n      expect(props.x).toEqual({scale: X, field: 'b'});\n    });\n  });\n\n  describe('with nominal x, quantitative y with no y2', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        x: {field: 'a', type: 'ordinal'},\n        y: {field: 'b', type: 'quantitative'}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create vertical rule that emulates bar chart', () => {\n      expect(model.markDef.orient).toEqual('vertical');\n\n      expect(props.x).toEqual({scale: X, field: 'a', band: 0.5});\n      expect(props.y).toEqual({scale: Y, field: 'b'});\n      expect(props.y2).toEqual({scale: Y, value: 0});\n    });\n  });\n\n  describe('with nominal y, quantitative x with no y2', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        y: {field: 'a', type: 'ordinal'},\n        x: {field: 'b', type: 'quantitative'}\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should create horizontal rule that emulates bar chart', () => {\n      expect(model.markDef.orient).toEqual('horizontal');\n\n      expect(props.x).toEqual({scale: X, field: 'b'});\n      expect(props.x2).toEqual({scale: X, value: 0});\n      expect(props.y).toEqual({scale: Y, field: 'a', band: 0.5});\n    });\n  });\n\n  describe('horizontal stacked rule with color', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        y: {field: 'a', type: 'ordinal'},\n        x: {aggregate: 'sum', field: 'b', type: 'quantitative'},\n        color: {field: 'Origin', type: 'nominal'}\n      },\n      config: {\n        stack: 'zero',\n        invalidValues: null\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should have the correct value for x, x2, and color', () => {\n      expect(props.x).toEqual({scale: 'x', field: 'sum_b_end'});\n      expect(props.x2).toEqual({scale: 'x', field: 'sum_b_start'});\n      expect(props.stroke).toEqual({scale: COLOR, field: 'Origin'});\n    });\n  });\n\n  describe('vertical stacked rule with color', () => {\n    const model = parseUnitModelWithScaleAndLayoutSize({\n      mark: 'rule',\n      encoding: {\n        x: {field: 'a', type: 'ordinal'},\n        y: {aggregate: 'sum', field: 'b', type: 'quantitative'},\n        color: {field: 'Origin', type: 'nominal'}\n      },\n      config: {\n        stack: 'zero',\n        invalidValues: null\n      }\n    });\n\n    const props = rule.encodeEntry(model);\n\n    it('should have the correct value for y, y2, and color', () => {\n      expect(props.y).toEqual({scale: 'y', field: 'sum_b_end'});\n      expect(props.y2).toEqual({scale: 'y', field: 'sum_b_start'});\n      expect(props.stroke).toEqual({scale: COLOR, field: 'Origin'});\n    });\n  });\n});\n"]}