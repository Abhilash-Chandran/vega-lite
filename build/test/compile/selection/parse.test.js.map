{"version":3,"file":"parse.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/parse.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable quotemark */\n\nimport {assert} from 'chai';\nimport {selector as parseSelector} from 'vega-event-selector';\nimport * as selection from '../../../src/compile/selection/selection';\nimport {keys} from '../../../src/util';\nimport {parseUnitModel} from '../../util';\n\ndescribe('Selection', () => {\n  const model = parseUnitModel({\n    mark: 'circle',\n    encoding: {\n      x: {field: 'Horsepower', type: 'quantitative'},\n      y: {field: 'Miles_per_Gallon', type: 'quantitative'},\n      color: {field: 'Origin', type: 'nominal'}\n    }\n  });\n\n  it('parses default selection definitions', () => {\n    const component = selection.parseUnitSelection(model, {\n      one: {type: 'single'},\n      two: {type: 'multi'},\n      three: {type: 'interval'}\n    });\n\n    assert.sameMembers(keys(component), ['one', 'two', 'three']);\n\n    assert.equal(component.one.name, 'one');\n    assert.equal(component.one.type, 'single');\n    assert.sameDeepMembers(component['one'].project, [{field: '_vgsid_', channel: null}]);\n    assert.sameDeepMembers(component['one'].events, parseSelector('click', 'scope'));\n\n    assert.equal(component.two.name, 'two');\n    assert.equal(component.two.type, 'multi');\n    assert.equal(component.two.toggle, 'event.shiftKey');\n    assert.sameDeepMembers(component['two'].project, [{field: '_vgsid_', channel: null}]);\n    assert.sameDeepMembers(component['two'].events, parseSelector('click', 'scope'));\n\n    assert.equal(component.three.name, 'three');\n    assert.equal(component.three.type, 'interval');\n    assert.equal(component.three.translate, '[mousedown, window:mouseup] > window:mousemove!');\n    assert.equal(component.three.zoom, 'wheel!');\n    assert.sameDeepMembers<selection.ProjectComponent>(component['three'].project, [\n      {field: 'Horsepower', channel: 'x'},\n      {field: 'Miles_per_Gallon', channel: 'y'}\n    ]);\n    assert.sameDeepMembers(\n      component['three'].events,\n      parseSelector('[mousedown, window:mouseup] > window:mousemove!', 'scope')\n    );\n  });\n\n  it('supports inline default overrides', () => {\n    const component = selection.parseUnitSelection(model, {\n      one: {\n        type: 'single',\n        on: 'dblclick',\n        fields: ['Cylinders']\n      },\n      two: {\n        type: 'multi',\n        on: 'mouseover',\n        toggle: 'event.ctrlKey',\n        encodings: ['color']\n      },\n      three: {\n        type: 'interval',\n        on: '[mousedown[!event.shiftKey], mouseup] > mousemove',\n        encodings: ['y'],\n        translate: false,\n        zoom: 'wheel[event.altKey]'\n      }\n    });\n\n    assert.sameMembers(keys(component), ['one', 'two', 'three']);\n\n    assert.equal(component.one.name, 'one');\n    assert.equal(component.one.type, 'single');\n    assert.sameDeepMembers(component['one'].project, [{field: 'Cylinders', channel: null}]);\n    assert.sameDeepMembers(component['one'].events, parseSelector('dblclick', 'scope'));\n\n    assert.equal(component.two.name, 'two');\n    assert.equal(component.two.type, 'multi');\n    assert.equal(component.two.toggle, 'event.ctrlKey');\n    assert.sameDeepMembers<selection.ProjectComponent>(component['two'].project, [{field: 'Origin', channel: 'color'}]);\n    assert.sameDeepMembers(component['two'].events, parseSelector('mouseover', 'scope'));\n\n    assert.equal(component.three.name, 'three');\n    assert.equal(component.three.type, 'interval');\n    assert.equal(component.three.translate, false);\n    assert.equal(component.three.zoom, 'wheel[event.altKey]');\n    assert.sameDeepMembers<selection.ProjectComponent>(component['three'].project, [\n      {field: 'Miles_per_Gallon', channel: 'y'}\n    ]);\n    assert.sameDeepMembers(\n      component['three'].events,\n      parseSelector('[mousedown[!event.shiftKey], mouseup] > mousemove', 'scope')\n    );\n  });\n\n  it('respects selection configs', () => {\n    model.config.selection = {\n      single: {on: 'dblclick', fields: ['Cylinders']},\n      multi: {on: 'mouseover', encodings: ['color'], toggle: 'event.ctrlKey'},\n      interval: {\n        on: '[mousedown[!event.shiftKey], mouseup] > mousemove',\n        encodings: ['y'],\n        zoom: 'wheel[event.altKey]'\n      }\n    };\n\n    const component = selection.parseUnitSelection(model, {\n      one: {type: 'single'},\n      two: {type: 'multi'},\n      three: {type: 'interval'}\n    });\n\n    assert.sameMembers(keys(component), ['one', 'two', 'three']);\n\n    assert.equal(component.one.name, 'one');\n    assert.equal(component.one.type, 'single');\n    assert.sameDeepMembers(component['one'].project, [{field: 'Cylinders', channel: null}]);\n    assert.sameDeepMembers(component['one'].events, parseSelector('dblclick', 'scope'));\n\n    assert.equal(component.two.name, 'two');\n    assert.equal(component.two.type, 'multi');\n    assert.equal(component.two.toggle, 'event.ctrlKey');\n    assert.sameDeepMembers<selection.ProjectComponent>(component['two'].project, [{field: 'Origin', channel: 'color'}]);\n    assert.sameDeepMembers(component['two'].events, parseSelector('mouseover', 'scope'));\n\n    assert.equal(component.three.name, 'three');\n    assert.equal(component.three.type, 'interval');\n    assert(!component.three.translate);\n    assert.equal(component.three.zoom, 'wheel[event.altKey]');\n    assert.sameDeepMembers<selection.ProjectComponent>(component['three'].project, [\n      {field: 'Miles_per_Gallon', channel: 'y'}\n    ]);\n    assert.sameDeepMembers(\n      component['three'].events,\n      parseSelector('[mousedown[!event.shiftKey], mouseup] > mousemove', 'scope')\n    );\n  });\n});\n"]}