{"version":3,"file":"toggle.test.js","sourceRoot":"","sources":["../../test-runtime/toggle.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {assert} from 'chai';\nimport {stringValue} from 'vega-util';\nimport {compositeTypes, embedFn, parentSelector, spec, testRenderFn} from './util';\n\nconst hits = {\n  qq: [8, 19, 13, 21],\n  qq_clear: [5, 16],\n  bins: [4, 29, 16, 9],\n  bins_clear: [18, 7],\n  composite: [1, 3, 5, 7, 8, 9]\n};\n\nfunction toggle(key: string, idx: number, shiftKey: boolean, parent?: string) {\n  const fn = key.match('_clear') ? 'clear' : 'pt';\n  return `return ${fn}(${hits[key][idx]}, ${stringValue(parent)}, ${!!shiftKey})`;\n}\n\ndescribe('Toggle multi selections at runtime', () => {\n  const type = 'multi';\n  const embed = embedFn(browser);\n  const testRender = testRenderFn(browser, 'multi/toggle');\n\n  it('should toggle values into/out of the store', () => {\n    embed(spec('unit', 0, {type}));\n    browser.execute(toggle('qq', 0, false));\n    browser.execute(toggle('qq', 1, true));\n    let store = browser.execute(toggle('qq', 2, true)).value;\n    assert.lengthOf(store, 3);\n    testRender('click_0');\n\n    store = browser.execute(toggle('qq', 2, true)).value;\n    assert.lengthOf(store, 2);\n    testRender('click_1');\n\n    store = browser.execute(toggle('qq', 3, false)).value;\n    assert.lengthOf(store, 1);\n    testRender('click_2');\n  });\n\n  it('should clear out the store w/o shiftKey', () => {\n    embed(spec('unit', 1, {type}));\n    browser.execute(toggle('qq', 0, false));\n    browser.execute(toggle('qq', 1, true));\n    browser.execute(toggle('qq', 2, true));\n    browser.execute(toggle('qq', 3, true));\n    testRender(`clear_0`);\n\n    let store = browser.execute(toggle('qq_clear', 0, true)).value;\n    assert.lengthOf(store, 4);\n    testRender(`clear_1`);\n\n    store = browser.execute(toggle('qq_clear', 1, false)).value;\n    assert.lengthOf(store, 0);\n    testRender(`clear_2`);\n  });\n\n  it('should toggle binned fields', () => {\n    embed(spec('unit', 0, {type, encodings: ['x', 'y']}, {x: {bin: true}, y: {bin: true}}));\n\n    browser.execute(toggle('bins', 0, false));\n    browser.execute(toggle('bins', 1, true));\n    let store = browser.execute(toggle('bins', 2, true)).value;\n    assert.lengthOf(store, 3);\n    testRender('bins_0');\n\n    store = browser.execute(toggle('bins', 2, true)).value;\n    assert.lengthOf(store, 2);\n    testRender('bins_1');\n\n    store = browser.execute(toggle('bins', 3, false)).value;\n    assert.lengthOf(store, 1);\n    testRender('bins_2');\n  });\n\n  compositeTypes.forEach((specType, idx) => {\n    it(`should toggle in ${specType} views`, () => {\n      embed(spec(specType, idx, {type, resolve: 'union'}));\n      let length = 0;\n      for (let i = 0; i < hits.composite.length; i++) {\n        const parent = parentSelector(specType, i % 3);\n        const store = browser.execute(toggle('composite', i, true, parent)).value;\n        assert.equal((length = store.length), i + 1);\n        if (i % 3 === 2) {\n          testRender(`${specType}_${i}`);\n        }\n      }\n\n      for (let i = 0; i < hits.composite.length; i++) {\n        const even = i % 2 === 0;\n        const parent = parentSelector(specType, ~~(i / 2));\n        const store = browser.execute(toggle('qq_clear', 0, even, parent)).value;\n        assert.lengthOf(store, even ? length : (length = length - 2), `iter: ${i}`);\n        if (!even) {\n          testRender(`${specType}_clear_${i}`);\n        }\n      }\n    });\n  });\n});\n"]}