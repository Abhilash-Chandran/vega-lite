{"version":3,"file":"assemble.test.js","sourceRoot":"","sources":["../../../../test/compile/axis/assemble.test.ts"],"names":[],"mappings":"AAAA,8BAA8B;AAE9B,OAAO,EAAC,YAAY,EAAC,MAAM,oCAAoC,CAAC;AAChE,OAAO,EAAC,aAAa,EAAC,MAAM,qCAAqC,CAAC;AAClE,OAAO,EAAC,aAAa,EAAC,MAAM,qBAAqB,CAAC;AAElD,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;YACxD,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC;gBACjC,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE;oBACN,IAAI,EAAE,EAAC,MAAM,EAAE,EAAC,MAAM,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,EAAC;oBACxC,MAAM,EAAE,EAAC,MAAM,EAAE,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,EAAC;iBACzC;aACF,CAAC,CAAC;YACH,MAAM,IAAI,GAAG,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAC9C,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC;gBACjC,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,CAAC;aACV,CAAC,CAAC;YACH,MAAM,IAAI,GAAG,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC;gBACjC,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE;oBACN,IAAI,EAAE,EAAC,MAAM,EAAE,EAAC,MAAM,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,EAAC;oBACxC,MAAM,EAAE,EAAC,MAAM,EAAE,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,KAAK,EAAC,EAAC,EAAC;iBACzC;aACF,CAAC,CAAC;YACH,MAAM,IAAI,GAAG,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC5C,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC;gBACjC,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,CAAC,EAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAC,EAAE,EAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAC,CAAC;aACxE,CAAC,CAAC;YACH,MAAM,IAAI,GAAG,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* tslint:disable:quotemark */\n\nimport {assembleAxis} from '../../../src/compile/axis/assemble';\nimport {AxisComponent} from '../../../src/compile/axis/component';\nimport {defaultConfig} from '../../../src/config';\n\ndescribe('compile/axis/assemble', () => {\n  describe('assembleAxis()', () => {\n    it('outputs grid axis with only grid encode blocks', () => {\n      const axisCmpt = new AxisComponent({\n        orient: 'left',\n        grid: true,\n        encode: {\n          grid: {update: {stroke: {value: 'red'}}},\n          labels: {update: {fill: {value: 'red'}}}\n        }\n      });\n      const axis = assembleAxis(axisCmpt, 'grid', defaultConfig);\n      expect(axis.encode.labels).toBeUndefined();\n    });\n\n    it('outputs grid axis with custom zindex', () => {\n      const axisCmpt = new AxisComponent({\n        orient: 'left',\n        grid: true,\n        zindex: 3\n      });\n      const axis = assembleAxis(axisCmpt, 'grid', defaultConfig);\n      expect(axis.zindex).toEqual(3);\n    });\n\n    it('outputs main axis without grid encode blocks', () => {\n      const axisCmpt = new AxisComponent({\n        orient: 'left',\n        encode: {\n          grid: {update: {stroke: {value: 'red'}}},\n          labels: {update: {fill: {value: 'red'}}}\n        }\n      });\n      const axis = assembleAxis(axisCmpt, 'main', defaultConfig);\n      expect(axis.encode.grid).toBeUndefined();\n    });\n\n    it('correctly assemble title fieldDefs', () => {\n      const axisCmpt = new AxisComponent({\n        orient: 'left',\n        title: [{aggregate: 'max', field: 'a'}, {aggregate: 'min', field: 'b'}]\n      });\n      const axis = assembleAxis(axisCmpt, 'main', defaultConfig);\n      expect(axis.title).toEqual('Max of a, Min of b');\n    });\n  });\n});\n"]}