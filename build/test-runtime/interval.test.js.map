{"version":3,"file":"interval.test.js","sourceRoot":"","sources":["../../test-runtime/interval.test.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,MAAM,CAAC;AAC5B,OAAO,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,IAAI,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAC,MAAM,QAAQ,CAAC;AAEtF,QAAQ,CAAC,8CAA8C,EAAE;IACvD,IAAM,IAAI,GAAG,UAAU,CAAC;IACxB,IAAM,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC;IACjC,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;IAC/B,IAAM,UAAU,GAAG,YAAY,CAAC,OAAO,EAAK,IAAI,UAAO,CAAC,CAAC;IAEzD,EAAE,CAAC,iCAAiC,EAAE;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,IAAI,MAAA,EAAC,CAAC,CAAC,CAAC;YAC/B,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACtD,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC/C,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACjD,UAAU,CAAC,UAAQ,CAAG,CAAC,CAAC;SACzB;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAC/B,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,IAAI,MAAA,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC;QACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACtD,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC/C,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACjD,UAAU,CAAC,OAAK,CAAG,CAAC,CAAC;SACtB;QAED,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,IAAI,MAAA,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC,CAAC;QACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACtD,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC/C,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACjD,UAAU,CAAC,OAAK,CAAG,CAAC,CAAC;SACtB;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,IAAI,MAAA,EAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACpD,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAE1B,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACtD,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1B,UAAU,CAAC,WAAS,CAAG,CAAC,CAAC;SAC1B;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE;QACrC,KAAK,CACH,IAAI,CACF,MAAM,EACN,CAAC,EACD,EAAC,IAAI,MAAA,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,EAAC,EACxB;YACE,CAAC,EAAE,EAAC,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAC;YACzD,CAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC;YACd,KAAK,EAAE,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC;SACrD,CACF,CACF,CAAC;QACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAM,OAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACtD,MAAM,CAAC,QAAQ,CAAC,OAAK,EAAE,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACvC,2DAA2D;YAC3D,MAAM,CAAC,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACjD,UAAU,CAAC,UAAQ,CAAG,CAAC,CAAC;SACzB;QAED,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5D,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE;QAC9C,IAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAM,QAAQ,GAAG;YACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACpD,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;SAC7C,CAAC;QAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,IAAI,MAAA,EAAC,EAAE,EAAC,CAAC,EAAE,EAAC,IAAI,EAAE,SAAS,EAAC,EAAE,CAAC,EAAE,EAAC,IAAI,EAAE,SAAS,EAAC,EAAC,CAAC,CAAC,CAAC;YAC7E,IAAM,OAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACtD,MAAM,CAAC,QAAQ,CAAC,OAAK,EAAE,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,WAAW,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,WAAW,CAAC,OAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,UAAU,CAAC,SAAO,CAAG,CAAC,CAAC;SACxB;QAED,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5D,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE;QACvC,IAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,sBAAK,CAAC,IAAE,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAE,EAAhC,CAAgC,CAAC,CAAC;QACjE,IAAM,QAAQ,GAAG,wCAAwC,CAAC;QAE1D,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,IAAI,MAAA,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,EAAC,EAAE,EAAC,MAAM,QAAA,EAAE,CAAC,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,EAAC,CAAC,CAAC,CAAC;QAClF,IAAI,OAAO,GAAG,CAAC,CAAC,aAAa,EAAE,aAAa,CAAC,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC;QAC/E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,KAAK,CAAC;YACjE,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,UAAU,CAAC,cAAY,CAAG,CAAC,CAAC;SAC7B;QAED,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5D,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE5B,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,IAAI,MAAA,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,EAAC,EAAE,EAAC,MAAM,QAAA,EAAE,CAAC,EAAE,EAAC,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAC,EAAC,CAAC,CAAC,CAAC;QAEnG,OAAO,GAAG,CAAC,CAAC,aAAa,EAAE,aAAa,CAAC,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC;QAC3E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,KAAK,CAAC;YACjE,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,UAAU,CAAC,iBAAe,CAAG,CAAC,CAAC;SAChC;QAED,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACxD,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE;QACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,KAAK,CACH,IAAI,CACF,MAAM,EACN,CAAC,EACD,EAAC,IAAI,MAAA,EAAC,EACN;gBACE,CAAC,EAAE,EAAC,KAAK,EAAE,EAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAC,EAAC;gBACxC,CAAC,EAAE,EAAC,KAAK,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,EAAC;aAC1B,CACF,CACF,CAAC;YACF,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACtD,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACjD,UAAU,CAAC,YAAU,CAAG,CAAC,CAAC;SAC3B;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {assert} from 'chai';\nimport {brush, embedFn, hits as hitsMaster, spec, testRenderFn, tuples} from './util';\n\ndescribe('interval selections at runtime in unit views', () => {\n  const type = 'interval';\n  const hits = hitsMaster.interval;\n  const embed = embedFn(browser);\n  const testRender = testRenderFn(browser, `${type}/unit`);\n\n  it('should add extents to the store', () => {\n    for (let i = 0; i < hits.drag.length; i++) {\n      embed(spec('unit', i, {type}));\n      const store = browser.execute(brush('drag', i)).value;\n      assert.lengthOf(store, 1);\n      assert.lengthOf(store[0].intervals, 2);\n      assert.equal(store[0].intervals[0].encoding, 'x');\n      assert.equal(store[0].intervals[0].field, 'a');\n      assert.equal(store[0].intervals[1].encoding, 'y');\n      assert.equal(store[0].intervals[1].field, 'b');\n      assert.lengthOf(store[0].intervals[0].extent, 2);\n      assert.lengthOf(store[0].intervals[1].extent, 2);\n      testRender(`drag_${i}`);\n    }\n  });\n\n  it('should respect projections', () => {\n    embed(spec('unit', 0, {type, encodings: ['x']}));\n    for (let i = 0; i < hits.drag.length; i++) {\n      const store = browser.execute(brush('drag', i)).value;\n      assert.lengthOf(store, 1);\n      assert.lengthOf(store[0].intervals, 1);\n      assert.equal(store[0].intervals[0].encoding, 'x');\n      assert.equal(store[0].intervals[0].field, 'a');\n      assert.lengthOf(store[0].intervals[0].extent, 2);\n      testRender(`x_${i}`);\n    }\n\n    embed(spec('unit', 1, {type, encodings: ['y']}));\n    for (let i = 0; i < hits.drag.length; i++) {\n      const store = browser.execute(brush('drag', i)).value;\n      assert.lengthOf(store, 1);\n      assert.lengthOf(store[0].intervals, 1);\n      assert.equal(store[0].intervals[0].encoding, 'y');\n      assert.equal(store[0].intervals[0].field, 'b');\n      assert.lengthOf(store[0].intervals[0].extent, 2);\n      testRender(`y_${i}`);\n    }\n  });\n\n  it('should clear out stored extents', () => {\n    for (let i = 0; i < hits.drag_clear.length; i++) {\n      embed(spec('unit', i, {type}));\n      let store = browser.execute(brush('drag', i)).value;\n      assert.lengthOf(store, 1);\n\n      store = browser.execute(brush('drag_clear', i)).value;\n      assert.lengthOf(store, 0);\n      testRender(`clear_${i}`);\n    }\n  });\n\n  it('should brush over binned domains', () => {\n    embed(\n      spec(\n        'unit',\n        1,\n        {type, encodings: ['y']},\n        {\n          x: {aggregate: 'count', field: '*', type: 'quantitative'},\n          y: {bin: true},\n          color: {value: 'steelblue', field: null, type: null}\n        }\n      )\n    );\n    for (let i = 0; i < hits.bins.length; i++) {\n      const store = browser.execute(brush('bins', i)).value;\n      assert.lengthOf(store, 1);\n      assert.lengthOf(store[0].intervals, 1);\n      // length == 2 indicates a quantitative scale was inverted.\n      assert.lengthOf(store[0].intervals[0].extent, 2);\n      testRender(`bins_${i}`);\n    }\n\n    const store = browser.execute(brush('bins_clear', 0)).value;\n    assert.lengthOf(store, 0);\n  });\n\n  it('should brush over ordinal/nominal domains', () => {\n    const xextents = [[2, 3, 4], [6, 7, 8]];\n    const yextents = [\n      [48, 49, 52, 53, 54, 55, 66, 67, 68, 76, 81, 87, 91],\n      [16, 17, 19, 23, 24, 27, 28, 35, 39, 43, 48]\n    ];\n\n    for (let i = 0; i < hits.drag.length; i++) {\n      embed(spec('unit', i, {type}, {x: {type: 'ordinal'}, y: {type: 'nominal'}}));\n      const store = browser.execute(brush('drag', i)).value;\n      assert.lengthOf(store, 1);\n      assert.lengthOf(store[0].intervals, 2);\n      assert.sameMembers(store[0].intervals[0].extent, xextents[i]);\n      assert.sameMembers(store[0].intervals[1].extent, yextents[i]);\n      testRender(`ord_${i}`);\n    }\n\n    const store = browser.execute(brush('drag_clear', 0)).value;\n    assert.lengthOf(store, 0);\n  });\n\n  it('should brush over temporal domains', () => {\n    const values = tuples.map(d => ({...d, a: new Date(2017, d.a)}));\n    const toNumber = '[0].intervals[0].extent.map((d) => +d)';\n\n    embed(spec('unit', 0, {type, encodings: ['x']}, {values, x: {type: 'temporal'}}));\n    let extents = [[1485969714000, 1493634384000], [1496346498000, 1504364922000]];\n    for (let i = 0; i < hits.drag.length; i++) {\n      const store = browser.execute(brush('drag', i) + toNumber).value;\n      assert.sameMembers(store, extents[i]);\n      testRender(`temporal_${i}`);\n    }\n\n    let cleared = browser.execute(brush('drag_clear', 0)).value;\n    assert.lengthOf(cleared, 0);\n\n    embed(spec('unit', 1, {type, encodings: ['x']}, {values, x: {type: 'temporal', timeUnit: 'day'}}));\n\n    extents = [[1136190528000, 1136361600000], [1136449728000, 1136535264000]];\n    for (let i = 0; i < hits.drag.length; i++) {\n      const store = browser.execute(brush('drag', i) + toNumber).value;\n      assert.sameMembers(store, extents[i]);\n      testRender(`dayTimeUnit_${i}`);\n    }\n\n    cleared = browser.execute(brush('drag_clear', 0)).value;\n    assert.lengthOf(cleared, 0);\n  });\n\n  it('should brush over log/pow scales', () => {\n    for (let i = 0; i < hits.drag.length; i++) {\n      embed(\n        spec(\n          'unit',\n          i,\n          {type},\n          {\n            x: {scale: {type: 'pow', exponent: 1.5}},\n            y: {scale: {type: 'log'}}\n          }\n        )\n      );\n      const store = browser.execute(brush('drag', i)).value;\n      assert.lengthOf(store, 1);\n      assert.lengthOf(store[0].intervals, 2);\n      assert.lengthOf(store[0].intervals[0].extent, 2);\n      assert.lengthOf(store[0].intervals[1].extent, 2);\n      testRender(`logpow_${i}`);\n    }\n  });\n});\n"]}