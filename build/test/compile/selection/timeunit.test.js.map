{"version":3,"file":"timeunit.test.js","sourceRoot":"","sources":["../../../../test/compile/selection/timeunit.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:quotemark */\n\nimport {assert} from 'chai';\nimport {assembleRootData} from '../../../src/compile/data/assemble';\nimport {optimizeDataflow} from '../../../src/compile/data/optimize';\nimport {TimeUnitNode} from '../../../src/compile/data/timeunit';\nimport {Model} from '../../../src/compile/model';\nimport * as selection from '../../../src/compile/selection/selection';\nimport {NormalizedUnitSpec} from '../../../src/spec';\nimport {parseModel, parseUnitModel} from '../../util';\n\nfunction getData(model: Model) {\n  optimizeDataflow(model.component.data);\n  return assembleRootData(model.component.data, {});\n}\n\nfunction getModel(unit2: NormalizedUnitSpec) {\n  const model = parseModel({\n    data: {\n      values: [\n        {date: 'Sun, 01 Jan 2012 23:00:01', price: 150},\n        {date: 'Sun, 02 Jan 2012 00:10:02', price: 100},\n        {date: 'Sun, 02 Jan 2012 01:20:03', price: 170},\n        {date: 'Sun, 02 Jan 2012 02:30:04', price: 165},\n        {date: 'Sun, 02 Jan 2012 03:40:05', price: 200}\n      ]\n    },\n    hconcat: [\n      {\n        mark: 'point',\n        selection: {\n          two: {type: 'single', encodings: ['x', 'y']}\n        },\n        encoding: {\n          x: {\n            field: 'date',\n            type: 'temporal',\n            timeUnit: 'seconds'\n          },\n          y: {field: 'price', type: 'quantitative'}\n        }\n      },\n      unit2\n    ]\n  });\n  model.parse();\n  return model;\n}\n\ndescribe('Selection time unit', () => {\n  it('dataflow nodes are constructed', () => {\n    const model = parseUnitModel({\n      mark: 'point',\n      encoding: {\n        x: {field: 'date', type: 'temporal', timeUnit: 'seconds'},\n        y: {field: 'date', type: 'temporal', timeUnit: 'minutes'}\n      }\n    });\n    const selCmpts = (model.component.selection = selection.parseUnitSelection(model, {\n      one: {type: 'single'},\n      two: {type: 'single', encodings: ['x', 'y']}\n    }));\n\n    assert.isUndefined(selCmpts['one'].timeUnit);\n    assert.instanceOf(selCmpts['two'].timeUnit, TimeUnitNode);\n\n    const as = selCmpts['two'].timeUnit.assemble().map(tx => tx.as);\n    assert.sameDeepMembers(as, ['seconds_date', 'minutes_date']);\n  });\n\n  it('is added with conditional encodings', () => {\n    const model = getModel({\n      mark: 'point',\n      encoding: {\n        x: {\n          field: 'date',\n          type: 'temporal',\n          timeUnit: 'minutes'\n        },\n        y: {field: 'price', type: 'quantitative'},\n        color: {\n          condition: {selection: 'two', value: 'goldenrod'},\n          value: 'steelblue'\n        }\n      }\n    });\n\n    const data2 = getData(model).filter(d => d.name === 'data_2')[0].transform;\n    assert.equal(data2.filter(tx => tx.type === 'formula' && tx.as === 'seconds_date').length, 1);\n  });\n\n  it('is added before selection filters', () => {\n    const model = getModel({\n      transform: [{filter: {selection: 'two'}}],\n      mark: 'point',\n      encoding: {\n        x: {\n          field: 'date',\n          type: 'temporal',\n          timeUnit: 'minutes'\n        },\n        y: {field: 'price', type: 'quantitative'}\n      }\n    });\n    const data0 = getData(model).filter(d => d.name === 'data_0')[0].transform;\n    const data1 = getData(model).filter(d => d.name === 'data_1')[0].transform;\n    let tuIdx = -1;\n    let selIdx = -1;\n    data0.forEach((tx, idx) => {\n      if (tx.type === 'formula' && tx.as === 'seconds_date') {\n        tuIdx = idx;\n      }\n    });\n\n    data1.forEach((tx, idx) => {\n      if (tx.type === 'filter' && tx.expr.indexOf('vlSingle') >= 0) {\n        selIdx = idx;\n      }\n    });\n\n    assert.notEqual(tuIdx, -1);\n    assert.notEqual(selIdx, -1);\n  });\n\n  it('removes duplicate time unit formulae', () => {\n    const model = getModel({\n      transform: [{filter: {selection: 'two'}}],\n      mark: 'point',\n      encoding: {\n        x: {\n          field: 'date',\n          type: 'temporal',\n          timeUnit: 'seconds'\n        },\n        y: {field: 'price', type: 'quantitative'}\n      }\n    });\n\n    const data2 = getData(model).filter(d => d.name === 'data_2')[0].transform;\n    assert.equal(data2.filter(tx => tx.type === 'formula' && tx.as === 'seconds_date').length, 1);\n  });\n});\n"]}